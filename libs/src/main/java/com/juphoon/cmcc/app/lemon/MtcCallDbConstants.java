/**
 * @file MtcCallDbConstants.java
 * @brief MtcCallDbConstants constants
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.cmcc.app.lemon;

/**
 * @brief MtcCallDbConstants constants
 */
public interface MtcCallDbConstants {
  public final static int MTC_PRIVACY_NONE = 0x01; /**< @brief no privacy support */
  public final static int MTC_PRIVACY_ID = 0x02; /**< @brief using privacy id */
  public final static int MTC_PRIVACY_HEADER = 0x03; /**< @brief using privacy header */
  public final static int MTC_PRIVACY_SESSION = 0x04; /**< @brief using privacy session */
  public final static int MTC_PRIVACY_CRITICAL = 0x05; /**< @brief using privacy critical */
  // EN_MTC_DB_DTMF_TYPE 
  public final static int EN_MTC_DB_DTMF_AUTO = 0; /**< @brief auto select inband and outband */
  public final static int EN_MTC_DB_DTMF_INBAND = EN_MTC_DB_DTMF_AUTO + 1; /**< @brief inband dtmf */
  public final static int EN_MTC_DB_DTMF_OUTBAND = EN_MTC_DB_DTMF_INBAND + 1; /**< @brief rfc2833 */
  public final static int EN_MTC_DB_DTMF_INFO = EN_MTC_DB_DTMF_OUTBAND + 1; /**< @brief INFO message(CISCO format) */
  public final static int EN_MTC_DB_DTMF_INFO_HW = EN_MTC_DB_DTMF_INFO + 1; /**< @brief INFO message(Huawei format) */

  // EN_MTC_ENCODING_TYPE 
  public final static int EN_MTC_ENCODING_H264 = 0; /**< @brief H.264 */
  public final static int EN_MTC_ENCODING_VP8 = EN_MTC_ENCODING_H264 + 1; /**< @brief VP8 */

  // EN_MTC_DB_ARS_TYPE 
  public final static int EN_MTC_DB_ARS_LD = 0; /**< @brief Low Difinition */
  public final static int EN_MTC_DB_ARS_SD = EN_MTC_DB_ARS_LD + 1; /**< @brief Standard Difinition */
  public final static int EN_MTC_DB_ARS_HD = EN_MTC_DB_ARS_SD + 1; /**< @brief High Difinition */

  // EN_MTC_DB_NET_TYPE 
  public final static int EN_MTC_DB_NET_3G = 0; /**< @brief 3G */
  public final static int EN_MTC_DB_NET_LAN = EN_MTC_DB_NET_3G + 1; /**< @brief LAN */
  public final static int EN_MTC_DB_NET_WIFI = EN_MTC_DB_NET_LAN + 1; /**< @brief WIFI */

  // EN_MTC_DB_H264_PROFILE_TYPE 
  public final static int EN_MTC_DB_H264_PROFILE_BASELINE = 0; /**< @brief H264 baseline profile */
  public final static int EN_MTC_DB_H264_PROFILE_MAIN = EN_MTC_DB_H264_PROFILE_BASELINE + 1; /**< @brief H264 main profile */
  public final static int EN_MTC_DB_H264_PROFILE_HIGH = EN_MTC_DB_H264_PROFILE_MAIN + 1; /**< @brief H264 high profile */
  public final static int EN_MTC_DB_H264_PROFILE_NOT_SUPPORT = EN_MTC_DB_H264_PROFILE_HIGH + 1; /**< @brief H264 profile not support */

  // EN_MTC_DB_H264_CONSTRAINT_SETS_TYPE 
  public final static int EN_MTC_DB_H264_CONSTRAINT_SETS0 = 0; /**< @brief H264 constraint sets 0 */
  public final static int EN_MTC_DB_H264_CONSTRAINT_SETS1 = EN_MTC_DB_H264_CONSTRAINT_SETS0 + 1; /**< @brief H264 constraint sets 1 */
  public final static int EN_MTC_DB_H264_CONSTRAINT_SETS2 = EN_MTC_DB_H264_CONSTRAINT_SETS1 + 1; /**< @brief H264 constraint sets 2 */
  public final static int EN_MTC_DB_H264_CONSTRAINT_SETS3 = EN_MTC_DB_H264_CONSTRAINT_SETS2 + 1; /**< @brief H264 constraint sets 3 */

  // EN_MTC_DB_H264_PACKET_MODE_TYPE 
  public final static int EN_MTC_DB_H264_PACKET_MODE_0 = 0; /**< @brief H264 packet mode 0 */
  public final static int EN_MTC_DB_H264_PACKET_MODE_1 = EN_MTC_DB_H264_PACKET_MODE_0 + 1; /**< @brief H264 packet mode 1 */

  // EN_MTC_DB_SESSION_TIME_TYPE 
  public final static int EN_MTC_DB_SESSION_TIME_OFF = 0; /**< @brief Session timer off*/
  public final static int EN_MTC_DB_SESSION_TIME_NEGO = EN_MTC_DB_SESSION_TIME_OFF + 1; /**< @brief Session timer negotiation */
  public final static int EN_MTC_DB_SESSION_TIME_FORCE = EN_MTC_DB_SESSION_TIME_NEGO + 1; /**< @brief Session timer force on */

  // EN_MTC_DB_REFRESHER_TYPE 
  public final static int EN_MTC_DB_REFRESHER_DEFAULT = 0; /**< @brief Session timer refresher specified by server (no refresher value) */
  public final static int EN_MTC_DB_REFRESHER_UAC = EN_MTC_DB_REFRESHER_DEFAULT + 1; /**< @brief Session timer refresher is UAC */
  public final static int EN_MTC_DB_REFRESHER_UAS = EN_MTC_DB_REFRESHER_UAC + 1; /**< @brief Session timer refresher is UAS */

  // EN_MTC_DB_SRTP_CRYPTO_TYPE 
  public final static int EN_MTC_DB_SRTP_CRYPTO_OFF = 0; /**< @brief SRTP off */
  public final static int EN_MTC_DB_SRTP_CRYPTO_AES128_HMAC80 = EN_MTC_DB_SRTP_CRYPTO_OFF + 1; /**< @brief SRTP AES-128 HMAC-80 */
  public final static int EN_MTC_DB_SRTP_CRYPTO_AES128_HMAC32 = EN_MTC_DB_SRTP_CRYPTO_AES128_HMAC80 + 1; /**< @brief SRTP AES-128 HMAC-32 */
  public final static int EN_MTC_DB_SRTP_CRYPTO_SRTP_ZUC_EEA3 = EN_MTC_DB_SRTP_CRYPTO_AES128_HMAC32 + 1; /**< @brief SRTP ZUC EEA3 */

  // EN_MTC_DB_PREFIX_OPT_TYPE 
  public final static int EN_MTC_DB_PREFIX_OPT_NO_USE = 0; /* do not use call prefix */
  public final static int EN_MTC_DB_PREFIX_OPT_CONFIRM = EN_MTC_DB_PREFIX_OPT_NO_USE + 1; /* need user to confirm use or not */
  public final static int EN_MTC_DB_PREFIX_OPT_FORCE = EN_MTC_DB_PREFIX_OPT_CONFIRM + 1; /* force to use call prefix */

  // EN_MTC_DB_PAI_POLICY_TYPE 
  public final static int EN_MTC_DB_PAI_POLICY_SIP = 0; /* sip uri in P-Asserted-Identity */
  public final static int EN_MTC_DB_PAI_POLICY_SIPS = EN_MTC_DB_PAI_POLICY_SIP + 1; /* sips uri in P-Asserted-Identity */
  public final static int EN_MTC_DB_PAI_POLICY_DFT = EN_MTC_DB_PAI_POLICY_SIPS + 1; /* default(first) in P-Asserted-Identity */
  public final static int EN_MTC_DB_PAI_POLICY_TEL = EN_MTC_DB_PAI_POLICY_DFT + 1; /* tel uri in P-Asserted-Identity */

  public final static int MTC_CALL_DB_MEDIA_MASK = 0xFf;
  // EN_MTC_CALL_DB_MEDIA_MODE 
  public final static int EN_MTC_CALL_DB_MEDIA_BASE = 0x00; /**< @brief media base */
  public final static int EN_MTC_CALL_DB_MEDIA_ENHANCE = 0x01; /**< @brief media enhance */

  // EN_MTC_DB_STRM_DIR_TYPE 
  public final static int EN_MTC_DB_STRM_DIR_NONE = 0; /* stream direction type none */
  public final static int EN_MTC_DB_STRM_DIR_SEND = EN_MTC_DB_STRM_DIR_NONE + 1; /* stream direction type send only */
  public final static int EN_MTC_DB_STRM_DIR_RECV = EN_MTC_DB_STRM_DIR_SEND + 1; /* stream direction type receive only */
  public final static int EN_MTC_DB_STRM_DIR_SENDRECV = EN_MTC_DB_STRM_DIR_RECV + 1; /* stream direction type send and receive */

  // EN_MTC_DB_FEC_TYPE 
  public final static int EN_MTC_DB_FEC_NONE = 0; /**< @brief not support fec */
  public final static int EN_MTC_DB_FEC_RED = EN_MTC_DB_FEC_NONE + 1; /**< @brief use red type for fec */
  public final static int EN_MTC_DB_FEC_MULTI_SSRC = EN_MTC_DB_FEC_RED + 1; /**< @brief use multi ssrc for fec(rfc5956, rfc5576) */

  // EN_MTC_RES_CTRL_TYPE 
  public final static int EN_MTC_RES_CTRL_NORMAL = 0; /**< @brief resolution control mode provided by engine. */
  public final static int EN_MTC_RES_CTRL_SMOOTH = 1; /**< @brief smooth mode(default, lower resolution, higher framerate). */

}
