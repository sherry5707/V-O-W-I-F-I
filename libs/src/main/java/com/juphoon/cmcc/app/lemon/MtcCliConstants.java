/**
 * @file MtcCliConstants.java
 * @brief MtcCliConstants constants
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.cmcc.app.lemon;

/**
 * @brief MtcCliConstants constants
 */
public interface MtcCliConstants {
  public final static int MTC_REG_STATE_IDLE = 0; /**< @brief Register idle state */
  public final static int MTC_REG_STATE_REGING = 1; /**< @brief Register registering state */
  public final static int MTC_REG_STATE_REGED = 2; /**< @brief Register registered state */
  public final static int MTC_REG_STATE_UNREGING = 3; /**< @brief Register unregistering state */
  public final static int MTC_REG_STATE_RETRYING = 4; /**< @brief Register retry registering state */
  public final static int MTC_EBASE_CP = 0xE000; /**< @brief CP error base */
  public final static int MTC_EBASE_REG = 0xE100; /**< @brief REG error base */
  public final static int MTC_EBASE_CALL = 0xE200; /**< @brief CALL error base */
  public final static int MTC_EBASE_VSHARE = 0xE300; /**< @brief VSHARE error base */
  public final static int MTC_EBASE_CAP = 0xE400; /**< @brief CAP error base */
  public final static int MTC_EBASE_BUDDY = 0xE500; /**< @brief BUDDY error base */
  public final static int MTC_EBASE_GRP = 0xE600; /**< @brief GRP error base */
  public final static int MTC_EBASE_CONF = 0xE700; /**< @brief CONF error base */
  public final static int MTC_EBASE_GS = 0xE800; /**< @brief GS error base */
  public final static int MTC_EBASE_PRES = 0xE900; /**< @brief PRES error base */
  public final static int MTC_EBASE_IM = 0xEA00; /**< @brief IM error base */
  public final static int MTC_EBASE_LCS = 0xEB00; /**< @brief LCS error base */
  public final static int MTC_EBASE_PA = 0xEC00; /**< @brief PA error base */
  public final static int MTC_EBASE_CPROF = 0xED00; /**< @brief CRPOF error base */
  public final static int MTC_EBASE_GBA = 0xEE00; /**< @brief GBA error base */
  public final static int MTC_CLI_ERR_NO = (0xE100+0); /**< @brief No error. */
  public final static int MTC_CLI_ERR_LCL_FAILED = (0xE100+1); /**< @brief Local request error. */
  public final static int MTC_CLI_REG_ERR_SEND_MSG = (0xE100+2); /**< @brief Send message error. */
  public final static int MTC_CLI_REG_ERR_AUTH_FAILED = (0xE100+3); /**< @brief Register authentication failed, invalid user or password. */
  public final static int MTC_CLI_REG_ERR_INVALID_USER = (0xE100+4); /**< @brief Register using invalid user. */
  public final static int MTC_CLI_REG_ERR_TIMEOUT = (0xE100+5); /**< @brief Register timeout. */
  public final static int MTC_CLI_REG_ERR_SERV_BUSY = (0xE100+6); /**< @brief Register server busy. */
  public final static int MTC_CLI_REG_ERR_SERV_NOT_REACH = (0xE100+7); /**< @brief Register server not reached. */
  public final static int MTC_CLI_REG_ERR_SRV_FORBIDDEN = (0xE100+8); /**< @brief Register forbidden. */
  public final static int MTC_CLI_REG_ERR_SRV_UNAVAIL = (0xE100+9); /**< @brief Register unavailable. */
  public final static int MTC_CLI_REG_ERR_DNS_QRY = (0xE100+10); /**< @brief Register dns query error. */
  public final static int MTC_CLI_REG_ERR_NETWORK = (0xE100+11); /**< @brief Register network error. */
  public final static int MTC_CLI_REG_ERR_DEACTED = (0xE100+12); /**< @brief Register deactived. */
  public final static int MTC_CLI_REG_ERR_PROBATION = (0xE100+13); /**< @brief Register probation */
  public final static int MTC_CLI_REG_ERR_INTERNAL = (0xE100+14); /**< @brief Register internal error. */
  public final static int MTC_CLI_REG_ERR_NO_RESOURCE = (0xE100+15); /**< @brief Register no resource. */
  public final static int MTC_CLI_REG_ERR_REJECTED = (0xE100+16); /**< @brief Register be rejected. */
  public final static int MTC_CLI_REG_ERR_SIP_SESS = (0xE100+17); /**< @brief Register sip session error. */
  public final static int MTC_CLI_REG_ERR_UNREG = (0xE100+18); /**< @brief Register stop or unregsiter error. */
  public final static int MTC_CLI_REG_ERR_INVALID_ADDR = (0xE100+19); /**< @brief Register using invalid ip addr. */
  public final static int MTC_CLI_REG_ERR_WAIT_PWD = (0xE100+20); /**< @brief Register wait prompt password timeout. */
  public final static int MTC_CLI_REG_ERR_NOT_FOUND = (0xE100+21); /**< @brief Register not found user. */
  public final static int MTC_CLI_REG_ERR_AUTH_REJECT = (0xE100+22); /**< @brief Register authentication rejected, rorbidden to user register in hss. */
  public final static int MTC_CLI_REG_ERR_ID_NOT_MATCH = (0xE100+23); /**< @brief Register identities don't match, the pvi of user not inconformity. */
  public final static int MTC_CLI_REG_ERR_USER_NOT_EXIST = (0xE100+24); /**< @brief Register user not exist. */
  public final static int MTC_CLI_REG_ERR_COM_NOT_MATCH = (0xE100+25); /**< @brief Register company don't match. */
  public final static int MTC_CLI_REG_ERR_OTHER = (0xE100+200); /**< @brief Other register error. */
  public final static int MTC_ANET_UNAVAILABLE = 0xFFFFFFFE;
  public final static int MTC_ANET_UNKNOWN = 0xFFFFFFFF;
  public final static int MTC_ANET_MOBILE = 0x0000;
  public final static int MTC_ANET_MOBILE_GPRS = 0x0001;
  public final static int MTC_ANET_MOBILE_EDGE = 0x0002;
  public final static int MTC_ANET_MOBILE_UMTS = 0x0003;
  public final static int MTC_ANET_MOBILE_CDMA = 0x0004;
  public final static int MTC_ANET_MOBILE_EVDO_0 = 0x0005;
  public final static int MTC_ANET_MOBILE_EVDO_A = 0x0006;
  public final static int MTC_ANET_MOBILE_1XRTT = 0x0007;
  public final static int MTC_ANET_MOBILE_HSDPA = 0x0008;
  public final static int MTC_ANET_MOBILE_HSUPA = 0x0009;
  public final static int MTC_ANET_MOBILE_HSPA = 0x000A;
  public final static int MTC_ANET_MOBILE_IDEN = 0x000B;
  public final static int MTC_ANET_MOBILE_EVDO_B = 0x000C;
  public final static int MTC_ANET_MOBILE_LTE = 0x000D;
  public final static int MTC_ANET_MOBILE_EHRPD = 0x000E;
  public final static int MTC_ANET_MOBILE_HSPAP = 0x000F;
  public final static int MTC_ANET_WIFI = 0x0100;
  public final static int MTC_ANET_WIMAX = 0x0600;
  public final static int MTC_ANET_BLUETOOTH = 0x0700;
  public final static int MTC_ANET_ETHERNET = 0x0900;
  public final static int MTC_ANET_MASK_CATEGORY = 0xFF00;
  // MTC_SYNC_ERR_TYPE 
  public final static int MTC_SYNC_NOT_START = 0;
  public final static int MTC_SYNC_SUCCESS = MTC_SYNC_NOT_START + 1;
  public final static int MTC_SYNC_AUTH_FAILED = MTC_SYNC_SUCCESS + 1;
  public final static int MTC_SYNC_CONN_FAILED = MTC_SYNC_AUTH_FAILED + 1;
  public final static int MTC_SYNC_SEND_FAILED = MTC_SYNC_CONN_FAILED + 1;
  public final static int MTC_SYNC_RECV_FAILED = MTC_SYNC_SEND_FAILED + 1;
  public final static int MTC_SYNC_ERV_DISCED = MTC_SYNC_RECV_FAILED + 1;
  public final static int MTC_SYNC_SERV_ERR = MTC_SYNC_ERV_DISCED + 1;
  public final static int MTC_SYNC_REQ_TIMEOUT = MTC_SYNC_SERV_ERR + 1;
  public final static int MTC_SYNC_FORBIDDEN = MTC_SYNC_REQ_TIMEOUT + 1;
  public final static int MTC_SYNC_FAIL = MTC_SYNC_FORBIDDEN + 1;
  public final static int MTC_SYNC_ERR_OTHER = MTC_SYNC_FAIL + 1;

  // EN_MTC_USE_SERV_TYPE 
  public final static int EN_MTC_USE_SERV_1ST_SBC = 0; /* primary sbc server */
  public final static int EN_MTC_USE_SERV_2ND_SBC = EN_MTC_USE_SERV_1ST_SBC + 1; /* secondary sbc server */
  public final static int EN_MTC_USE_SERV_1ST_STG = EN_MTC_USE_SERV_2ND_SBC + 1; /* primary stg server */
  public final static int EN_MTC_USE_SERV_2ND_STG = EN_MTC_USE_SERV_1ST_STG + 1; /* secondary stg server */

  // EN_MTC_DEVICE_ID_TYPE 
  public final static int EN_MTC_DEVICE_ID_SERIAL = 0; /* device serial number */
  public final static int EN_MTC_DEVICE_ID_IMEI = EN_MTC_DEVICE_ID_SERIAL + 1; /* device imei */
  public final static int EN_MTC_DEVICE_ID_MACADDR = EN_MTC_DEVICE_ID_IMEI + 1; /* device mac address  */
  public final static int EN_MTC_DEVICE_ID_ANDROID_ID = EN_MTC_DEVICE_ID_MACADDR + 1; /* device android id */

}
