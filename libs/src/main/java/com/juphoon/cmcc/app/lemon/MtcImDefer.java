/**
 * @file MtcImDefer.java
 * @brief MtcImDefer interface
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.cmcc.app.lemon;

/**
 * @brief MtcImDefer interface
 */
public class MtcImDefer implements MtcImDeferConstants {
/**
 * @brief MTC Retrieve all deferred message.
 *
 * If IM retrieve all deferred message successfully,
 * GUI will be notified by callback which was set by 
 * mtcImCbDeferRetrieveOk or @ref mtcImCbDeferRetrieveFailed.
 *
 * @return The deferred message id when send message successfully, 
 *              otherwise return ZMAXUINT.
 */
  public static int Mtc_ImDeferRetrieveAll() {
    return MtcImDeferJNI.Mtc_ImDeferRetrieveAll();
  }

/**
 * @brief MTC Retrieve deferred message list.
 *
 * If IM retrieve deferred message list successfully,
 * GUI will be notified by callback which was set by 
 * mtcImCbDeferRetrieveOk or @ref mtcImCbDeferRetrieveFailed.
 *
 * @param [in] iMsgLstId The deferred message list id.
 *
 * @return The deferred message id when send message successfully, 
 *              otherwise return ZMAXUINT.
 */
  public static int Mtc_ImDeferRetrieveLst(int iMsgLstId) {
    return MtcImDeferJNI.Mtc_ImDeferRetrieveLst(iMsgLstId);
  }

/**
 * @brief MTC Retrieve deferred page message.
 *
 * If IM retrieve deferred message list successfully,
 * GUI will be notified by callback which was set by 
 * @ref mtcImCbDeferRetrievePagerOk or @ref mtcImCbDeferRetrievePagerFailed.
 *
 * @param [in] iMsgLstId The deferred message list id.
 *
 * @return The deferred message id when send message successfully, 
 *              otherwise return ZMAXUINT.
 */
  public static int Mtc_ImDeferRetrievePager(int iMsgLstId) {
    return MtcImDeferJNI.Mtc_ImDeferRetrievePager(iMsgLstId);
  }

/**
 * @brief MTC Retrieve deferred file.
 *
 * If IM retrieve deferred message list successfully,
 * GUI will be notified by callback which was set by 
 * @ref mtcImCbDeferRetrieveFileOk or @ref mtcImCbDeferRetrieveFileFailed.
 *
 * @param [in] iMsgLstId The deferred message list id.
 * @param [in] pcFileName The deferred file name.
 *
 * @return The deferred message id when send message successfully, 
 *              otherwise return ZMAXUINT.
 */
  public static int Mtc_ImDeferRetrieveFile(int iMsgLstId, String pcFileName) {
    return MtcImDeferJNI.Mtc_ImDeferRetrieveFile(iMsgLstId, pcFileName);
  }

/**
 * @brief MTC Release deferred message.
 *
 * @param [in] iDeferId The deferred message id.
 *
 * @retval MtcCommonConstants::ZOK Delete deferred message successfully.
 * @retval MtcCommonConstants::ZFAILED Delete deferred message failed.
 */
  public static int Mtc_ImDeferRelease(int iDeferId) {
    return MtcImDeferJNI.Mtc_ImDeferRelease(iDeferId);
  }

/**
 * @brief MTC Get deferred message list size.
 *
 * @param [in] iDeferId The message session id.
 *
 * @return Message list size.
 */
  public static int Mtc_ImDeferMsgsGetSize(int iDeferId) {
    return MtcImDeferJNI.Mtc_ImDeferMsgsGetSize(iDeferId);
  }

/**
 * @brief MTC Get a deferred message from message list.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iIndex The index of message.
 *
 * @return The deferred message id.
 */
  public static SWIGTYPE_p_void Mtc_ImDeferMsgsGetMsg(int iDeferId, int iIndex) {
    long cPtr = MtcImDeferJNI.Mtc_ImDeferMsgsGetMsg(iDeferId, iIndex);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

/**
 * @brief MTC Get content type from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 *
 * @return Content type.
 * The caller must copy it, then use.
 */
  public static String Mtc_ImDeferMsgGetContentType(int iDeferId, SWIGTYPE_p_void pDMsg) {
    return MtcImDeferJNI.Mtc_ImDeferMsgGetContentType(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg));
  }

/**
 * @brief MTC Get content length from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 *
 * @return The message content length.
 */
  public static int Mtc_ImDeferMsgGetContentLen(int iDeferId, SWIGTYPE_p_void pDMsg) {
    return MtcImDeferJNI.Mtc_ImDeferMsgGetContentLen(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg));
  }

/**
 * @brief MTC Get content from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 *
 * @return The message content.
 * The caller must copy it, then use.
 */
  public static String Mtc_ImDeferMsgGetContent(int iDeferId, SWIGTYPE_p_void pDMsg) {
    return MtcImDeferJNI.Mtc_ImDeferMsgGetContent(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg));
  }

/**
 * @brief MTC Get participant information from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 * @param [in,out] ppcName The participant name.
 * @param [in,out] ppcUri The participant URI.
 *
 * The caller must copy out parameter, then use.
 *
 * @retval MtcCommonConstants::ZOK Get participant information successfully.
 * @retval MtcCommonConstants::ZFAILED Get participant information failed.
 */
  public static int Mtc_ImDeferMsgGetPartp(int iDeferId, SWIGTYPE_p_void pDMsg, MtcString ppcName, MtcString ppcUri) {
    return MtcImDeferJNI.Mtc_ImDeferMsgGetPartp(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg), ppcName, ppcUri);
  }

/**
 * @brief MTC Get date time from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 * @param [in,out] pstTime The date time value. 
 *
 * @retval MtcCommonConstants::ZOK Get date time successfully.
 * @retval MtcCommonConstants::ZFAILED Get date time failed.
 */
  public static int Mtc_ImDeferMsgGetSysDateTime(int iDeferId, SWIGTYPE_p_void pDMsg, SWIGTYPE_p_ST_MTC_SYS_TIME pstTime) {
    return MtcImDeferJNI.Mtc_ImDeferMsgGetSysDateTime(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg), SWIGTYPE_p_ST_MTC_SYS_TIME.getCPtr(pstTime));
  }

/**
 * @brief MTC Get date time from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 *
 * @return defer message date time, otherwise return 0.
 */
  public static int Mtc_ImDeferMsgGetDateTime(int iDeferId, SWIGTYPE_p_void pDMsg) {
    return MtcImDeferJNI.Mtc_ImDeferMsgGetDateTime(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg));
  }

/**
 * @brief MTC Get RCS SMS flag from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 *
 * @return true if it is a RCS SMS message, otherwise false.
 */
  public static boolean Mtc_ImDeferMsgHasRcsSms(int iDeferId, SWIGTYPE_p_void pDMsg) {
    return MtcImDeferJNI.Mtc_ImDeferMsgHasRcsSms(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg));
  }

/**
 * @brief MTC Get RCS Imdn type from deferred message.
 *
 * @param [in] iDeferId The message session id.
 * @param [in] iDMsgId The message id.
 *
 * @return The Imdn type. See @ref EN_MTC_PMSG_IMDN_TYPE....
 */
  public static int Mtc_ImDeferMsgGetImdnType(int iDeferId, SWIGTYPE_p_void pDMsg) {
    return MtcImDeferJNI.Mtc_ImDeferMsgGetImdnType(iDeferId, SWIGTYPE_p_void.getCPtr(pDMsg));
  }

/**
 * @brief MTC Get file name from deferred message.
 *
 * @param [in] iDeferId The deferred message id.
 *
 * @return The file name string.
 * The caller must copy it, then use.
 */
  public static String Mtc_ImDeferFileGetFileName(int iDeferId) {
    return MtcImDeferJNI.Mtc_ImDeferFileGetFileName(iDeferId);
  }

/**
 * @brief MTC Get participant information from deferred message.
 *
 * The participant is the remote client who send file.
 *
 * @param [in] iDeferId The message session id.
 * @param [in,out] ppcName The participant name.
 * @param [in,out] ppcUri The participant uri.
 * 
 * The caller must copy out parameter, then use.
 *
 * @retval MtcCommonConstants::ZOK Get participant information successfully.
 * @retval MtcCommonConstants::ZFAILED Get participant information failed.
 */
  public static int Mtc_ImDeferFileGetPartp(int iDeferId, MtcString ppcName, MtcString ppcUri) {
    return MtcImDeferJNI.Mtc_ImDeferFileGetPartp(iDeferId, ppcName, ppcUri);
  }

/**
 * @brief MTC Load all histories from xdms .
 *
 * If IM retrieve all deferred message successfully,
 * GUI will be notified by callback which was set by 
 * @ref mtcImCbDmsgLoadOk or @ref mtcImCbDmsgLoadFailed.
 *
 * @retval MtcCommonConstants::ZOK Load deferred message successfully.
 * @retval MtcCommonConstants::ZFAILED Load deferred message failed.
 */
  public static int Mtc_DmsgLoadAll() {
    return MtcImDeferJNI.Mtc_DmsgLoadAll();
  }

/**
 * @brief MTC Remove all histories from xdms.
 *
 * If IM remove all deferred message successfully,
 * GUI will be notified by callback which was set by 
 * @ref mtcImCbDmsgRmvOk or @ref mtcImCbDmsgRmvFailed.
 *
 * @retval MtcCommonConstants::ZOK Remove deferred message successfully.
 * @retval MtcCommonConstants::ZFAILED Remove deferred message failed.
 */
  public static int Mtc_DmsgRmvAll() {
    return MtcImDeferJNI.Mtc_DmsgRmvAll();
  }

/**
 * @brief MTC Remove all histories in local cache.
 *
 * @retval MtcCommonConstants::ZOK Remove deferred message successfully.
 * @retval MtcCommonConstants::ZFAILED Remove deferred message failed.
 */
  public static int Mtc_DmsgRmvAllL() {
    return MtcImDeferJNI.Mtc_DmsgRmvAllL();
  }

/**
 * @brief MTC Get history list size.
 *
 * @return History list size.
 */
  public static int Mtc_DmsgGetSize() {
    return MtcImDeferJNI.Mtc_DmsgGetSize();
  }

/**
 * @brief MTC Get a history message from history list.
 *
 * @param [in] iIndex The index of message.
 *
 * @return The history id.
 */
  public static int Mtc_DmsgGetHis(int iIndex) {
    return MtcImDeferJNI.Mtc_DmsgGetHis(iIndex);
  }

/**
 * @brief MTC Remove a history message in xdms.
 *
 * If Remove a history message successfully,
 * GUI will be notified by callback which was set by 
 * @ref mtcImCbDmsgRmvHisOk or @ref mtcImCbDmsgRmvHisFailed,
 * history in local cache will be removed after callback called.
 *
 * @param [in] iHisId The id of history.
 *
 * @retval MtcCommonConstants::ZOK Remove history message successfully.
 * @retval MtcCommonConstants::ZFAILED Remove history message failed.
 */
  public static int Mtc_DmsgRmvHis(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgRmvHis(iHisId);
  }

/**
 * @brief MTC Remove a history message in local cache.
 *
 * @param [in] iHisId The id of history.
 *
 * @retval MtcCommonConstants::ZOK Remove history message successfully.
 * @retval MtcCommonConstants::ZFAILED Remove history message failed.
 */
  public static int Mtc_DmsgRmvHisL(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgRmvHisL(iHisId);
  }

/**
 * @brief MTC Get history type from deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return History type, see @ref MtcImDeferConstants::EN_MTC_HIS_MODE_PAGER....
 */
  public static int Mtc_DmsgHisGetType(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgHisGetType(iHisId);
  }

/**
 * @brief MTC Get history size element from deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return History size element.
 */
  public static int Mtc_DmsgHisGetSize(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgHisGetSize(iHisId);
  }

/**
 * @brief MTC Get history expiry element from deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] pstTime The date time value. 
 *
 * @retval MtcCommonConstants::ZOK Get expiry successfully.
 * @retval MtcCommonConstants::ZFAILED Get expiry failed.
 */
  public static int Mtc_DmsgHisGetExpiry(int iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME pstTime) {
    return MtcImDeferJNI.Mtc_DmsgHisGetExpiry(iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME.getCPtr(pstTime));
  }

/**
 * @brief MTC Get history subject element from deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history subject element
 */
  public static String Mtc_DmsgHisGetSubject(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgHisGetSubject(iHisId);
  }

/**
 * @brief MTC Get history date element from deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history date
 */
  public static String Mtc_DmsgHisGetDate(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgHisGetDate(iHisId);
  }

/**
 * @brief MTC Get history reference from deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history reference
 */
  public static String Mtc_DmsgHisGetRef(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgHisGetRef(iHisId);
  }

/**
 * @brief MTC Get time-stamp from Group deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] pstTime The date time value. 
 *
 * @retval MtcCommonConstants::ZOK Get time-stamp successfully.
 * @retval MtcCommonConstants::ZFAILED Get time-stamp failed.
 */
  public static int Mtc_DmsgGroupGetSysTimeStamp(int iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME pstTime) {
    return MtcImDeferJNI.Mtc_DmsgGroupGetSysTimeStamp(iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME.getCPtr(pstTime));
  }

/**
 * @brief MTC Get time-stamp from Group deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return group deferred message time stamp, otherwise return 0. 
 */
  public static int Mtc_DmsgGroupGetTimeStamp(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgGroupGetTimeStamp(iHisId);
  }

/**
 * @brief MTC Get from element from Group deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history from element
 */
  public static String Mtc_DmsgGroupGetFrom(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgGroupGetFrom(iHisId);
  }

/**
 * @brief MTC Get to element from Group deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history to element
 */
  public static String Mtc_DmsgGroupGetTo(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgGroupGetTo(iHisId);
  }

/**
 * @brief MTC Get group-id element from Group deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history group-id element
 */
  public static String Mtc_DmsgGroupGetGrpId(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgGroupGetGrpId(iHisId);
  }

/**
 * @brief MTC Get time-stamp from File deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] pstTime The date time value. 
 *
 * @retval MtcCommonConstants::ZOK Get time-stamp successfully.
 * @retval MtcCommonConstants::ZFAILED Get time-stamp failed.
 */
  public static int Mtc_DmsgFileGetSysTimeStamp(int iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME pstTime) {
    return MtcImDeferJNI.Mtc_DmsgFileGetSysTimeStamp(iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME.getCPtr(pstTime));
  }

/**
 * @brief MTC Get from element from File deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history from element
 */
  public static String Mtc_DmsgFileGetFrom(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgFileGetFrom(iHisId);
  }

/**
 * @brief MTC Get to element from File deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history to element
 */
  public static String Mtc_DmsgFileGetTo(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgFileGetTo(iHisId);
  }

/**
 * @brief MTC Get file-name element from File deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history file-name element
 */
  public static String Mtc_DmsgFileGetFileName(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgFileGetFileName(iHisId);
  }

/**
 * @brief MTC Get time-stamp from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] pstTime The date time value. 
 *
 * @retval MtcCommonConstants::ZOK Get time-stamp successfully.
 * @retval MtcCommonConstants::ZFAILED Get time-stamp failed.
 */
  public static int Mtc_DmsgPagerGetSysTimeStamp(int iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME pstTime) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetSysTimeStamp(iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME.getCPtr(pstTime));
  }

/**
 * @brief MTC Get time-stamp from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return pager deferred message time-stamp, otherwise return 0.
 */
  public static int Mtc_DmsgPagerGetTimeStamp(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetTimeStamp(iHisId);
  }

/**
 * @brief MTC Get from element from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history from element
 */
  public static String Mtc_DmsgPagerGetFrom(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetFrom(iHisId);
  }

/**
 * @brief MTC Get to element from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history to element
 */
  public static String Mtc_DmsgPagerGetTo(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetTo(iHisId);
  }

/**
 * @brief MTC Get recipient-list entry size from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history recipient-list entry size
 */
  public static int Mtc_DmsgPagerGetLstEntrySize(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetLstEntrySize(iHisId);
  }

/**
 * @brief MTC Get recipient-list entry from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in] iIndex The index.
 * @param [in,out] ppcDispName The entry display name.
 * @param [in,out] ppcUri The entry URI.
 *
 * @retval MtcCommonConstants::ZOK Get recipient-list entry successfully.
 * @retval MtcCommonConstants::ZFAILED Get recipient-list entry failed.
 */
  public static int Mtc_DmsgPagerGetLstEntry(int iHisId, int iIndex, MtcString ppcDispName, MtcString ppcUri) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetLstEntry(iHisId, iIndex, ppcDispName, ppcUri);
  }

/**
 * @brief MTC Get recipient-list group uri and display-name
 * from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] ppcDispName The recipient-list group display name.
 * @param [in,out] ppcUri The recipient-list group URI.
 *
 * @retval MtcCommonConstants::ZOK Get recipient-list group uri and display-name successfully.
 * @retval MtcCommonConstants::ZFAILED Get recipient-list group uri and display-name failed.
 */
  public static int Mtc_DmsgPagerGetLstGrp(int iHisId, MtcString ppcDispName, MtcString ppcUri) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetLstGrp(iHisId, ppcDispName, ppcUri);
  }

/**
 * @brief MTC Get auth-id element from Pager deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history auth-id element
 */
  public static String Mtc_DmsgPagerGetAuthId(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgPagerGetAuthId(iHisId);
  }

/**
 * @brief MTC Get time-start from Conference deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] pstTime The date time value. 
 *
 * @retval MtcCommonConstants::ZOK Get time-start successfully.
 * @retval MtcCommonConstants::ZFAILED Get time-start failed.
 */
  public static int Mtc_DmsgConfGetTimeStart(int iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME pstTime) {
    return MtcImDeferJNI.Mtc_DmsgConfGetTimeStart(iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME.getCPtr(pstTime));
  }

/**
 * @brief MTC Get time-end from Conference deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] pstTime The date time value. 
 *
 * @retval MtcCommonConstants::ZOK Get time-end successfully.
 * @retval MtcCommonConstants::ZFAILED Get time-end failed.
 */
  public static int Mtc_DmsgConfGetTimeEnd(int iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME pstTime) {
    return MtcImDeferJNI.Mtc_DmsgConfGetTimeEnd(iHisId, SWIGTYPE_p_ST_MTC_SYS_TIME.getCPtr(pstTime));
  }

/**
 * @brief MTC Get recoding-name from Conference deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history recoding-name
 */
  public static String Mtc_DmsgConfGetRecdName(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgConfGetRecdName(iHisId);
  }

/**
 * @brief MTC Get conf-list entry size from Conference deferred message.
 *
 * @param [in] iHisId The history id.
 *
 * @return history conf-list entry size
 */
  public static int Mtc_DmsgConfGetLstEntrySize(int iHisId) {
    return MtcImDeferJNI.Mtc_DmsgConfGetLstEntrySize(iHisId);
  }

/**
 * @brief MTC Get conf-list entry from Conference deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in] iIndex The index.
 * @param [in,out] ppcDispName The entry display name.
 * @param [in,out] ppcUri The entry URI.
 *
 * @retval MtcCommonConstants::ZOK Get conf-list entry successfully.
 * @retval MtcCommonConstants::ZFAILED Get conf-list entry failed.
 */
  public static int Mtc_DmsgConfGetLstEntry(int iHisId, int iIndex, MtcString ppcDispName, MtcString ppcUri) {
    return MtcImDeferJNI.Mtc_DmsgConfGetLstEntry(iHisId, iIndex, ppcDispName, ppcUri);
  }

/**
 * @brief MTC Get conf-list group uri and display-name
 * from Conference deferred message.
 *
 * @param [in] iHisId The history id.
 * @param [in,out] ppcDispName The conf-list group display name.
 * @param [in,out] ppcUri The conf-list group URI.
 *
 * @retval MtcCommonConstants::ZOK Get conf-list group uri and display-name successfully.
 * @retval MtcCommonConstants::ZFAILED Get conf-list group uri and display-name failed.
 */
  public static int Mtc_DmsgConfGetLstGrp(int iHisId, MtcString ppcDispName, MtcString ppcUri) {
    return MtcImDeferJNI.Mtc_DmsgConfGetLstGrp(iHisId, ppcDispName, ppcUri);
  }

}
