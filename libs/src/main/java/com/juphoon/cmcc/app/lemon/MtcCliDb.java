/**
 * @file MtcCliDb.java
 * @brief MtcCliDb interface
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.cmcc.app.lemon;

/**
 * @brief MtcCliDb interface
 */
public class MtcCliDb implements MtcCliDbConstants {
/**
 * @brief Apply all data change to all components.
 *
 * @retval MtcCommonConstants::ZOK Apply data change successfully.
 * @retval MtcCommonConstants::ZFAILED Apply data change failed.
 */
  public static int Mtc_CliDbApplyAll() {
    return MtcCliDbJNI.Mtc_CliDbApplyAll();
  }

/**
 * @brief Get data change apply flag.
 *
 * @return Data change apply flag.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetApplyChange
 */
  public static boolean Mtc_CliDbGetApplyChange() {
    return MtcCliDbJNI.Mtc_CliDbGetApplyChange();
  }

/**
 * @brief Set data change apply flag realtime.
 * If data change apply flag is true, below db set
 * functions(ex @ref MtcCliDb::Mtc_CliDbSetUserName) will apply change immediately.
 *
 * @retval MtcCommonConstants::ZOK Set data change apply flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set data change apply flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetApplyChange
 */
  public static int Mtc_CliDbSetApplyChange(boolean bApply) {
    return MtcCliDbJNI.Mtc_CliDbSetApplyChange(bApply);
  }

/**
 * @brief Get local IP from database.
 *
 * @return The string of local IP string.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetLocalIp
 */
  public static String Mtc_CliDbGetLocalIp() {
    return MtcCliDbJNI.Mtc_CliDbGetLocalIp();
  }

/**
 * @brief Get local IP from database.
 *
 * @return The local IP value in network byte order.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetLocalIp
 */
  public static int Mtc_CliDbGetLocalIpX() {
    return MtcCliDbJNI.Mtc_CliDbGetLocalIpX();
  }

/**
 * @brief Set local IP.
 *
 * @param [in] pcIp The IP value in network string order.
 *
 * @retval MtcCommonConstants::ZOK Set local IP successfully.
 * @retval MtcCommonConstants::ZFAILED Set local IP failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetLocalIp
 */
  public static int Mtc_CliDbSetLocalIp(String pcIp) {
    return MtcCliDbJNI.Mtc_CliDbSetLocalIp(pcIp);
  }

/**
 * @brief Get local IPv6 from database.
 *
 * @return The string of local IPv6.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetLocalIpv6
 */
  public static String Mtc_CliDbGetLocalIpv6() {
    return MtcCliDbJNI.Mtc_CliDbGetLocalIpv6();
  }

/**
 * @brief Set local IPv6.
 *
 * @param [in] pcIp The IPv6 value in network string order.
 *
 * @retval MtcCommonConstants::ZOK Set local IPv6 successfully.
 * @retval MtcCommonConstants::ZFAILED Set local IPv6 failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetLocalIpv6
 */
  public static int Mtc_CliDbSetLocalIpv6(String pcIp) {
    return MtcCliDbJNI.Mtc_CliDbSetLocalIpv6(pcIp);
  }

/**
 * @brief Set login log print enable.
 *
 * @param [in] bPrint Login log print enable.
 *
 * @retval MtcCommonConstants::ZOK Set login log enable successfully.
 * @retval MtcCommonConstants::ZFAILED Set login log enable failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetLoginLogPrint
**/
  public static int Mtc_CliDbSetLoginLogPrint(boolean bPrint) {
    return MtcCliDbJNI.Mtc_CliDbSetLoginLogPrint(bPrint);
  }

/**
 * @brief Get login log print enable from database.
 *
 * @return The login log enable flag.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetLoginLogPrint
 */
  public static boolean Mtc_CliDbGetLoginLogPrint() {
    return MtcCliDbJNI.Mtc_CliDbGetLoginLogPrint();
  }

/**
 * @brief Get log level from database.
 *
 * @return The log level, @see @type MtcCliCfgConstants::EN_MTC_LOG_LEVEL_DISABLE.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetLogLevel
 */
  public static int Mtc_CliDbGetLogLevel() {
    return MtcCliDbJNI.Mtc_CliDbGetLogLevel();
  }

/**
 * @brief Set log level.
 *
 * @param [in] iLevel Log level, @see @type MtcCliCfgConstants::EN_MTC_LOG_LEVEL_DISABLE.
 *
 * @retval MtcCommonConstants::ZOK Set log level successfully.
 * @retval MtcCommonConstants::ZFAILED Set log level failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetLogLevel
 */
  public static int Mtc_CliDbSetLogLevel(int iLevel) {
    return MtcCliDbJNI.Mtc_CliDbSetLogLevel(iLevel);
  }

/**
 * @brief Get log file size from database.
 *
 * @return The log file size in byte.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetLogFileSize
 */
  public static int Mtc_CliDbGetLogFileSize() {
    return MtcCliDbJNI.Mtc_CliDbGetLogFileSize();
  }

/**
 * @brief Set log file size.
 *
 * @param [in] iLogFileSize The log file size in byte.
 *
 * @retval MtcCommonConstants::ZOK Set log file size successfully.
 * @retval MtcCommonConstants::ZFAILED Set log file size failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetLogFileSize
 */
  public static int Mtc_CliDbSetLogFileSize(int iLogFileSize) {
    return MtcCliDbJNI.Mtc_CliDbSetLogFileSize(iLogFileSize);
  }

/**
 * @brief Get user agent from database.
 *
 * @return The user agent.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUserAgent
 */
  public static String Mtc_CliDbGetUserAgent() {
    return MtcCliDbJNI.Mtc_CliDbGetUserAgent();
  }

/**
 * @brief Set user agent.
 *
 * @param [in] pcName The user agent.
 *
 * @retval MtcCommonConstants::ZOK Set user agent successfully.
 * @retval MtcCommonConstants::ZFAILED Set user agent failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserAgent
 */
  public static int Mtc_CliDbSetUserAgent(String pcName) {
    return MtcCliDbJNI.Mtc_CliDbSetUserAgent(pcName);
  }

/**
 * @brief Get IP multimedia public identity from database.
 *
 * @return The string of impu.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetImpu
 */
  public static String Mtc_CliDbGetImpu() {
    return MtcCliDbJNI.Mtc_CliDbGetImpu();
  }

/**
 * @brief Set IP multimedia public identity.
 *
 * @param [in] pcName The string of impu.
 *
 * @retval MtcCommonConstants::ZOK Set impu successfully.
 * @retval MtcCommonConstants::ZFAILED Set impu failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetImpu
 */
  public static int Mtc_CliDbSetImpu(String pcImpu) {
    return MtcCliDbJNI.Mtc_CliDbSetImpu(pcImpu);
  }

/**
 * @brief Get IP multimedia public identity of PC client from database.
 *
 * @return The string of PC impu.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPcImpu
 */
  public static String Mtc_CliDbGetPcImpu() {
    return MtcCliDbJNI.Mtc_CliDbGetPcImpu();
  }

/**
 * @brief Set IP multimedia public identity of PC client.
 *
 * @param [in] pcName The string of impu.
 *
 * @retval MtcCommonConstants::ZOK Set PC impu successfully.
 * @retval MtcCommonConstants::ZFAILED Set PC impu failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPcImpu
 */
  public static int Mtc_CliDbSetPcImpu(String pcPcImpu) {
    return MtcCliDbJNI.Mtc_CliDbSetPcImpu(pcPcImpu);
  }

/**
 * @brief Set user state.
 *
 * @param [in] iUserState The uint of user state 0 is general and 1 is restricted.
 *
 * @retval MtcCommonConstants::ZOK Set user state successfully.
 * @retval MtcCommonConstants::ZFAILED Set user state failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserState
 */
  public static int Mtc_CliDbSetUserState(int iUserState) {
    return MtcCliDbJNI.Mtc_CliDbSetUserState(iUserState);
  }

/**
 * @brief Get user state.
 *
 * @return the uint of user state  0 is general and 1 is restricted
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserState
 */
  public static int Mtc_CliDbGetUserState() {
    return MtcCliDbJNI.Mtc_CliDbGetUserState();
  }

/**
 * @brief Get user name from database.
 *
 * @return The string of user name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUserName
 */
  public static String Mtc_CliDbGetUserName() {
    return MtcCliDbJNI.Mtc_CliDbGetUserName();
  }

/**
 * @brief Set user name.
 *
 * @param [in] pcName The string of user name.
 *
 * @retval MtcCommonConstants::ZOK Set user name successfully.
 * @retval MtcCommonConstants::ZFAILED Set user name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserName
 */
  public static int Mtc_CliDbSetUserName(String pcName) {
    return MtcCliDbJNI.Mtc_CliDbSetUserName(pcName);
  }

/**
 * @brief Get nick name from database.
 *
 * @return The string of nick name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetNickName
 */
  public static String Mtc_CliDbGetNickName() {
    return MtcCliDbJNI.Mtc_CliDbGetNickName();
  }

/**
 * @brief Set nick name.
 *
 * @param [in] pcName The string of nick name.
 *
 * @retval MtcCommonConstants::ZOK Set nick name successfully.
 * @retval MtcCommonConstants::ZFAILED Set nick name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetNickName
 */
  public static int Mtc_CliDbSetNickName(String pcName) {
    return MtcCliDbJNI.Mtc_CliDbSetNickName(pcName);
  }

/**
 * @brief Get authorization name from database.
 *
 * @return The string of authorization name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAuthName
 */
  public static String Mtc_CliDbGetAuthName() {
    return MtcCliDbJNI.Mtc_CliDbGetAuthName();
  }

/**
 * @brief Get authorization realm from database.
 *
 * @return The string of authorization realm.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAuthRealm
 */
  public static String Mtc_CliDbGetAuthRealm() {
    return MtcCliDbJNI.Mtc_CliDbGetAuthRealm();
  }

/**
 * @brief Set authorization name.
 *
 * @param [in] pcName The string of authorization name.
 *
 * @retval MtcCommonConstants::ZOK Set authorization name successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAuthName
 */
  public static int Mtc_CliDbSetAuthName(String pcName) {
    return MtcCliDbJNI.Mtc_CliDbSetAuthName(pcName);
  }

/**
 * @brief Set authorization realm.
 *
 * @param [in] pcRealm The string of authorization realm.
 *
 * @retval MtcCommonConstants::ZOK Set authorization realm successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization realm failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAuthRealm
 */
  public static int Mtc_CliDbSetAuthRealm(String pcRealm) {
    return MtcCliDbJNI.Mtc_CliDbSetAuthRealm(pcRealm);
  }

/**
 * @brief Get authorization password from database.
 *
 * @return The string of authorization password.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAuthPass
 */
  public static String Mtc_CliDbGetAuthPass() {
    return MtcCliDbJNI.Mtc_CliDbGetAuthPass();
  }

/**
 * @brief Set authorization password.
 *
 * @param [in] pcPass The string of authorization password.
 *
 * @retval MtcCommonConstants::ZOK Set authorization password successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization password failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAuthPass
 */
  public static int Mtc_CliDbSetAuthPass(String pcPass) {
    return MtcCliDbJNI.Mtc_CliDbSetAuthPass(pcPass);
  }

/**
 * @brief Get Phone Context.
 *
 * @retval The string of phone context.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPhoneContext
 */
  public static String Mtc_CliDbGetPhoneContext() {
    return MtcCliDbJNI.Mtc_CliDbGetPhoneContext();
  }

/**
 * @brief Set Phone Context.
 *
 * @param [in] pcPhoneContext The string of Phone Context.
 *
 * @retval MtcCommonConstants::ZOK Set Phone Context successfully.
 * @retval MtcCommonConstants::ZFAILED Set Phone Context failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPhoneContext
 */
  public static int Mtc_CliDbSetPhoneContext(String pcPhoneContext) {
    return MtcCliDbJNI.Mtc_CliDbSetPhoneContext(pcPhoneContext);
  }

/**
 * @brief Get the type of IMS authentication for the user.
 *
 * @return IMS authentication type, @see @ref MtcCliDbConstants::EN_MTC_IMS_AUTH_UNKNOWN.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAuthType
 */
  public static int Mtc_CliDbGetAuthType() {
    return MtcCliDbJNI.Mtc_CliDbGetAuthType();
  }

/**
 * @brief Set authorization type.
 *
 * @param [in] iType The authentication type, @see @ref MtcCliDbConstants::EN_MTC_IMS_AUTH_UNKNOWN.
 *
 * @retval MtcCommonConstants::ZOK Set authorization type successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAuthType
 */
  public static int Mtc_CliDbSetAuthType(int iType) {
    return MtcCliDbJNI.Mtc_CliDbSetAuthType(iType);
  }

/**
 * @brief Get the roam type for the user.
 *
 * @return The roam type, @see @ref MtcCliDbConstants::EN_MTC_ROAM_NONE.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetRoamType
 */
  public static int Mtc_CliDbGetRoamType() {
    return MtcCliDbJNI.Mtc_CliDbGetRoamType();
  }

/**
 * @brief Set roam type.
 *
 * @param [in] iType The roam type, @see @ref MtcCliDbConstants::EN_MTC_ROAM_NONE.
 *
 * @retval MtcCommonConstants::ZOK Set roam type successfully.
 * @retval MtcCommonConstants::ZFAILED Set roam type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRoamType
 */
  public static int Mtc_CliDbSetRoamType(int iType) {
    return MtcCliDbJNI.Mtc_CliDbSetRoamType(iType);
  }

/**
 * @brief Get support no digest in new REGISTER.
 *
 * @retval true Indicates support no digest.
 * @retval false Indicates not support no digest.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetRegNoDigest
 */
  public static boolean Mtc_CliDbGetRegNoDigest() {
    return MtcCliDbJNI.Mtc_CliDbGetRegNoDigest();
  }

/**
 * @brief Set support no digest in new REGISTER.
 *
 * @param [in] bEnable The support flag.
 *
 * @retval MtcCommonConstants::ZOK Set support flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set support flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegNoDigest
 */
  public static int Mtc_CliDbSetRegNoDigest(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetRegNoDigest(bEnable);
  }

/**
 * @brief Get keep alive type.
 *
 * @return @ref MtcCliDbConstants::EN_MTC_KEEP_ALIVE_DISABLE.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetKeepAliveType
 */
  public static int Mtc_CliDbGetKeepAliveType() {
    return MtcCliDbJNI.Mtc_CliDbGetKeepAliveType();
  }

/**
 * @brief Set keep alive type.
 *
 * @param [in] IType @ref MtcCliDbConstants::EN_MTC_KEEP_ALIVE_DISABLE.
 *
 * @retval MtcCommonConstants::ZOK Set keep alive successfully.
 * @retval MtcCommonConstants::ZFAILED Set keep alive failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetKeepAliveType
 */
  public static int Mtc_CliDbSetKeepAliveType(int IType) {
    return MtcCliDbJNI.Mtc_CliDbSetKeepAliveType(IType);
  }

/**
 * @brief Get heart beat timer length on ps, in seconds.
 *
 * @retval The length of heart beat timer on ps, default is 300 seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetHeartbeatTmr
 */
  public static int Mtc_CliDbGetHeartbeatTmr() {
    return MtcCliDbJNI.Mtc_CliDbGetHeartbeatTmr();
  }

/**
 * @brief Set heart beat timer length on ps, in seconds.
 *
 * @param [in] iTmrLen The heart beat timer length on ps.
 *
 * @retval MtcCommonConstants::ZOK Set heart beat timer length on ps successfully.
 * @retval MtcCommonConstants::ZFAILED Set heart beat timer length on ps failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetHeartbeatTmr
 */
  public static int Mtc_CliDbSetHeartbeatTmr(int iTmrLen) {
    return MtcCliDbJNI.Mtc_CliDbSetHeartbeatTmr(iTmrLen);
  }

/**
 * @brief Get heart beat timer length on wifi, in seconds.
 *
 * @retval THE length of heart beat timer, default is 150 seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetWifiHeartbeatTmr
 */
  public static int Mtc_CliDbGetWifiHeartbeatTmr() {
    return MtcCliDbJNI.Mtc_CliDbGetWifiHeartbeatTmr();
  }

/**
 * @brief Set heart beat timer length on wifi, in seconds.
 *
 * @param [in] iTmrLen The heart beat timer length on wifi.
 *
 * @retval MtcCommonConstants::ZOK Set heart beat timer length on wifi successfully.
 * @retval MtcCommonConstants::ZFAILED Set heart beat timer length on wifi failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetWifiHeartbeatTmr
 */
  public static int Mtc_CliDbSetWifiHeartbeatTmr(int iTmrLen) {
    return MtcCliDbJNI.Mtc_CliDbSetWifiHeartbeatTmr(iTmrLen);
  }

/**
 * @brief Get user register option from database.
 *
 * @retval true Register to server.
 * @retval false Do not register.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUserReg
 */
  public static boolean Mtc_CliDbGetUserReg() {
    return MtcCliDbJNI.Mtc_CliDbGetUserReg();
  }

/**
 * @brief Get client proxy option.
 *
 * @retval true Support proxy option.
 * @retval false Do not Support proxy option.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProxyEnable
 */
  public static boolean Mtc_CliDbGetProxyEnable() {
    return MtcCliDbJNI.Mtc_CliDbGetProxyEnable();
  }

/**
 * @brief Set client proxy option.
 *
 * @param [in] bEnable If true, client support proxy to server.
 * Otherwise it needn't proxy.
 *
 * @retval MtcCommonConstants::ZOK Set client proxy option successfully.
 * @retval MtcCommonConstants::ZFAILED Set client proxy option failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProxyEnable
 */
  public static int Mtc_CliDbSetProxyEnable(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetProxyEnable(bEnable);
  }

/**
 * @brief Set user register and proxy option.
 *
 * @param [in] bEnable If true, register to server.Otherwise it needn't register.
 *
 * @retval MtcCommonConstants::ZOK Set user register option successfully.
 * @retval MtcCommonConstants::ZFAILED Set user register option failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserReg
 */
  public static int Mtc_CliDbSetUserReg(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetUserReg(bEnable);
  }

/**
 * @brief Get user tag converg flag in REGISTER from database.
 *
 * @retval true the feature tag in REGISTER will converg.
 * @retval false the feature tag in REGISTER will not converg.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetRegTagConverg
 */
  public static boolean Mtc_CliDbGetRegTagConverg() {
    return MtcCliDbJNI.Mtc_CliDbGetRegTagConverg();
  }

/**
 * @brief Set user flag of tag converging in register.
 *
 * @param [in] bTagConverg If true, the feature tag in REGISTER will converg.
 *
 * @retval MtcCommonConstants::ZOK Set flag of tag converging in REGISTER successfully.
 * @retval MtcCommonConstants::ZFAILED Set flag of tag converging in REGISTER failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegTagConverg
 */
  public static int Mtc_CliDbSetRegTagConverg(boolean bTagConverg) {
    return MtcCliDbJNI.Mtc_CliDbSetRegTagConverg(bTagConverg);
  }

/**
 * @brief Set user register detect option.
 *
 * @param [in] bEnable If true, detect register server.
 *
 * @retval MtcCommonConstants::ZOK Set detect option successfully.
 * @retval MtcCommonConstants::ZFAILED Set detect option failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserRegDetect
 */
  public static int Mtc_CliDbSetUserRegDetect(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetUserRegDetect(bEnable);
  }

/**
 * @brief Get user register detect option from database.
 *
 * @retval true Detect register.
 * @retval false Do not detect register.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUserRegDetect
 */
  public static boolean Mtc_CliDbGetUserRegDetect() {
    return MtcCliDbJNI.Mtc_CliDbGetUserRegDetect();
  }

/**
 * @brief Get register IP from database.
 *
 * @return The string of the sip register and proxy IP.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipRegIp
 */
  public static String Mtc_CliDbGetSipRegIp() {
    return MtcCliDbJNI.Mtc_CliDbGetSipRegIp();
  }

/**
 * @brief Set the sip register and proxy IP.
 *
 * @param [in] pcIp The sip register and proxy IP.
 *
 * @retval MtcCommonConstants::ZOK Set the sip register IP successfully.
 * @retval MtcCommonConstants::ZFAILED Set the sip register IP failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipRegIp
 */
  public static int Mtc_CliDbSetSipRegIp(String pcIp) {
    return MtcCliDbJNI.Mtc_CliDbSetSipRegIp(pcIp);
  }

/**
 * @brief Get register transport from database.
 *
 * @return The transport of the sip register and proxy.
 *         Transport type @ref MtcCliDbConstants::EN_MTC_TPT_UDP includes 
 *         @ref EN_MTC_TPT_UDP, @ref EN_MTC_TPT_TCP and @ref EN_MTC_TPT_TLS. 
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipRegTpt
 */
  public static short Mtc_CliDbGetSipRegTpt() {
    return MtcCliDbJNI.Mtc_CliDbGetSipRegTpt();
  }

/**
 * @brief Set register proxy transport.
 *
 * @param [in] ucTpt Transport type, @ref MtcCliDbConstants::EN_MTC_TPT_UDP includes 
 *             @ref EN_MTC_TPT_UDP, @ref EN_MTC_TPT_TCP and @ref EN_MTC_TPT_TLS. 
 *
 * @retval MtcCommonConstants::ZOK Set the sip register transport successfully.
 * @retval MtcCommonConstants::ZFAILED Set the sip register transport failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipRegTpt
 */
  public static int Mtc_CliDbSetSipRegTpt(short ucTpt) {
    return MtcCliDbJNI.Mtc_CliDbSetSipRegTpt(ucTpt);
  }

/**
 * @brief Get register udp port from database.
 *
 * @return Register port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipRegUdpPort
 */
  public static int Mtc_CliDbGetSipRegUdpPort() {
    return MtcCliDbJNI.Mtc_CliDbGetSipRegUdpPort();
  }

/**
 * @brief Set register udp port.
 *
 * @param [in] iPort Register udp port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipRegUdpPort
 */
  public static int Mtc_CliDbSetSipRegUdpPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipRegUdpPort(iPort);
  }

/**
 * @brief Get register tcp port from database.
 *
 * @return Register port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipRegTcpPort
 */
  public static int Mtc_CliDbGetSipRegTcpPort() {
    return MtcCliDbJNI.Mtc_CliDbGetSipRegTcpPort();
  }

/**
 * @brief Set register port.
 *
 * @param [in] iPort Register tcp port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipRegTcpPort
 */
  public static int Mtc_CliDbSetSipRegTcpPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipRegTcpPort(iPort);
  }

/**
 * @brief Get register tls port from database.
 *
 * @return Register port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipRegTlsPort
 */
  public static int Mtc_CliDbGetSipRegTlsPort() {
    return MtcCliDbJNI.Mtc_CliDbGetSipRegTlsPort();
  }

/**
 * @brief Set register port.
 *
 * @param [in] iPort Register tls port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipRegTlsPort
 */
  public static int Mtc_CliDbSetSipRegTlsPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipRegTlsPort(iPort);
  }

/**
 * @brief Get register stun port from database.
 *
 * @return Register stun port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipRegStunPort
 */
  public static int Mtc_CliDbGetSipRegStunPort() {
    return MtcCliDbJNI.Mtc_CliDbGetSipRegStunPort();
  }

/**
 * @brief Set register port.
 *
 * @param [in] iPort Register stun port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipRegStunPort
 */
  public static int Mtc_CliDbSetSipRegStunPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipRegStunPort(iPort);
  }

/**
 * @brief Get secondary register IP from database.
 *
 * @return The string of the sip register and proxy IP.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSet2ndSipRegIp
 */
  public static String Mtc_CliDbGet2ndSipRegIp() {
    return MtcCliDbJNI.Mtc_CliDbGet2ndSipRegIp();
  }

/**
 * @brief Set the secondary sip register and proxy IP.
 *
 * @param [in] pcIp The sip register and proxy IP.
 *
 * @retval MtcCommonConstants::ZOK Set the sip register IP successfully.
 * @retval MtcCommonConstants::ZFAILED Set the sip register IP failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGet2ndSipRegIp
 */
  public static int Mtc_CliDbSet2ndSipRegIp(String pcIp) {
    return MtcCliDbJNI.Mtc_CliDbSet2ndSipRegIp(pcIp);
  }

/**
 * @brief Get secondary register udp port from database.
 *
 * @return Register port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSet2ndSipRegUdpPort
 */
  public static int Mtc_CliDbGet2ndSipRegUdpPort() {
    return MtcCliDbJNI.Mtc_CliDbGet2ndSipRegUdpPort();
  }

/**
 * @brief Set secondary register udp port.
 *
 * @param [in] iPort Register udp port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGet2ndSipRegUdpPort
 */
  public static int Mtc_CliDbSet2ndSipRegUdpPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSet2ndSipRegUdpPort(iPort);
  }

/**
 * @brief Get secondary register  tcp port from database.
 *
 * @return Register port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSet2ndSipRegTcpPort
 */
  public static int Mtc_CliDbGet2ndSipRegTcpPort() {
    return MtcCliDbJNI.Mtc_CliDbGet2ndSipRegTcpPort();
  }

/**
 * @brief Set secondary register port.
 *
 * @param [in] iPort Register tcp port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGet2ndSipRegTcpPort
 */
  public static int Mtc_CliDbSet2ndSipRegTcpPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSet2ndSipRegTcpPort(iPort);
  }

/**
 * @brief Get secondary register  tls port from database.
 *
 * @return Register port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSet2ndSipRegTlsPort
 */
  public static int Mtc_CliDbGet2ndSipRegTlsPort() {
    return MtcCliDbJNI.Mtc_CliDbGet2ndSipRegTlsPort();
  }

/**
 * @brief Set secondary register port.
 *
 * @param [in] iPort Register tls port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGet2ndSipRegTlsPort
 */
  public static int Mtc_CliDbSet2ndSipRegTlsPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSet2ndSipRegTlsPort(iPort);
  }

/**
 * @brief Get secondary register  stun port from database.
 *
 * @return Register stun port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSet2ndSipRegStunPort
 */
  public static int Mtc_CliDbGet2ndSipRegStunPort() {
    return MtcCliDbJNI.Mtc_CliDbGet2ndSipRegStunPort();
  }

/**
 * @brief Set secondary register port.
 *
 * @param [in] iPort Register stun port .

 * @retval MtcCommonConstants::ZOK Set Register port successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGet2ndSipRegStunPort
 */
  public static int Mtc_CliDbSet2ndSipRegStunPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSet2ndSipRegStunPort(iPort);
  }

/**
 * @brief Get register expires time.
 *
 * @return Register expires time.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegExpire
 */
  public static int Mtc_CliDbGetRegExpire() {
    return MtcCliDbJNI.Mtc_CliDbGetRegExpire();
  }

/**
 * @brief Set register expires time.
 *
 * @param [in] iExpires Register expires time.

 * @retval MtcCommonConstants::ZOK Set Register expires successfully.
 * @retval MtcCommonConstants::ZFAILED Set Register expires failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegExpire
 */
  public static int Mtc_CliDbSetRegExpire(int iExpires) {
    return MtcCliDbJNI.Mtc_CliDbSetRegExpire(iExpires);
  }

/**
 * @brief Get the type of register expires.
 *
 * @return register expires type, @see @ref MtcCliDbConstants::EN_MTC_REG_EXP_CONTACT.
 *
 * @see @ref Mtc_CliDbGetRegExpType
 */
  public static int Mtc_CliDbGetRegExpireType() {
    return MtcCliDbJNI.Mtc_CliDbGetRegExpireType();
  }

/**
 * @brief Set register expires type.
 *
 * @param [in] iType The expires type, @see @ref MtcCliDbConstants::EN_MTC_REG_EXP_CONTACT.
 *
 * @retval MtcCommonConstants::ZOK Set expires type successfully.
 * @retval MtcCommonConstants::ZFAILED Set expires type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegExpireType
 */
  public static int Mtc_CliDbSetRegExpireType(int iType) {
    return MtcCliDbJNI.Mtc_CliDbSetRegExpireType(iType);
  }

/**
 * @brief Get subscribe register expires time.
 *
 * @return subscribe register expires time.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSubsRegExpire
 */
  public static int Mtc_CliDbGetSubsRegExpire() {
    return MtcCliDbJNI.Mtc_CliDbGetSubsRegExpire();
  }

/**
 * @brief Set subscribe register expires time.
 *
 * @param [in] iExpires subscribe register expires time.

 * @retval MtcCommonConstants::ZOK Set subscribe register expires successfully.
 * @retval MtcCommonConstants::ZFAILED Set subscribe register expires failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSubsRegExpire
 */
  public static int Mtc_CliDbSetSubsRegExpire(int iExpires) {
    return MtcCliDbJNI.Mtc_CliDbSetSubsRegExpire(iExpires);
  }

/**
 * @brief Get the sip register realm from database.
 *
 * @return The string of sip register realm.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipRegRealm
 */
  public static String Mtc_CliDbGetSipRegRealm() {
    return MtcCliDbJNI.Mtc_CliDbGetSipRegRealm();
  }

/**
 * @brief Set the sip register realm.
 *
 * @param [in] pcRealm The sip register realm.
 *
 * @retval MtcCommonConstants::ZOK Set the sip register realm successfully.
 * @retval MtcCommonConstants::ZFAILED Set the sip register realm failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipRegRealm
 */
  public static int Mtc_CliDbSetSipRegRealm(String pcRealm) {
    return MtcCliDbJNI.Mtc_CliDbSetSipRegRealm(pcRealm);
  }

/**
 * @brief Get the msrp keep alive type from database.
 *
 * @return The keep alive type, @see @ref keep MtcCliDbConstants::EN_MTC_MSRP_KEEP_ALIVE_DISABLE.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMsrpKeepAliveType
 */
  public static int Mtc_CliDbGetMsrpKeepAliveType() {
    return MtcCliDbJNI.Mtc_CliDbGetMsrpKeepAliveType();
  }

/**
 * @brief Set the msrp keep alive type.
 *
 * @param [in] iKeepAliveType The msrp keep alive type, @see @ref MtcCliDbConstants::EN_MTC_MSRP_KEEP_ALIVE_DISABLE.
 *
 * @retval MtcCommonConstants::ZOK Set the msrp keep alive type successfully.
 * @retval MtcCommonConstants::ZFAILED Set the msrp keep alive type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMsrpKeepAliveType
 */
  public static int Mtc_CliDbSetMsrpKeepAliveType(int iKeepAliveType) {
    return MtcCliDbJNI.Mtc_CliDbSetMsrpKeepAliveType(iKeepAliveType);
  }

/**
 * @brief Get the msrp keep alive interval time in seconds from database.
 *
 * @return The keep alive interval time in seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMsrpKeepAliveIntval
 */
  public static int Mtc_CliDbGetMsrpKeepAliveIntval() {
    return MtcCliDbJNI.Mtc_CliDbGetMsrpKeepAliveIntval();
  }

/**
 * @brief Set the msrp keep alive interval time in seconds.
 *
 * @param [in] iKeepAliveIntval The msrp keep alive interval time in seconds.
 *
 * @retval MtcCommonConstants::ZOK Set the msrp keep alive interval time in seconds successfully.
 * @retval MtcCommonConstants::ZFAILED Set the msrp keep alive interval time in seconds failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMsrpKeepAliveIntval
 */
  public static int Mtc_CliDbSetMsrpKeepAliveIntval(int iKeepAliveIntval) {
    return MtcCliDbJNI.Mtc_CliDbSetMsrpKeepAliveIntval(iKeepAliveIntval);
  }

/**
 * @brief Get the msrp transport trunk zise in bytes from database.
 *
 * @return msrp transport trunk zise in bytes.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMsrpTptTrunkSize
 */
  public static int Mtc_CliDbGetMsrpTptTrunkSize() {
    return MtcCliDbJNI.Mtc_CliDbGetMsrpTptTrunkSize();
  }

/**
 * @brief Set the msrp transport trunk zise in bytes.
 *
 * @param [in] iTptTrunkSize The msrp transport trunk zise in bytes.
 *
 * @retval MtcCommonConstants::ZOK Set the msrp transport trunk zise in bytes successfully.
 * @retval MtcCommonConstants::ZFAILED Set the msrp transport trunk zise in bytes failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMsrpTptTrunkSize
 */
  public static int Mtc_CliDbSetMsrpTptTrunkSize(int iTptTrunkSize) {
    return MtcCliDbJNI.Mtc_CliDbSetMsrpTptTrunkSize(iTptTrunkSize);
  }

/**
 * @brief Get the msrp send bodiless flag from database.
 *
 * @return The flag of msrp send bodiless.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMsrpSendBodiless
 */
  public static boolean Mtc_CliDbGetMsrpSendBodiless() {
    return MtcCliDbJNI.Mtc_CliDbGetMsrpSendBodiless();
  }

/**
 * @brief Set the msrp send bodiless flag.
 *
 * @param [in] bSendBodiless The msrp send bodiless flag.
 *
 * @retval MtcCommonConstants::ZOK Set the msrp send bodiless flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set the msrp send bodiless flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMsrpSendBodiless
 */
  public static int Mtc_CliDbSetMsrpSendBodiless(boolean bSendBodiless) {
    return MtcCliDbJNI.Mtc_CliDbSetMsrpSendBodiless(bSendBodiless);
  }

/**
 * @brief Get the msrp log message print flag from database.
 *
 * @return The flag of msrp log message print.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMsrpLogMsgPrint
 */
  public static boolean Mtc_CliDbGetMsrpLogMsgPrint() {
    return MtcCliDbJNI.Mtc_CliDbGetMsrpLogMsgPrint();
  }

/**
 * @brief Set the msrp log message print flag.
 *
 * @param [in] bLogMsgPrint The msrp log message print flag.
 *
 * @retval MtcCommonConstants::ZOK Set the msrp log message print flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set the msrp log message print flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMsrpLogMsgPrint
 */
  public static int Mtc_CliDbSetMsrpLogMsgPrint(boolean bLogMsgPrint) {
    return MtcCliDbJNI.Mtc_CliDbSetMsrpLogMsgPrint(bLogMsgPrint);
  }

/**
 * @brief Get the msrp log file information print flag from database.
 *
 * @return The flag of msrp log file information print.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMsrpLogFileInfoPrint
 */
  public static boolean Mtc_CliDbGetMsrpLogFileInfoPrint() {
    return MtcCliDbJNI.Mtc_CliDbGetMsrpLogFileInfoPrint();
  }

/**
 * @brief Set the msrp log file information print flag.
 *
 * @param [in] bLogFileInfoPrint The msrp log file information print flag.
 *
 * @retval MtcCommonConstants::ZOK Set the msrp log file information print flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set the msrp log file information print flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMsrpLogFileInfoPrint
 */
  public static int Mtc_CliDbSetMsrpLogFileInfoPrint(boolean bLogFileInfoPrint) {
    return MtcCliDbJNI.Mtc_CliDbSetMsrpLogFileInfoPrint(bLogFileInfoPrint);
  }

/**
 * @brief Get DNS local listen port from database.
 *
 * @return The DNS local listen port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDnsLclPort
 */
  public static int Mtc_CliDbGetDnsLclPort() {
    return MtcCliDbJNI.Mtc_CliDbGetDnsLclPort();
  }

/**
 * @brief Set DNS local listen port.
 *
 * @param [in] iPort DNS local listen port.
 *
 * @retval MtcCommonConstants::ZOK Set DNS local listen port successfully.
 * @retval MtcCommonConstants::ZFAILED Set DNS local listen port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetDnsLclPort
 */
  public static int Mtc_CliDbSetDnsLclPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetDnsLclPort(iPort);
  }

/**
 * @brief Set DNS use cache when dns query.
 *
 * @param [in] bEnCach DNS enable cache.
 *
 * @retval MtcCommonConstants::ZOK Set DNS enable cache successfully.
 * @retval MtcCommonConstants::ZFAILED Set DNS enable cache failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetDnsLclPort
 */
  public static int Mtc_CliDbSetDnsEnableCache(boolean bEnCach) {
    return MtcCliDbJNI.Mtc_CliDbSetDnsEnableCache(bEnCach);
  }

/**
 * @brief Get DNS primary or secondary server IP from database.
 *
 * @param [in] bPrimary DNS primary option.
 *
 * @return The DNS primary or secondary server IP.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDnsServIp
 */
  public static int Mtc_CliDbGetDnsServIp(boolean bPrimary) {
    return MtcCliDbJNI.Mtc_CliDbGetDnsServIp(bPrimary);
  }

/**
 * @brief Set DNS primary or secondary server IP.
 *
 * @param [in] bPrimary DNS primary option.
 * @param [in] iServIp DNS primary or secondary server IP.
 *
 * @retval MtcCommonConstants::ZOK Set DNS primary or secondary server IP successfully.
 * @retval MtcCommonConstants::ZFAILED Set DNS primary or secondary server IP failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetDnsServIp
 */
  public static int Mtc_CliDbSetDnsServIp(boolean bPrimary, int iServIp) {
    return MtcCliDbJNI.Mtc_CliDbSetDnsServIp(bPrimary, iServIp);
  }

/**
 * @brief Get DNS primary or secondary server port from database.
 *
 * @param [in] bPrimary DNS primary option.
 *
 * @return The DNS primary or secondary server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDnsServPort
 */
  public static int Mtc_CliDbGetDnsServPort(boolean bPrimary) {
    return MtcCliDbJNI.Mtc_CliDbGetDnsServPort(bPrimary);
  }

/**
 * @brief Get DNS use cache when dns query.
 *
 *
 * @return The DNS use cache lookup when dns query.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDnsEnableCache
 */
  public static boolean Mtc_CliDbGetDnsEnableCache() {
    return MtcCliDbJNI.Mtc_CliDbGetDnsEnableCache();
  }

/**
 * @brief Set DNS primary or secondary server port.
 *
 * @param [in] bPrimary DNS primary option.
 * @param [in] iPort DNS primary or secondary server port.
 *
 * @retval MtcCommonConstants::ZOK Set DNS primary or secondary server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set DNS primary or secondary server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetDnsServPort
 */
  public static int Mtc_CliDbSetDnsServPort(boolean bPrimary, int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetDnsServPort(bPrimary, iPort);
  }

/**
 * @brief Get NAT Traversal Mode.
 *
 * @return The NAT Traversal Mode @ref MtcCliDbConstants::EN_MTC_NAT_TRAVERSAL_OFF.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetNatTraversalMode
 */
  public static int Mtc_CliDbGetNatTraversalMode() {
    return MtcCliDbJNI.Mtc_CliDbGetNatTraversalMode();
  }

/**
 * @brief Set NAT Traversal Mode.
 *
 * @param [in] iType The NAT Traversal Mode @ref MtcCliDbConstants::EN_MTC_NAT_TRAVERSAL_OFF.
 *
 * @retval MtcCommonConstants::ZOK Set NAT Traversal Mode successfully.
 * @retval MtcCommonConstants::ZFAILED Set NAT Traversal Mode failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetNatTraversalMode
 */
  public static int Mtc_CliDbSetNatTraversalMode(int iType) {
    return MtcCliDbJNI.Mtc_CliDbSetNatTraversalMode(iType);
  }

/**
 * @brief Get the stun server name from database.
 *
 * @return The string of the stun server name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetStunServerName
 */
  public static String Mtc_CliDbGetStunServerName() {
    return MtcCliDbJNI.Mtc_CliDbGetStunServerName();
  }

/**
 * @brief Set the stun server name.
 *
 * @param [in] pcName The stun server name.
 *
 * @retval MtcCommonConstants::ZOK Set the stun server name successfully.
 * @retval MtcCommonConstants::ZFAILED Set the stun server name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetStunServerName
 */
  public static int Mtc_CliDbSetStunServerName(String pcName) {
    return MtcCliDbJNI.Mtc_CliDbSetStunServerName(pcName);
  }

/**
 * @brief Get the stun server port from database.
 *
 * @return The string of the stun server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetStunServerPort
 */
  public static int Mtc_CliDbGetStunServerPort() {
    return MtcCliDbJNI.Mtc_CliDbGetStunServerPort();
  }

/**
 * @brief Set the stun server port.
 *
 * @param [in] iPort The stun server port.
 *
 * @retval MtcCommonConstants::ZOK Set the stun server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set the stun server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetStunServerPort
 */
  public static int Mtc_CliDbSetStunServerPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetStunServerPort(iPort);
  }

/**
 * @brief Get the mdm server address uri from database.
 *
 * @return The string of the mdm server address uri.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMdmServerUri
 */
  public static String Mtc_CliDbGetMdmServerUri() {
    return MtcCliDbJNI.Mtc_CliDbGetMdmServerUri();
  }

/**
 * @brief Set the mdm server address uri.
 *
 * @param [in] pcServAddr The mdm server address uri.
 *
 * @retval MtcCommonConstants::ZOK Set the mdm server address uri successfully.
 * @retval MtcCommonConstants::ZFAILED Set the mdm server address uri failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMdmServerUri
 */
  public static int Mtc_CliDbSetMdmServerUri(String pcServUri) {
    return MtcCliDbJNI.Mtc_CliDbSetMdmServerUri(pcServUri);
  }

/**
 * @brief Get the turn server name from database.
 *
 * @return The string of the turn server name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTurnServerName
 */
  public static String Mtc_CliDbGetTurnServerName() {
    return MtcCliDbJNI.Mtc_CliDbGetTurnServerName();
  }

/**
 * @brief Set the turn server name.
 *
 * @param [in] pcName The turn server name.
 *
 * @retval MtcCommonConstants::ZOK Set the turn server name successfully.
 * @retval MtcCommonConstants::ZFAILED Set the turn server name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTurnServerName
 */
  public static int Mtc_CliDbSetTurnServerName(String pcName) {
    return MtcCliDbJNI.Mtc_CliDbSetTurnServerName(pcName);
  }

/**
 * @brief Get the turn server port from database.
 *
 * @return The string of the turn server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTurnServerPort
 */
  public static int Mtc_CliDbGetTurnServerPort() {
    return MtcCliDbJNI.Mtc_CliDbGetTurnServerPort();
  }

/**
 * @brief Set the turn server port.
 *
 * @param [in] iPort The turn server port.
 *
 * @retval MtcCommonConstants::ZOK Set the turn server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set the turn server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTurnServerPort
 */
  public static int Mtc_CliDbSetTurnServerPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetTurnServerPort(iPort);
  }

/**
 * @brief Get SIP local UDP listen port from database.
 *
 * @return The SIP local UDP listen port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipLclUdpPort
 */
  public static int Mtc_CliDbGetSipLclUdpPort() {
    return MtcCliDbJNI.Mtc_CliDbGetSipLclUdpPort();
  }

/**
 * @brief Set sip local UDP listen port.
 *
 * @param [in] iPort SIP local UDP listen port.
 *
 * @retval MtcCommonConstants::ZOK Set the port successfully.
 * @retval MtcCommonConstants::ZFAILED Set the port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipLclTcpPort
 */
  public static int Mtc_CliDbSetSipLclUdpPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipLclUdpPort(iPort);
  }

/**
 * @brief Get SIP local TCP listen port from database.
 *
 * @return The SIP local TCP listen port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipLclTcpPort
 */
  public static int Mtc_CliDbGetSipLclTcpPort() {
    return MtcCliDbJNI.Mtc_CliDbGetSipLclTcpPort();
  }

/**
 * @brief Set sip local TCP listen port.
 *
 * @param [in] iPort SIP local TCP listen port.
 *
 * @retval MtcCommonConstants::ZOK Set the port successfully.
 * @retval MtcCommonConstants::ZFAILED Set the port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipLclTcpPort
 */
  public static int Mtc_CliDbSetSipLclTcpPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipLclTcpPort(iPort);
  }

/**
 * @brief Get SIP local TLS/SSL listen port from database.
 *
 * @return The SIP local TLS/SSL listen port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipLclTcpPort
 */
  public static int Mtc_CliDbGetSipLclTlsPort() {
    return MtcCliDbJNI.Mtc_CliDbGetSipLclTlsPort();
  }

/**
 * @brief Set sip local TLS/SSL listen port.
 *
 * @param [in] iPort SIP local TLS/SSL listen port.
 *
 * @retval MtcCommonConstants::ZOK Set the port successfully.
 * @retval MtcCommonConstants::ZFAILED Set the port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipLclTcpPort
 */
  public static int Mtc_CliDbSetSipLclTlsPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipLclTlsPort(iPort);
  }

/**
 * @brief Get SIP timer 1.
 *
 * @return The SIP timer 1 length.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipTmr1
 */
  public static int Mtc_CliDbGetSipTmr1() {
    return MtcCliDbJNI.Mtc_CliDbGetSipTmr1();
  }

/**
 * @brief Set sip timer 1.
 *
 * @param [in] iTimeLen timer 1 length.
 *
 * @retval MtcCommonConstants::ZOK Set the timer 1 successfully.
 * @retval MtcCommonConstants::ZFAILED Set the timer 1 failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipTmr1
 */
  public static int Mtc_CliDbSetSipTmr1(int iTimeLen) {
    return MtcCliDbJNI.Mtc_CliDbSetSipTmr1(iTimeLen);
  }

/**
 * @brief Get SIP timer 2.
 *
 * @return The SIP timer 2 length.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipTmr2
 */
  public static int Mtc_CliDbGetSipTmr2() {
    return MtcCliDbJNI.Mtc_CliDbGetSipTmr2();
  }

/**
 * @brief Set sip timer 2.
 *
 * @param [in] iTimeLen timer 2 length.
 *
 * @retval MtcCommonConstants::ZOK Set the timer 2 successfully.
 * @retval MtcCommonConstants::ZFAILED Set the timer 2 failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipTmr2
 */
  public static int Mtc_CliDbSetSipTmr2(int iTimeLen) {
    return MtcCliDbJNI.Mtc_CliDbSetSipTmr2(iTimeLen);
  }

/**
 * @brief Get SIP timer 4.
 *
 * @return The SIP timer 4 length.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipTmr4
 */
  public static int Mtc_CliDbGetSipTmr4() {
    return MtcCliDbJNI.Mtc_CliDbGetSipTmr4();
  }

/**
 * @brief Set sip timer 4.
 *
 * @param [in] iTimeLen timer 4 length.
 *
 * @retval MtcCommonConstants::ZOK Set the timer 4 successfully.
 * @retval MtcCommonConstants::ZFAILED Set the timer 4 failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipTmr4
 */
  public static int Mtc_CliDbSetSipTmr4(int iTimeLen) {
    return MtcCliDbJNI.Mtc_CliDbSetSipTmr4(iTimeLen);
  }

/**
 * @brief Get use Ipv4 option from database.
 *
 * @retval true Use Ipv4.
 * @retval false Do not use Ipv4.
 */
  public static boolean Mtc_CliDbGetUseIpv4() {
    return MtcCliDbJNI.Mtc_CliDbGetUseIpv4();
  }

  public static int Mtc_CliDbSetUseIpv4(boolean bUseIpv4) {
    return MtcCliDbJNI.Mtc_CliDbSetUseIpv4(bUseIpv4);
  }

/**
 * @brief Get sip dscp value from database.
 *
 * @retval The sip dscp value;
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipDscpValue
 */
  public static int Mtc_CliDbGetSipDscpValue() {
    return MtcCliDbJNI.Mtc_CliDbGetSipDscpValue();
  }

/**
 * @brief Set sip dscp value.
 *
 * @param [in] iValue The sip dscp value.the value range is 0~63.
 *
 * @retval MtcCommonConstants::ZOK Set sip dscp value successfully.
 * @retval MtcCommonConstants::ZFAILED Set sip dscp value failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipDscpValue
 */
  public static int Mtc_CliDbSetSipDscpValue(int iValue) {
    return MtcCliDbJNI.Mtc_CliDbSetSipDscpValue(iValue);
  }

/**
 * @brief Get use TEL URI option from database.
 *
 * @retval true Use TEL URI.
 * @retval false Do not use TEL URI.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUseTelUri
 */
  public static boolean Mtc_CliDbGetUseTelUri() {
    return MtcCliDbJNI.Mtc_CliDbGetUseTelUri();
  }

/**
 * @brief Get use TEL URI option.
 *
 * @param [in] bIvtTel Use TEL URI option.
 *
 * @retval MtcCommonConstants::ZOK Set user TEL URI option successfully.
 * @retval MtcCommonConstants::ZFAILED Set user TEL URI option failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUseTelUri
 */
  public static int Mtc_CliDbSetUseTelUri(boolean bIvtTel) {
    return MtcCliDbJNI.Mtc_CliDbSetUseTelUri(bIvtTel);
  }

/**
 * @brief Get SIP register or proxy server IP from database.
 *
 * @note: It can set different REGISTAR and Proxy compare to @ref MtcCliDb::Mtc_CliDbGetSipRegIp.
 *
 * @param [in] bProxy SIP proxy option.
 *
 * @return Get SIP register or proxy server IP.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipServIp
 */
  public static String Mtc_CliDbGetSipServIp(boolean bProxy) {
    return MtcCliDbJNI.Mtc_CliDbGetSipServIp(bProxy);
  }

/**
 * @brief Set SIP register or proxy server IP.
 *
 * @note: It can set different REGISTAR and Proxy compare to @ref MtcCliDb::Mtc_CliDbSetSipRegIp.
 *
 * @param [in] bProxy SIP proxy option.
 * @param [in] pcIp SIP register or proxy server IP.
 *
 * @retval MtcCommonConstants::ZOK Set SIP register or proxy server IP successfully.
 * @retval MtcCommonConstants::ZFAILED Set SIP register or proxy server IP failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipServIp
 */
  public static int Mtc_CliDbSetSipServIp(boolean bProxy, String pcIp) {
    return MtcCliDbJNI.Mtc_CliDbSetSipServIp(bProxy, pcIp);
  }

/**
 * @brief Get SIP register or proxy server port from database.
 *
 * @note: It can set different REGISTAR and Proxy compare to 
 *        @ref MtcCliDb::Mtc_CliDbSetSipRegUdpPort and @ref MtcCliDb::Mtc_CliDbSetSipRegTcpPort.
 *
 * @param [in] bProxy SIP proxy option.
 *
 * @return Get SIP register or proxy server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipServPort
 */
  public static int Mtc_CliDbGetSipServPort(boolean bProxy) {
    return MtcCliDbJNI.Mtc_CliDbGetSipServPort(bProxy);
  }

/**
 * @brief Set SIP register or proxy server port.
 *
 * @note: It can set different REGISTAR and Proxy compare to 
 *        @ref MtcCliDb::Mtc_CliDbSetSipRegUdpPort and @ref MtcCliDb::Mtc_CliDbSetSipRegTcpPort.
 *
 * @param [in] bProxy SIP proxy option.
 * @param [in] iPort SIP register or proxy server port.
 *
 * @retval MtcCommonConstants::ZOK Set SIP register or proxy server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set SIP register or proxy server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipServPort
 */
  public static int Mtc_CliDbSetSipServPort(boolean bProxy, int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipServPort(bProxy, iPort);
  }

/**
 * @brief Get SIP register or proxy server port from database.
 *
 * @param [in] bProxy SIP proxy option.
 * @param [in] ucTpt SIP register or proxy server transport protocal type.
 *
 * @return Get SIP register or proxy server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipServPort, @ref MtcCliDb::Mtc_CliDbSetSipServPort, @ref MtcCliDb::Mtc_CliDbSetSipServPortX
 */
  public static int Mtc_CliDbGetSipServPortX(boolean bProxy, short ucTpt) {
    return MtcCliDbJNI.Mtc_CliDbGetSipServPortX(bProxy, ucTpt);
  }

/**
 * @brief Get SIP register or proxy server port.
 *
 * @param [in] bProxy SIP proxy option.
 * @param [in] ucTpt SIP register or proxy server transport protocal type.
 * @param [in] iPort SIP register or proxy server port.
 *
 * @retval MtcCommonConstants::ZOK Set SIP register or proxy server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set SIP register or proxy server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipServPort, @ref MtcCliDb::Mtc_CliDbSetSipServPort, @ref MtcCliDb::Mtc_CliDbGetSipServPortX
 */
  public static int Mtc_CliDbSetSipServPortX(boolean bProxy, short ucTpt, int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetSipServPortX(bProxy, ucTpt, iPort);
  }

/**
 * @brief Get SIP register or proxy server transport protocol type from database.
 *
 * @note: It can set different REGISTAR and Proxy compare to @ref MtcCliDb::Mtc_CliDbGetSipRegTpt.
 *
 * @param [in] bProxy SIP proxy option.
 *
 * @return Get SIP register or proxy server transport protocol type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipServTpt
 */
  public static short Mtc_CliDbGetSipServTpt(boolean bProxy) {
    return MtcCliDbJNI.Mtc_CliDbGetSipServTpt(bProxy);
  }

/**
 * @brief Set SIP register or proxy server transport protocal type.
 *
 * @note: It can set different REGISTAR and Proxy compare to @ref MtcCliDb::Mtc_CliDbSetSipRegTpt.
 *
 * @param [in] bProxy SIP proxy option.
 * @param [in] ucTpt SIP register or proxy server transport protocal type.
 *
 * @retval MtcCommonConstants::ZOK Set SIP register or proxy server transport protocal type successfully.
 * @retval MtcCommonConstants::ZFAILED Set SIP register or proxy server transport protocal type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipServTpt
 */
  public static int Mtc_CliDbSetSipServTpt(boolean bProxy, short ucTpt) {
    return MtcCliDbJNI.Mtc_CliDbSetSipServTpt(bProxy, ucTpt);
  }

/**
 * @brief Get SIP register or proxy server realm from database.
 *
 * @note: It can set different REGISTAR and Proxy compare to @ref MtcCliDb::Mtc_CliDbGetSipRegRealm.
 *
 * @param [in] bProxy SIP proxy option.
 *
 * @return Get SIP register or proxy server realm.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipServRealm
 */
  public static String Mtc_CliDbGetSipServRealm(boolean bProxy) {
    return MtcCliDbJNI.Mtc_CliDbGetSipServRealm(bProxy);
  }

/**
 * @brief Set SIP register or proxy server realm.
 *
 * @note: It can set different REGISTAR and Proxy compare to @ref MtcCliDb::Mtc_CliDbSetSipRegRealm.
 *
 * @param [in] bProxy SIP proxy option.
 * @param [in] pcRealm SIP register or proxy server realm.
 *
 * @retval MtcCommonConstants::ZOK Set SIP register or proxy server realm successfully.
 * @retval MtcCommonConstants::ZFAILED Set SIP register or proxy server realm failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipServRealm
 */
  public static int Mtc_CliDbSetSipServRealm(boolean bProxy, String pcRealm) {
    return MtcCliDbJNI.Mtc_CliDbSetSipServRealm(bProxy, pcRealm);
  }

/**
 * @brief Get register retry count while starting REGISTER.
 *
 * @return Get register retry count.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetRegRetryCount
 */
  public static int Mtc_CliDbGetRegRetryCount() {
    return MtcCliDbJNI.Mtc_CliDbGetRegRetryCount();
  }

/**
 * @brief Set register retry count while starting REGISTER.
 *
 * @param [in] iCount The register retry count .
 *
 * @retval MtcCommonConstants::ZOK Set register retry count successfully.
 * @retval MtcCommonConstants::ZFAILED Set register retry count failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegRetryCount
 */
  public static int Mtc_CliDbSetRegRetryCount(int iCount) {
    return MtcCliDbJNI.Mtc_CliDbSetRegRetryCount(iCount);
  }

/**
 * @brief Get subscribe register event option after successful REGISTER.
 *
 * @return Get subscribe register event enable option.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSubsRegEvnt
 */
  public static boolean Mtc_CliDbGetSubsRegEvnt() {
    return MtcCliDbJNI.Mtc_CliDbGetSubsRegEvnt();
  }

/**
 * @brief Set subscribe register event option after successful REGISTER.
 *
 * @param [in] bSubs Support subscribe register event.
 *
 * @retval MtcCommonConstants::ZOK Set subscribe register event option successfully.
 * @retval MtcCommonConstants::ZFAILED Set subscribe register event option failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSubsRegEvnt
 */
  public static int Mtc_CliDbSetSubsRegEvnt(boolean bSubs) {
    return MtcCliDbJNI.Mtc_CliDbSetSubsRegEvnt(bSubs);
  }

/**
 * @brief Get access network type.
 *
 * @return Get access network type. Network type @ref MtcCliDbConstants::EN_MTC_ACC_NET_UNKNOWN.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAccNetType
 */
  public static int Mtc_CliDbGetAccNetType() {
    return MtcCliDbJNI.Mtc_CliDbGetAccNetType();
  }

/**
 * @brief Set access network type.
 *
 * @param [in] iType The access network type. 
 *             Network type @ref MtcCliDbConstants::EN_MTC_ACC_NET_UNKNOWN. 
 *
 * @retval MtcCommonConstants::ZOK Set access network type successfully.
 * @retval MtcCommonConstants::ZFAILED Set access network type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAccNetType
 */
  public static int Mtc_CliDbSetAccNetType(int iType) {
    return MtcCliDbJNI.Mtc_CliDbSetAccNetType(iType);
  }

/**
 * @brief Get access network info.
 *
 * @return Get access network info.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAccNetInfo
 */
  public static String Mtc_CliDbGetAccNetInfo() {
    return MtcCliDbJNI.Mtc_CliDbGetAccNetInfo();
  }

/**
 * @brief Set access network info.
 *
 * @param [in] pcInfo Access network info.
 *             The info should set right value according to 
 *             3GPP TS24.229[7.2A.4.3]
 *
 * @retval MtcCommonConstants::ZOK Set access network info successfully.
 * @retval MtcCommonConstants::ZFAILED Set access network info failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAccNetInfo
 */
  public static int Mtc_CliDbSetAccNetInfo(String pcInfo) {
    return MtcCliDbJNI.Mtc_CliDbSetAccNetInfo(pcInfo);
  }

/**
 * @brief Get XCAP root uri from database.
 *
 * @return The string of root uri.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapRootUri
 */
  public static String Mtc_CliDbGetXcapRootUri() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapRootUri();
  }

/**
 * @brief Set XCAP root uri.
 *
 * @param [in] pcUri The string of root uri.
 *
 * @retval MtcCommonConstants::ZOK Set root uri successfully.
 * @retval MtcCommonConstants::ZFAILED Set name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapRootUri
 */
  public static int Mtc_CliDbSetXcapRootUri(String pcUri) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapRootUri(pcUri);
  }

/**
 * @brief Get XCAP authorization name from database.
 *
 * @return The string of authorization name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapAuthName
 */
  public static String Mtc_CliDbGetXcapAuthName() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapAuthName();
  }

/**
 * @brief Set XCAP authorization name.
 *
 * @param [in] pcName The string of authorization name.
 *
 * @retval MtcCommonConstants::ZOK Set authorization name successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapAuthName
 */
  public static int Mtc_CliDbSetXcapAuthName(String pcName) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapAuthName(pcName);
  }

/**
 * @brief Get XCAP authorization password from database.
 *
 * @return The string of authorization password.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapAuthPass
 */
  public static String Mtc_CliDbGetXcapAuthPass() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapAuthPass();
  }

/**
 * @brief Set XCAP authorization password.
 *
 * @param [in] pcPass The string of authorization password.
 *
 * @retval MtcCommonConstants::ZOK Set authorization password successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization password failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapAuthPass
 */
  public static int Mtc_CliDbSetXcapAuthPass(String pcPass) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapAuthPass(pcPass);
  }

/**
 * @brief Get XCAP authorization token from database.
 *
 * @return The string of authorization token.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapAuthToken
 */
  public static String Mtc_CliDbGetXcapAuthToken() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapAuthToken();
  }

/**
 * @brief Set XCAP authorization token.
 *
 * @param [in] pcName The string of authorization token.
 *
 * @retval MtcCommonConstants::ZOK Set authorization token successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization token failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapAuthToken
 */
  public static int Mtc_CliDbSetXcapAuthToken(String pcToken) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapAuthToken(pcToken);
  }

/**
 * @brief Get XCAP authorization type from database.
 *
 * @return The authorization type, @see @ref MtcCliDbConstants::EN_MTC_XCAP_AUTH_UNKNOWN.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapAuthType
 */
  public static int Mtc_CliDbGetXcapAuthType() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapAuthType();
  }

/**
 * @brief Set XCAP authorization type.
 *
 * @param [in] iType The authorization type, @see @ref MtcCliDbConstants::EN_MTC_XCAP_AUTH_UNKNOWN.
 *
 * @retval MtcCommonConstants::ZOK Set authorization type successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapAuthType
 */
  public static int Mtc_CliDbSetXcapAuthType(int iType) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapAuthType(iType);
  }

/**
 * @brief Get XCAP server host from database.
 *
 * @return The string of the XCAP server host.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapHost
 */
  public static String Mtc_CliDbGetXcapHost() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapHost();
  }

/**
 * @brief Set the XCAP server host.
 *
 * @param [in] pcHost The XCAP server host.
 *
 * @retval MtcCommonConstants::ZOK Set the server host successfully.
 * @retval MtcCommonConstants::ZFAILED Set the server host failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapHost
 */
  public static int Mtc_CliDbSetXcapHost(String pcHost) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapHost(pcHost);
  }

/**
 * @brief Get XCAP the xcap server host port from database.
 *
 * @return The port of the XCAP server host port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapHostPort
 */
  public static int Mtc_CliDbGetXcapHostPort() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapHostPort();
  }

/**
 * @brief Set the XCAP server host port.
 *
 * @param [in] wPort The XCAP server host port.
 *
 * @retval MtcCommonConstants::ZOK Set the server host successfully.
 * @retval MtcCommonConstants::ZFAILED Set the server host failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapHostPort
 */
  public static int Mtc_CliDbSetXcapHostPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapHostPort(wPort);
  }

/**
 * @brief Get XCAP root from database.
 *
 * @return The string of the XCAP root.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapHost
 */
  public static String Mtc_CliDbGetXcapRoot() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapRoot();
  }

/**
 * @brief Set the XCAP root.
 *
 * @param [in] pcRoot The XCAP root.
 *
 * @retval MtcCommonConstants::ZOK Set the root successfully.
 * @retval MtcCommonConstants::ZFAILED Set the root failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapHost
 */
  public static int Mtc_CliDbSetXcapRoot(String pcRoot) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapRoot(pcRoot);
  }

/**
 * @brief Get XCAP user id from database.
 *
 * @return The string of the XCAP user id.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapUserId
 */
  public static String Mtc_CliDbGetXcapUserId() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapUserId();
  }

/**
 * @brief Set the XCAP user id.
 *
 * @param [in] pcUserId The XCAP user id.
 *
 * @retval MtcCommonConstants::ZOK Set the XCAP user id successfully.
 * @retval MtcCommonConstants::ZFAILED Set the XCAP user id failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapUserId
 */
  public static int Mtc_CliDbSetXcapUserId(String pcUserId) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapUserId(pcUserId);
  }

/**
 * @brief Get XCAP aggregation proxy IP from database.
 *
 * @return The string of the XCAP aggregation proxy IP.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapAgProxyIp
 */
  public static String Mtc_CliDbGetXcapAgProxyIp() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapAgProxyIp();
  }

/**
 * @brief Set the XCAP aggregation proxy IP.
 *
 * @param [in] pcIp The XCAP aggregation proxy IP.
 *
 * @retval MtcCommonConstants::ZOK Set the aggregation proxy IP successfully.
 * @retval MtcCommonConstants::ZFAILED Set the aggregation proxy IP failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapAgProxyIp
 */
  public static int Mtc_CliDbSetXcapAgProxyIp(String pcIp) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapAgProxyIp(pcIp);
  }

/**
 * @brief Get aggregation proxy port from database.
 *
 * @return Aggregation proxy port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapAgProxyPort
 */
  public static int Mtc_CliDbGetXcapAgProxyPort() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapAgProxyPort();
  }

/**
 * @brief Set aggregation proxy port.
 *
 * @param [in] iPort Aggregation proxy port .

 * @retval MtcCommonConstants::ZOK Set aggregation proxy port successfully.
 * @retval MtcCommonConstants::ZFAILED Set aggregation proxy port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapAgProxyPort
 */
  public static int Mtc_CliDbSetXcapAgProxyPort(int iPort) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapAgProxyPort(iPort);
  }

/**
 * @brief get xcap uri namespace support.
 *
 * @return xcap uri namespace support.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapUriNsSupt
 */
  public static boolean Mtc_CliDbGetXcapUriNsSupt() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapUriNsSupt();
  }

/**
 * @brief set xcap uri namespace support.
 *
 * @param [in] bSupt xcap uri namespace.

 * @retval MtcCommonConstants::ZOK Set xcap uri namespace suppor successfully.
 * @retval MtcCommonConstants::ZFAILED Set xcap uri namespace suppor failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapUriNsSupt
 */
  public static int Mtc_CliDbSetXcapUriNsSupt(boolean bSupt) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapUriNsSupt(bSupt);
  }

/**
 * @brief get xcap pre-arranged group uri.
 *
 * @return xcap pre-arranged group uri.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapPreArgGrpUri
 */
  public static String Mtc_CliDbGetXcapPreArgGrpUri() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapPreArgGrpUri();
  }

/**
 * @brief set xcap pre-arranged group uri.
 *
 * @param [in] pcPreArgGrpUri pre-arranged group uri.

 * @retval MtcCommonConstants::ZOK  set xcap pre-arranged group uri successfully.
 * @retval MtcCommonConstants::ZFAILED set xcap pre-arranged group uri failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapPreArgGrpUri
 */
  public static int Mtc_CliDbSetXcapPreArgGrpUri(String pcPreArgGrpUri) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapPreArgGrpUri(pcPreArgGrpUri);
  }

/**
 * @brief get xcap chat group uri.
 *
 * @return xcap chat group uri.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapChatGrpUri
 */
  public static String Mtc_CliDbGetXcapChatGrpUri() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapChatGrpUri();
  }

/**
 * @brief set xcap chat group uri.
 *
 * @param [in] pcChatGpUri xcap chat group uri.

 * @retval MtcCommonConstants::ZOK  set xcap chat group uri successfully.
 * @retval MtcCommonConstants::ZFAILED set xcap chat group uri failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapChatGrpUri
 */
  public static int Mtc_CliDbSetXcapChatGrpUri(String pcChatGpUri) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapChatGrpUri(pcChatGpUri);
  }

/**
 * @brief get xcap rls-service uri.
 *
 * @return xcap rls-service uri.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapRlsSrvUri.
 */
  public static String Mtc_CliDbGetXcapRlsSrvUri() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapRlsSrvUri();
  }

/**
 * @brief set xcap rls-service uri.
 *
 * @param [in] pcRlsSrvUri xcap rls-service uri.

 * @retval MtcCommonConstants::ZOK  set xcap rls-service uri successfully.
 * @retval MtcCommonConstants::ZFAILED set xcap rls-service uri failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapChatGrpUri
 */
  public static int Mtc_CliDbSetXcapRlsSrvUri(String pcRlsSrvUri) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapRlsSrvUri(pcRlsSrvUri);
  }

/**
 * @brief get xcapc listen tcp port.
 *
 * @return xcapc listen tcp port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXcapcTcpListenPort
 */
  public static int Mtc_CliDbGetXcapcTcpListenPort() {
    return MtcCliDbJNI.Mtc_CliDbGetXcapcTcpListenPort();
  }

/**
 * @brief set xcapc listen tcp port.
 *
 * @param [in] wPort xcapc listen tcp port.

 * @retval MtcCommonConstants::ZOK  set xcapc listen tcp port successfully.
 * @retval MtcCommonConstants::ZFAILED set xcapc listen tcp port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXcapcTcpListenPort
 */
  public static int Mtc_CliDbSetXcapcTcpListenPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetXcapcTcpListenPort(wPort);
  }

/**
 * @brief Get revoke timer length.
 *
 * @return revoke timer length in seconds.
 */
  public static int Mtc_CliDbGetRvkTmrLen() {
    return MtcCliDbJNI.Mtc_CliDbGetRvkTmrLen();
  }

/**
 * @brief Get pnb management enable.
 *
 * @return pnb management enable.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPnbEnable
 */
  public static boolean Mtc_CliDbGetPnbEnable() {
    return MtcCliDbJNI.Mtc_CliDbGetPnbEnable();
  }

/**
 * @brief Set pnb management enable.
 *
 * @param [in] bEnable pnb management enable .
 *
 * @retval MtcCommonConstants::ZOK Set pnb management enable successfully.
 * @retval MtcCommonConstants::ZFAILED Set pnb management enable failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPnbEnable
 */
  public static int Mtc_CliDbSetPnbEnable(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetPnbEnable(bEnable);
  }

/**
 * @brief Get xdm document subscribe enable.
 *
 * @return xdm document subscribe enable.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetXdmChgSubsEnable
 */
  public static boolean Mtc_CliDbGetXdmChgSubsEnable() {
    return MtcCliDbJNI.Mtc_CliDbGetXdmChgSubsEnable();
  }

/**
 * @brief Set xdm document changes subscription enable.
 *
 * @param [in] bEnable xdm document changes subscription enable .

 * @retval MtcCommonConstants::ZOK Set subscription enable successfully.
 * @retval MtcCommonConstants::ZFAILED Set subscription enable failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetXdmChgSubsEnable
 */
  public static int Mtc_CliDbSetXdmChgSubsEnable(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetXdmChgSubsEnable(bEnable);
  }

/**
 * @brief Get the format (SIP URI or tel URI) to be used when the callee 
 *  numbering is dialled in national format.
 *
 * @return Uri format type, @see @ref MtcCliDbConstants::EN_MTC_URI_FMT_TEL.
 */
  public static int Mtc_CliDbGetNatUriFmt() {
    return MtcCliDbJNI.Mtc_CliDbGetNatUriFmt();
  }

/**
 * @brief Get the format (SIP URI or tel URI) to be used when the callee 
 *  numbering is dialled in international format.
 *
 * @return Uri format type, @see @ref MtcCliDbConstants::EN_MTC_URI_FMT_TEL.
 */
  public static int Mtc_CliDbGetIntUriFmt() {
    return MtcCliDbJNI.Mtc_CliDbGetIntUriFmt();
  }

/**
 * @brief Get a sip.instance enable flag.
 * A sip.instance which is required for the sip.instance multidevice approach.
 *
 * @return sip instance enable.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSipInstanceEnable
 *
 */
  public static boolean Mtc_CliDbGetSipInstanceEnable() {
    return MtcCliDbJNI.Mtc_CliDbGetSipInstanceEnable();
  }

/**
 * @brief Set a sip.instance enable flag. 
 * A sip.instance which is required for the sip.instance multidevice approach.
 *
 * @param [in] bSipInstanceEnable sip instance enable.
 *
 * @return sip instance enable.
 *
 * @retval MtcCommonConstants::ZOK Set sip instance enable successfully.
 * @retval MtcCommonConstants::ZFAILED Set sip instance enable failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSipInstanceEnable
 *
 */
  public static int Mtc_CliDbSetSipInstanceEnable(boolean bSipInstanceEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetSipInstanceEnable(bSipInstanceEnable);
  }

/**
 * @brief Get the Q-value to be put in the Contact header of the Register method.
 *
 * @return Q-value, including '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'.
 */
  public static String Mtc_CliDbGetQValue() {
    return MtcCliDbJNI.Mtc_CliDbGetQValue();
  }

/**
 * @brief Get whether or not to show the RCS enabled/disabled switch permanently.
 *
 * @return switch type, @see @ref MtcCliDbConstants::EN_MTC_RCSE_SWITCH_PERM.
 * 
 * @see @ref MtcCliDb::Mtc_CliDbSetRcseSwitchType
 */
  public static short Mtc_CliDbGetRcseSwitchType() {
    return MtcCliDbJNI.Mtc_CliDbGetRcseSwitchType();
  }

/**
 * @brief Get the APN to be used as the RCS roaming APN.
 *
 * @return APN name string.
 * 
 * @see @ref MtcCliDb::Mtc_CliDbSetRcseOnlyApn
 */
  public static String Mtc_CliDbGetRcseOnlyApn() {
    return MtcCliDbJNI.Mtc_CliDbGetRcseOnlyApn();
  }

/**
 * @brief Get the use ims apn mode when available.
 *
 * @retval -1 Indications the device shall never use the IMS APN for RCS.
 * @retval 0  Indications The device shall use the IMS APN for RCS when the 
 *            device's internet access is using cellular coverage.
 * @retval 1  Indications the device shall always use the IMS APN for RCS whenever 
 *            it is in cellular coverage, even if non-cellular access is available.
 * 
 * @see @ref MtcCliDb::Mtc_CliDbSetAlwaysUseImsApn
 */
  public static int Mtc_CliDbGetAlwaysUseImsApn() {
    return MtcCliDbJNI.Mtc_CliDbGetAlwaysUseImsApn();
  }

/**
 * @brief Set whether or not to show the RCS enabled/disabled switch permanently.
 *
 * @param [in] ucRcseSwitch switch type @see @ref MtcCliDbConstants::EN_MTC_RCSE_SWITCH_PERM
 *
 * @retval MtcCommonConstants::ZOK Set switch type successfully.
 * @retval MtcCommonConstants::ZFAILED Set switch type failed.
 * 
 * @see @ref MtcCliDb::Mtc_CliDbGetRcseSwitchType
 */
  public static int Mtc_CliDbSetRcseSwitchType(short ucRcseSwitch) {
    return MtcCliDbJNI.Mtc_CliDbSetRcseSwitchType(ucRcseSwitch);
  }

/**
 * @brief Set the APN to be used as the RCS roaming APN.
 *
 * @param [in] pcApn The APN name.
 *
 * @retval MtcCommonConstants::ZOK Set APN name successfully.
 * @retval MtcCommonConstants::ZFAILED Set APN name failed.
 * 
 * @see @ref MtcCliDb::Mtc_CliDbGetRcseOnlyApn
 */
  public static int Mtc_CliDbSetRcseOnlyApn(String pcApn) {
    return MtcCliDbJNI.Mtc_CliDbSetRcseOnlyApn(pcApn);
  }

/**
 * @brief Set the always use ims apn mode.
 *
 * @param [in] iAlwaysUseImsApn The use ims apn mode.
 *
 * @retval MtcCommonConstants::ZOK Set use ims apn mode successfully.
 * @retval MtcCommonConstants::ZFAILED Set use ims apn mode failed.
 * 
 * @see @ref MtcCliDb::Mtc_CliDbGetAlwaysUseImsApn
 */
  public static int Mtc_CliDbSetAlwaysUseImsApn(int iAlwaysUseImsApn) {
    return MtcCliDbJNI.Mtc_CliDbSetAlwaysUseImsApn(iAlwaysUseImsApn);
  }

/**
 * @brief Get data bearer type.
 * 
 * @return Data bearer type, @see @ref MtcCliDbConstants::EN_MTC_DATA_BEARER_UNKNOWN.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDataBearerType
 */
  public static int Mtc_CliDbGetDataBearerType() {
    return MtcCliDbJNI.Mtc_CliDbGetDataBearerType();
  }

/**
 * @brief Set data bearer type.
 *
 * @param [in] iBearerType The data bearer type, @see @ref MtcCliDbConstants::EN_MTC_DATA_BEARER_UNKNOWN
 * 
 * @retval MtcCommonConstants::ZOK Set data bearer type successfully.
 * @retval MtcCommonConstants::ZFAILED Set data bearer type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDataBearerType
 */
  public static int Mtc_CliDbSetDataBearerType(int iBearerType) {
    return MtcCliDbJNI.Mtc_CliDbSetDataBearerType(iBearerType);
  }

/**
 * @brief Get tls client method type.
 *
 * @return tls client method type, @see @ref MtcCliDbConstants::EN_MTC_TLS_METHOD_SSLV2.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsCliMethod
 */
  public static int Mtc_CliDbGetTlsCliMethod() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsCliMethod();
  }

/**
 * @brief Get tls client verify type.
 *
 * @return tls client verify type, @see @ref MtcCliDbConstants::EN_MTC_TLS_VERY_NONE.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsCliVeryType
 */
  public static int Mtc_CliDbGetTlsCliVeryType() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsCliVeryType();
  }

/**
 * @brief Get tls client trusted ca path.
 *
 * @return tls client trusted ca path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsCliTrustCaPath
 */
  public static String Mtc_CliDbGetTlsCliTrustCaPath() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsCliTrustCaPath();
  }

/**
 * @brief Get tls client trusted ca file.
 *
 * @return tls client trusted ca file, including path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsCliTrustCaFile
 */
  public static String Mtc_CliDbGetTlsCliTrustCaFile() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsCliTrustCaFile();
  }

/**
 * @brief Get tls client certificate file.
 *
 * @return tls client certificate file, including path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsCliCertFile
 */
  public static String Mtc_CliDbGetTlsCliCertFile() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsCliCertFile();
  }

/**
 * @brief Get tls client private key file.
 *
 * @return tls client private key file, including path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsCliPrvKeyFile
 */
  public static String Mtc_CliDbGetTlsCliPrvKeyFile() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsCliPrvKeyFile();
  }

/**
 * @brief Get tls client private key password.
 *
 * @return tls client private key password, max length is 64 bytes.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsCliPrvKeyPass
 */
  public static String Mtc_CliDbGetTlsCliPrvKeyPass() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsCliPrvKeyPass();
  }

/**
 * @brief Get tls server method type.
 *
 * @return tls server method type, @see @ref MtcCliDbConstants::EN_MTC_TLS_METHOD_SSLV2.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsServMethod
 */
  public static int Mtc_CliDbGetTlsServMethod() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsServMethod();
  }

/**
 * @brief Get tls server verify type.
 *
 * @return tls server verify type, @see @ref MtcCliDbConstants::EN_MTC_TLS_VERY_NONE.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsServVeryType
 */
  public static int Mtc_CliDbGetTlsServVeryType() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsServVeryType();
  }

/**
 * @brief Get tls server trusted ca file.
 *
 * @return tls server trusted ca file, including path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsServTrustCaFile
 */
  public static String Mtc_CliDbGetTlsServTrustCaFile() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsServTrustCaFile();
  }

/**
 * @brief Get tls server certificate file.
 *
 * @return tls server certificate file, including path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsServCertFile
 */
  public static String Mtc_CliDbGetTlsServCertFile() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsServCertFile();
  }

/**
 * @brief Get tls server private key file.
 *
 * @return tls server private key file, including path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsServPrvKeyFile
 */
  public static String Mtc_CliDbGetTlsServPrvKeyFile() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsServPrvKeyFile();
  }

/**
 * @brief Get tls server private key password.
 *
 * @return tls server private key password, max length is 64 bytes.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetTlsServPrvKeyPass
 */
  public static String Mtc_CliDbGetTlsServPrvKeyPass() {
    return MtcCliDbJNI.Mtc_CliDbGetTlsServPrvKeyPass();
  }

/**
 * @brief Set tls client method.
 *
 * @param [in] dwMethod The client method, @see @ref MtcCliDbConstants::EN_MTC_TLS_METHOD_SSLV2.
 *
 * @retval MtcCommonConstants::ZOK Set tls client method successfully.
 * @retval MtcCommonConstants::ZFAILED tls client method failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsCliMethod
 */
  public static int Mtc_CliDbSetTlsCliMethod(int dwMethod) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsCliMethod(dwMethod);
  }

/**
 * @brief Set tls client verify type.
 *
 * @param [in] iVeryType The client verify type, @see @ref MtcCliDbConstants::EN_MTC_TLS_VERY_NONE.

 * @retval MtcCommonConstants::ZOK Set tls client verify type successfully.
 * @retval MtcCommonConstants::ZFAILED tls client verify type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsCliVeryType
 */
  public static int Mtc_CliDbSetTlsCliVeryType(int iVeryType) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsCliVeryType(iVeryType);
  }

/**
 * @brief Set tls client trusted ca path.
 *
 * @param [in] pcPath The client trusted ca path. 
 *
 * @retval MtcCommonConstants::ZOK Set tls client verify type successfully.
 * @retval MtcCommonConstants::ZFAILED tls client verify type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsCliTrustCaPath
 */
  public static int Mtc_CliDbSetTlsCliTrustCaPath(String pcPath) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsCliTrustCaPath(pcPath);
  }

/**
 * @brief Set tls client trusted ca file.
 *
 * @param [in] pcFile The client trusted ca file, including path. 
 *
 * @retval MtcCommonConstants::ZOK Set tls client verify type successfully.
 * @retval MtcCommonConstants::ZFAILED tls client verify type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsCliTrustCaFile
 */
  public static int Mtc_CliDbSetTlsCliTrustCaFile(String pcFile) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsCliTrustCaFile(pcFile);
  }

/**
 * @brief Set tls client certificate file.
 *
 * @param [in] pcFile The client certificate file, including path. 
 *
 * @retval MtcCommonConstants::ZOK Set tls client certificate file successfully.
 * @retval MtcCommonConstants::ZFAILED tls client certificate file failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsCliCertFile
 */
  public static int Mtc_CliDbSetTlsCliCertFile(String pcFile) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsCliCertFile(pcFile);
  }

/**
 * @brief Set tls client private key file.
 *
 * @param [in] pcFile The client private key file, including path.
 *
 * @retval MtcCommonConstants::ZOK Set tls client private key file successfully.
 * @retval MtcCommonConstants::ZFAILED tls client private key file failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsCliPrvKeyFile
 */
  public static int Mtc_CliDbSetTlsCliPrvKeyFile(String pcFile) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsCliPrvKeyFile(pcFile);
  }

/**
 * @brief Set tls client private key password.
 *
 * @param [in] pcPasswd The client private key password, max length is 64 bytes.
 *
 * @retval MtcCommonConstants::ZOK Set tls client private key password successfully.
 * @retval MtcCommonConstants::ZFAILED tls client private key password failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsCliPrvKeyPass
 */
  public static int Mtc_CliDbSetTlsCliPrvKeyPass(String pcPasswd) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsCliPrvKeyPass(pcPasswd);
  }

/**
 * @brief Set tls server method.
 *
 * @param [in] dwMethod The server method, @see @ref MtcCliDbConstants::EN_MTC_TLS_METHOD_SSLV2.
 *
 * @retval MtcCommonConstants::ZOK Set tls server method successfully.
 * @retval MtcCommonConstants::ZFAILED tls server method failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsServMethod
 */
  public static int Mtc_CliDbSetTlsServMethod(int dwMethod) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsServMethod(dwMethod);
  }

/**
 * @brief Set tls server verify type.
 *
 * @param [in] iVeryType The server verify type, @see @ref MtcCliDbConstants::EN_MTC_TLS_VERY_NONE.
 *
 * @retval MtcCommonConstants::ZOK Set tls server verify type successfully.
 * @retval MtcCommonConstants::ZFAILED tls server verify type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsServVeryType
 */
  public static int Mtc_CliDbSetTlsServVeryType(int iVeryType) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsServVeryType(iVeryType);
  }

/**
 * @brief Set tls server trusted ca file.
 *
 * @param [in] pcFile The server trusted ca file, including path.
 *
 * @retval MtcCommonConstants::ZOK Set tls server verify type successfully.
 * @retval MtcCommonConstants::ZFAILED tls server verify type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsServTrustCaFile
 */
  public static int Mtc_CliDbSetTlsServTrustCaFile(String pcFile) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsServTrustCaFile(pcFile);
  }

/**
 * @brief Set tls server certificate file.
 *
 * @param [in] pcFile The server certificate file, including path.
 *
 * @retval MtcCommonConstants::ZOK Set tls server certificate file successfully.
 * @retval MtcCommonConstants::ZFAILED tls server certificate file failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsServCertFile
 */
  public static int Mtc_CliDbSetTlsServCertFile(String pcFile) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsServCertFile(pcFile);
  }

/**
 * @brief Set tls server private key file.
 *
 * @param [in] pcFile The server private key file, including path.
 *
 * @retval MtcCommonConstants::ZOK Set tls server private key file successfully.
 * @retval MtcCommonConstants::ZFAILED tls server private key file failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsServPrvKeyFile
 */
  public static int Mtc_CliDbSetTlsServPrvKeyFile(String pcFile) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsServPrvKeyFile(pcFile);
  }

/**
 * @brief Set tls server private key password.
 *
 * @param [in] pcPasswd The server private key password, max length is 64 bytes.
 *
 * @retval MtcCommonConstants::ZOK Set tls server private key password successfully.
 * @retval MtcCommonConstants::ZFAILED tls server private key password failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetTlsServPrvKeyPass
 */
  public static int Mtc_CliDbSetTlsServPrvKeyPass(String pcPasswd) {
    return MtcCliDbJNI.Mtc_CliDbSetTlsServPrvKeyPass(pcPasswd);
  }

/**
 * @brief Set dtls client ca file.
 *
 * @param [in] pcFile The client trusted ca file, including path. 
 *
 * @retval MtcCommonConstants::ZOK Set dtls CA file successfully.
 * @retval MtcCommonConstants::ZFAILED set dtls CA file failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetDtlsCaFile
 */
  public static int Mtc_CliDbSetDtlsCaFile(String pcFile) {
    return MtcCliDbJNI.Mtc_CliDbSetDtlsCaFile(pcFile);
  }

/**
 * @brief Get dtls client ca file.
 *
 * @return dtls client trusted ca file, including path.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDtlsCaFile
 */
  public static String Mtc_CliDbGetDtlsCaFile() {
    return MtcCliDbJNI.Mtc_CliDbGetDtlsCaFile();
  }

/**
 * @brief Get ux messaging UX.
 *
 * @return ux messaging UX .
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUxMessagingUX
 */
  public static boolean Mtc_CliDbGetUxMessagingUX() {
    return MtcCliDbJNI.Mtc_CliDbGetUxMessagingUX();
  }

/**
 * @brief Set ux messaging UX.
 *
 * @param [in] bMessagingUX The UX messaging style, false for converged inbox,
 * true for integrated messaging.
 *
 * @retval MtcCommonConstants::ZOK Set ux messaging UX successfully.
 * @retval MtcCommonConstants::ZFAILED ux messaging UX failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUxMessagingUX
 */
  public static int Mtc_CliDbSetUxMessagingUX(boolean bMessagingUX) {
    return MtcCliDbJNI.Mtc_CliDbSetUxMessagingUX(bMessagingUX);
  }

/**
 * @brief Set archive server address.
 *
 * @param [in] pcAcvServAddr The archive server address.
 *
 * @retval MtcCommonConstants::ZOK Set archive server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set archive server address failed.
 *
 */
  public static int Mtc_CliDbSetAcvServAddr(String pcAcvServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetAcvServAddr(pcAcvServAddr);
  }

/**
 * @brief Set archive url.
 *
 * @param [in] pcAcvUrl The archive url.
 *
 * @retval MtcCommonConstants::ZOK Set archive url successfully.
 * @retval MtcCommonConstants::ZFAILED Set archive url failed.
 *
 */
  public static int Mtc_CliDbSetAcvUrl(String pcAcvUrl) {
    return MtcCliDbJNI.Mtc_CliDbSetAcvUrl(pcAcvUrl);
  }

/**
 * @brief Set archive server prot.
 *
 * @param [in] wPort The archive server prot.
 *
 * @retval MtcCommonConstants::ZOK Set archive prot successfully.
 * @retval MtcCommonConstants::ZFAILED Set archive prot failed.
 *
 */
  public static int Mtc_CliDbSetAcvServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetAcvServPort(wPort);
  }

/**
 * @brief Get public account server address.
 *
 * @return public account server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaServAddr
 */
  public static String Mtc_CliDbGetPaServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetPaServAddr();
  }

/**
 * @brief Set public account server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaServAddr
 */
  public static int Mtc_CliDbSetPaServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetPaServAddr(pcServAddr);
  }

/**
 * @brief Get public account server address type.
 *
 * @return public account server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaServAddrType
 */
  public static String Mtc_CliDbGetPaServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetPaServAddrType();
  }

/**
 * @brief Set public account server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaServAddrType
 */
  public static int Mtc_CliDbSetPaServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetPaServAddrType(pcServAddrType);
  }

/**
 * @brief Get public account server root.
 *
 * @return public account server root.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaServRoot
 */
  public static String Mtc_CliDbGetPaServRoot() {
    return MtcCliDbJNI.Mtc_CliDbGetPaServRoot();
  }

/**
 * @brief Set public account server root.
 *
 * @param [in] pcServRoot The server root.
 *
 * @retval MtcCommonConstants::ZOK Set server root successfully.
 * @retval MtcCommonConstants::ZFAILED Set server root failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaServRoot
 */
  public static int Mtc_CliDbSetPaServRoot(String pcServRoot) {
    return MtcCliDbJNI.Mtc_CliDbSetPaServRoot(pcServRoot);
  }

/**
 * @brief Get public account server port.
 *
 * @return public account server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaServPort
 */
  public static int Mtc_CliDbGetPaServPort() {
    return MtcCliDbJNI.Mtc_CliDbGetPaServPort();
  }

/**
 * @brief Set public account server port.
 *
 * @param [in] wPort The server port.
 *
 * @retval MtcCommonConstants::ZOK Set server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaServPort
 */
  public static int Mtc_CliDbSetPaServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetPaServPort(wPort);
  }

/**
 * @brief Get public account http userid.
 *
 * @return public account http userid.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaHttpUserId
 */
  public static String Mtc_CliDbGetPaHttpUserId() {
    return MtcCliDbJNI.Mtc_CliDbGetPaHttpUserId();
  }

/**
 * @brief Set public account http userid.
 *
 * @param [in] pcHttpUserId The http userid.
 *
 * @retval MtcCommonConstants::ZOK Set http userid successfully.
 * @retval MtcCommonConstants::ZFAILED Set http userid failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaHttpUserId
 */
  public static int Mtc_CliDbSetPaHttpUserId(String pcHttpUserId) {
    return MtcCliDbJNI.Mtc_CliDbSetPaHttpUserId(pcHttpUserId);
  }

/**
 * @brief Get public account version.
 *
 * @return public account version.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaVers
 */
  public static String Mtc_CliDbGetPaVers() {
    return MtcCliDbJNI.Mtc_CliDbGetPaVers();
  }

/**
 * @brief Set public account version.
 *
 * @param [in] pcVers The version.
 *
 * @retval MtcCommonConstants::ZOK Set version successfully.
 * @retval MtcCommonConstants::ZFAILED Set version failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaVers
 */
  public static int Mtc_CliDbSetPaVers(String pcVers) {
    return MtcCliDbJNI.Mtc_CliDbSetPaVers(pcVers);
  }

/**
 * @brief Get public account authorization name.
 *
 * @return public account authorization name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaAuthName
 */
  public static String Mtc_CliDbGetPaAuthName() {
    return MtcCliDbJNI.Mtc_CliDbGetPaAuthName();
  }

/**
 * @brief Set public account authorization name.
 *
 * @param [in] pcAuthName The authorization name.
 *
 * @retval MtcCommonConstants::ZOK Set authorization name successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaAuthName
 */
  public static int Mtc_CliDbSetPaAuthName(String pcAuthName) {
    return MtcCliDbJNI.Mtc_CliDbSetPaAuthName(pcAuthName);
  }

/**
 * @brief Get public account authorization password.
 *
 * @return public account authorization password.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaAuthPass
 */
  public static String Mtc_CliDbGetPaAuthPass() {
    return MtcCliDbJNI.Mtc_CliDbGetPaAuthPass();
  }

/**
 * @brief Set public account authorization password.
 *
 * @param [in] pcAuthPass The authorization password.
 *
 * @retval MtcCommonConstants::ZOK Set authorization password successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization password failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaAuthPass
 */
  public static int Mtc_CliDbSetPaAuthPass(String pcAuthPass) {
    return MtcCliDbJNI.Mtc_CliDbSetPaAuthPass(pcAuthPass);
  }

/**
 * @brief Get public account authorization token.
 *
 * @return public account authorization token.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaAuthToken
 */
  public static String Mtc_CliDbGetPaAuthToken() {
    return MtcCliDbJNI.Mtc_CliDbGetPaAuthToken();
  }

/**
 * @brief Set public account authorization token.
 *
 * @param [in] pcAuthToken The authorization token.
 *
 * @retval MtcCommonConstants::ZOK Set authorization token successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization token failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaAuthToken
 */
  public static int Mtc_CliDbSetPaAuthToken(String pcAuthToken) {
    return MtcCliDbJNI.Mtc_CliDbSetPaAuthToken(pcAuthToken);
  }

/**
 * @brief Get public account authorization type.
 *
 * @return public account authorization type, @see @ref MtcCliDbConstants::EN_MTC_PA_AUTH_UNKNOW.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaAuthType
 */
  public static int Mtc_CliDbGetPaAuthType() {
    return MtcCliDbJNI.Mtc_CliDbGetPaAuthType();
  }

/**
 * @brief Set public account authorization type.
 *
 * @param [in] pcAuthType The authorization type, @see @ref MtcCliDbConstants::EN_MTC_PA_AUTH_UNKNOW.
 *
 * @retval MtcCommonConstants::ZOK Set authorization type successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaAuthType
 */
  public static int Mtc_CliDbSetPaAuthType(int iAuthType) {
    return MtcCliDbJNI.Mtc_CliDbSetPaAuthType(iAuthType);
  }

/**
 * @brief Set public account user agent.
 *
 * @param [in] pcUserAgent The user agent.
 *
 * @retval MtcCommonConstants::ZOK Set user agent successfully.
 * @retval MtcCommonConstants::ZFAILED Set user agent failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaUserAgent
 */
  public static int Mtc_CliDbSetPaUserAgent(String pcUserAgent) {
    return MtcCliDbJNI.Mtc_CliDbSetPaUserAgent(pcUserAgent);
  }

/**
 * @brief Get public account user agent.
 *
 * @return public account user agent.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaUserAgent
 */
  public static String Mtc_CliDbGetPaUserAgent() {
    return MtcCliDbJNI.Mtc_CliDbGetPaUserAgent();
  }

/**
 * @brief Get profile server address.
 *
 * @return profile server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileServAddr
 */
  public static String Mtc_CliDbGetProfileServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileServAddr();
  }

/**
 * @brief Set profile server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileServAddr
 */
  public static int Mtc_CliDbSetProfileServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileServAddr(pcServAddr);
  }

/**
 * @brief Get profile server address type.
 *
 * @return profile server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileServAddrType
 */
  public static String Mtc_CliDbGetProfileServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileServAddrType();
  }

/**
 * @brief Set profile server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileServAddrType
 */
  public static int Mtc_CliDbSetProfileServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileServAddrType(pcServAddrType);
  }

/**
 * @brief Get pc as server address.
 *
 * @return pc as server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPcAsServAddr
 */
  public static String Mtc_CliDbGetPcAsServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetPcAsServAddr();
  }

/**
 * @brief Set pc as server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPcAsServAddr
 */
  public static int Mtc_CliDbSetPcAsServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetPcAsServAddr(pcServAddr);
  }

/**
 * @brief Get pc as server port.
 *
 * @return pc as server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetpcAsServPort
 */
  public static int Mtc_CliDbGetPcAsServPort() {
    return MtcCliDbJNI.Mtc_CliDbGetPcAsServPort();
  }

/**
 * @brief Set pc as server port.
 *
 * @param [in] wPort The server port.
 *
 * @retval MtcCommonConstants::ZOK Set server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPcAsServPort
 */
  public static int Mtc_CliDbSetpcAsServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetpcAsServPort(wPort);
  }

/**
 * @brief Get pc as server address type.
 *
 * @return pc as server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPcAsServAddrType
 */
  public static String Mtc_CliDbGetPcAsServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetPcAsServAddrType();
  }

/**
 * @brief Set pc as server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPcAsServAddrType
 */
  public static int Mtc_CliDbSetPcAsServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetPcAsServAddrType(pcServAddrType);
  }

/**
 * @brief Get profile server root.
 *
 * @return profile server root.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileServRoot
 */
  public static String Mtc_CliDbGetProfileServRoot() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileServRoot();
  }

/**
 * @brief Set profile server root.
 *
 * @param [in] pcServRoot The server root.
 *
 * @retval MtcCommonConstants::ZOK Set server root successfully.
 * @retval MtcCommonConstants::ZFAILED Set server root failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileServRoot
 */
  public static int Mtc_CliDbSetProfileServRoot(String pcServRoot) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileServRoot(pcServRoot);
  }

/**
 * @brief Get profile server port.
 *
 * @return profile server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileServPort
 */
  public static int Mtc_CliDbGetProfileServPort() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileServPort();
  }

/**
 * @brief Set profile server port.
 *
 * @param [in] wPort The server port.
 *
 * @retval MtcCommonConstants::ZOK Set server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileServPort
 */
  public static int Mtc_CliDbSetProfileServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileServPort(wPort);
  }

/**
 * @brief Get profile authorization name.
 *
 * @return profile authorization name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileAuthName
 */
  public static String Mtc_CliDbGetProfileAuthName() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileAuthName();
  }

/**
 * @brief Set profile authorization name.
 *
 * @param [in] pcAuthName The authorization name.
 *
 * @retval MtcCommonConstants::ZOK Set authorization name successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileAuthName
 */
  public static int Mtc_CliDbSetProfileAuthName(String pcAuthName) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileAuthName(pcAuthName);
  }

/**
 * @brief Get profile authorization password.
 *
 * @return profile authorization password.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileAuthPass
 */
  public static String Mtc_CliDbGetProfileAuthPass() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileAuthPass();
  }

/**
 * @brief Set profile authorization password.
 *
 * @param [in] pcAuthPass The authorization password.
 *
 * @retval MtcCommonConstants::ZOK Set authorization password successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization password failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileAuthPass
 */
  public static int Mtc_CliDbSetProfileAuthPass(String pcAuthPass) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileAuthPass(pcAuthPass);
  }

/**
 * @brief Get profile authorization token.
 *
 * @return profile authorization token.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileAuthToken
 */
  public static String Mtc_CliDbGetProfileAuthToken() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileAuthToken();
  }

/**
 * @brief Set profile authorization token.
 *
 * @param [in] pcAuthToken The authorization token.
 *
 * @retval MtcCommonConstants::ZOK Set authorization token successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization token failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileAuthToken
 */
  public static int Mtc_CliDbSetProfileAuthToken(String pcAuthToken) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileAuthToken(pcAuthToken);
  }

/**
 * @brief Get profile authorization type.
 *
 * @return profile authorization type, @see @ref MtcCliDbConstants::EN_MTC_PROFILE_AUTH_UNKNOW.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileAuthType
 */
  public static int Mtc_CliDbGetProfileAuthType() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileAuthType();
  }

/**
 * @brief Set profile authorization type.
 *
 * @param [in] pcAuthType The authorization type, @see @ref MtcCliDbConstants::EN_MTC_PROFILE_AUTH_UNKNOW.
 *
 * @retval MtcCommonConstants::ZOK Set authorization type successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileAuthType
 */
  public static int Mtc_CliDbSetProfileAuthType(int iAuthType) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileAuthType(iAuthType);
  }

/**
 * @brief Get qrcard server address.
 *
 * @return qrcard server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardServAddr
 */
  public static String Mtc_CliDbGetQrcardServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardServAddr();
  }

/**
 * @brief Set qrcard server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardServAddr
 */
  public static int Mtc_CliDbSetQrcardServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardServAddr(pcServAddr);
  }

/**
 * @brief Get qrcard server address type.
 *
 * @return qrcard server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardServAddrType
 */
  public static String Mtc_CliDbGetQrcardServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardServAddrType();
  }

/**
 * @brief Set qrcard server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardServAddrType
 */
  public static int Mtc_CliDbSetQrcardServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardServAddrType(pcServAddrType);
  }

/**
 * @brief Get qrcard server root.
 *
 * @return qrcard server root.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardServRoot
 */
  public static String Mtc_CliDbGetQrcardServRoot() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardServRoot();
  }

/**
 * @brief Set qrcard server root.
 *
 * @param [in] pcServRoot The server root.
 *
 * @retval MtcCommonConstants::ZOK Set server root successfully.
 * @retval MtcCommonConstants::ZFAILED Set server root failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardServRoot
 */
  public static int Mtc_CliDbSetQrcardServRoot(String pcServRoot) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardServRoot(pcServRoot);
  }

/**
 * @brief Get qrcard server port.
 *
 * @return qrcard server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardServPort
 */
  public static int Mtc_CliDbGetQrcardServPort() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardServPort();
  }

/**
 * @brief Set qrcard server port.
 *
 * @param [in] wPort The server port.
 *
 * @retval MtcCommonConstants::ZOK Set server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardServPort
 */
  public static int Mtc_CliDbSetQrcardServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardServPort(wPort);
  }

/**
 * @brief Get qrcard authorization name.
 *
 * @return qrcard authorization name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardAuthName
 */
  public static String Mtc_CliDbGetQrcardAuthName() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardAuthName();
  }

/**
 * @brief Set qrcard authorization name.
 *
 * @param [in] pcAuthName The authorization name.
 *
 * @retval MtcCommonConstants::ZOK Set authorization name successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardAuthName
 */
  public static int Mtc_CliDbSetQrcardAuthName(String pcAuthName) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardAuthName(pcAuthName);
  }

/**
 * @brief Get qrcard authorization password.
 *
 * @return qrcard authorization password.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardAuthPass
 */
  public static String Mtc_CliDbGetQrcardAuthPass() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardAuthPass();
  }

/**
 * @brief Set qrcard authorization password.
 *
 * @param [in] pcAuthPass The authorization password.
 *
 * @retval MtcCommonConstants::ZOK Set authorization password successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization password failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardAuthPass
 */
  public static int Mtc_CliDbSetQrcardAuthPass(String pcAuthPass) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardAuthPass(pcAuthPass);
  }

/**
 * @brief Get qrcard authorization token.
 *
 * @return qrcard authorization token.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardAuthToken
 */
  public static String Mtc_CliDbGetQrcardAuthToken() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardAuthToken();
  }

/**
 * @brief Set qrcard authorization token.
 *
 * @param [in] pcAuthToken The authorization token.
 *
 * @retval MtcCommonConstants::ZOK Set authorization token successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization token failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardAuthToken
 */
  public static int Mtc_CliDbSetQrcardAuthToken(String pcAuthToken) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardAuthToken(pcAuthToken);
  }

/**
 * @brief Get qrcard authorization type.
 *
 * @return qrcard authorization type, @see @ref MtcCliDbConstants::EN_MTC_QRCARD_AUTH_UNKNOW.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetQrcardAuthType
 */
  public static int Mtc_CliDbGetQrcardAuthType() {
    return MtcCliDbJNI.Mtc_CliDbGetQrcardAuthType();
  }

/**
 * @brief Set qrcard authorization type.
 *
 * @param [in] pcAuthType The authorization type, @see @ref MtcCliDbConstants::EN_MTC_QRCARD_AUTH_UNKNOW.
 *
 * @retval MtcCommonConstants::ZOK Set authorization type successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetQrcardAuthType
 */
  public static int Mtc_CliDbSetQrcardAuthType(int iAuthType) {
    return MtcCliDbJNI.Mtc_CliDbSetQrcardAuthType(iAuthType);
  }

/**
 * @brief Get network address book server address.
 *
 * @return network address book server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetNabServAddr
 */
  public static String Mtc_CliDbGetNabServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetNabServAddr();
  }

/**
 * @brief Set network address book server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetNabServAddr
 */
  public static int Mtc_CliDbSetNabServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetNabServAddr(pcServAddr);
  }

/**
 * @brief Get network address book server address type.
 *
 * @return network address book server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetNabServAddrType
 */
  public static String Mtc_CliDbGetNabServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetNabServAddrType();
  }

/**
 * @brief Set network address book server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetNabServAddrType
 */
  public static int Mtc_CliDbSetNabServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetNabServAddrType(pcServAddrType);
  }

/**
 * @brief Get single sign-on server address.
 *
 * @return single sign-on server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSsoServAddr
 */
  public static String Mtc_CliDbGetSsoServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetSsoServAddr();
  }

/**
 * @brief Set single sign-on server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSsoServAddr
 */
  public static int Mtc_CliDbSetSsoServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetSsoServAddr(pcServAddr);
  }

/**
 * @brief Get single sign-on server address type.
 *
 * @return single sign-on server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSsoServAddrType
 */
  public static String Mtc_CliDbGetSsoServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetSsoServAddrType();
  }

/**
 * @brief Set single sign-on server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSsoServAddrType
 */
  public static int Mtc_CliDbSetSsoServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetSsoServAddrType(pcServAddrType);
  }

/**
 * @brief Get enriched call as content management system server address.
 *
 * @return enriched call as content management system server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetEcscmsServAddr
 */
  public static String Mtc_CliDbGetEcscmsServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetEcscmsServAddr();
  }

/**
 * @brief Set enriched call as content management system server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetEcscmsServAddr
 */
  public static int Mtc_CliDbSetEcscmsServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetEcscmsServAddr(pcServAddr);
  }

/**
 * @brief Get enriched call as content management system server address type.
 *
 * @return enriched call as content management system server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetEcscmsServAddrType
 */
  public static String Mtc_CliDbGetEcscmsServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetEcscmsServAddrType();
  }

/**
 * @brief Set enriched call as content management system server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetEcscmsServAddrType
 */
  public static int Mtc_CliDbSetEcscmsServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetEcscmsServAddrType(pcServAddrType);
  }

/**
 * @brief Get enriched call as content management system number prefixes.
 *
 * @return enriched call as content management system number prefixes.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetEcscmsNumberPrefixes
 */
  public static String Mtc_CliDbGetEcscmsNumberPrefixes() {
    return MtcCliDbJNI.Mtc_CliDbGetEcscmsNumberPrefixes();
  }

/**
 * @brief Set enriched call as content management system number prefixes.
 *
 * @param [in] pcNumberPrefixes The number prefixes.
 *
 * @retval MtcCommonConstants::ZOK Set number prefixes successfully.
 * @retval MtcCommonConstants::ZFAILED Set number prefixes failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetEcscmsNumberPrefixes
 */
  public static int Mtc_CliDbSetEcscmsNumberPrefixes(String pcNumberPrefixes) {
    return MtcCliDbJNI.Mtc_CliDbSetEcscmsNumberPrefixes(pcNumberPrefixes);
  }

/**
 * @brief Get user manger server address.
 *
 * @return user manger server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUserMangerServAddr
 */
  public static String Mtc_CliDbGetUserMangerServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetUserMangerServAddr();
  }

/**
 * @brief Set user manger server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserMangerServAddr
 */
  public static int Mtc_CliDbSetUserMangerServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetUserMangerServAddr(pcServAddr);
  }

/**
 * @brief Get user manger server address type.
 *
 * @return user manger server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUserMangerServAddrType
 */
  public static String Mtc_CliDbGetUserMangerServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetUserMangerServAddrType();
  }

/**
 * @brief Set user manger server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserMangerServAddrType
 */
  public static int Mtc_CliDbSetUserMangerServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetUserMangerServAddrType(pcServAddrType);
  }

/**
 * @brief Get iap server address.
 *
 * @return user manger server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetIapServAddr
 */
  public static String Mtc_CliDbGetIapServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetIapServAddr();
  }

/**
 * @brief Set iap server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetIapServAddr
 */
  public static int Mtc_CliDbSetIapServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetIapServAddr(pcServAddr);
  }

/**
 * @brief Get iap server address type.
 *
 * @return user manger server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetIapServAddrType
 */
  public static String Mtc_CliDbGetIapServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetIapServAddrType();
  }

/**
 * @brief Set iap server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetIapServAddrType
 */
  public static int Mtc_CliDbSetIapServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetIapServAddrType(pcServAddrType);
  }

/**
 * @brief Get profile authorization flag.
 *
 * @retval true Indications profile is authorized.
 * @retval false Indications profile is not authorized.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetProfileAuth
 */
  public static boolean Mtc_CliDbGetProfileAuth() {
    return MtcCliDbJNI.Mtc_CliDbGetProfileAuth();
  }

/**
 * @brief Set profile authorization flag.
 *
 * @param [in] bAuth The authorization flag.
 *
 * @retval MtcCommonConstants::ZOK Set authorization flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetProfileAuth
 */
  public static int Mtc_CliDbSetProfileAuth(boolean bAuth) {
    return MtcCliDbJNI.Mtc_CliDbSetProfileAuth(bAuth);
  }

/**
 * @brief Get nab authorization flag.
 *
 * @retval true Indications nab is authorized.
 * @retval false Indications nab is not authorized.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetNabAuth
 */
  public static boolean Mtc_CliDbGetNabAuth() {
    return MtcCliDbJNI.Mtc_CliDbGetNabAuth();
  }

/**
 * @brief Set nab authorization flag.
 *
 * @param [in] bAuth The authorization flag.
 *
 * @retval MtcCommonConstants::ZOK Set authorization flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetNabAuth
 */
  public static int Mtc_CliDbSetNabAuth(boolean bAuth) {
    return MtcCliDbJNI.Mtc_CliDbSetNabAuth(bAuth);
  }

/**
 * @brief Get public account authorization flag.
 *
 * @retval true Indications public account is authorized.
 * @retval false Indications public account is not authorized.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPaAuth
 */
  public static boolean Mtc_CliDbGetPaAuth() {
    return MtcCliDbJNI.Mtc_CliDbGetPaAuth();
  }

/**
 * @brief Set public account authorization flag.
 *
 * @param [in] bAuth The authorization flag.
 *
 * @retval MtcCommonConstants::ZOK Set authorization flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetPaAuth
 */
  public static int Mtc_CliDbSetPaAuth(boolean bAuth) {
    return MtcCliDbJNI.Mtc_CliDbSetPaAuth(bAuth);
  }

/**
 * @brief Get sso authorization flag.
 *
 * @retval true Indications sso is authorized.
 * @retval false Indications sso is not authorized.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSsoAuth
 */
  public static boolean Mtc_CliDbGetSsoAuth() {
    return MtcCliDbJNI.Mtc_CliDbGetSsoAuth();
  }

/**
 * @brief Set sso authorization flag.
 *
 * @param [in] bAuth The authorization flag.
 *
 * @retval MtcCommonConstants::ZOK Set authorization flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSsoAuth
 */
  public static int Mtc_CliDbSetSsoAuth(boolean bAuth) {
    return MtcCliDbJNI.Mtc_CliDbSetSsoAuth(bAuth);
  }

/**
 * @brief Get ECSCMS authorization flag.
 *
 * @retval true Indications sso is authorized.
 * @retval false Indications sso is not authorized.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetEcscmsAuth
 */
  public static boolean Mtc_CliDbGetEcscmsAuth() {
    return MtcCliDbJNI.Mtc_CliDbGetEcscmsAuth();
  }

/**
 * @brief Set ECSCMS authorization flag.
 *
 * @param [in] bAuth The authorization flag.
 *
 * @retval MtcCommonConstants::ZOK Set authorization flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetEcscmsAuth
 */
  public static int Mtc_CliDbSetEcscmsAuth(boolean bAuth) {
    return MtcCliDbJNI.Mtc_CliDbSetEcscmsAuth(bAuth);
  }

/**
 * @brief Get UserManger authorization flag.
 *
 * @retval true Indications sso is authorized.
 * @retval false Indications sso is not authorized.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUserMangerAuth
 */
  public static boolean Mtc_CliDbGetUserMangerAuth() {
    return MtcCliDbJNI.Mtc_CliDbGetUserMangerAuth();
  }

/**
 * @brief Set UserManger authorization flag.
 *
 * @param [in] bAuth The authorization flag.
 *
 * @retval MtcCommonConstants::ZOK Set authorization flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUserMangerAuth
 */
  public static int Mtc_CliDbSetUserMangerAuth(boolean bAuth) {
    return MtcCliDbJNI.Mtc_CliDbSetUserMangerAuth(bAuth);
  }

/**
 * @brief Get Iap authorization flag.
 *
 * @retval true Indications sso is authorized.
 * @retval false Indications sso is not authorized.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetIapAuth
 */
  public static boolean Mtc_CliDbGetIapAuth() {
    return MtcCliDbJNI.Mtc_CliDbGetIapAuth();
  }

/**
 * @brief Set Iap authorization flag.
 *
 * @param [in] bAuth The authorization flag.
 *
 * @retval MtcCommonConstants::ZOK Set authorization flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization flag failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetIapAuth
 */
  public static int Mtc_CliDbSetIapAuth(boolean bAuth) {
    return MtcCliDbJNI.Mtc_CliDbSetIapAuth(bAuth);
  }

/**
 * @brief get stg use type.
 *
 * @return stg use type, @see @ref MtcCliDbConstants::EN_MTC_STG_USETYPE_CLOSE.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgUseType
 */
  public static int Mtc_CliDbGetStgUseType() {
    return MtcCliDbJNI.Mtc_CliDbGetStgUseType();
  }

/**
 * @brief set stg use type.
 *
 * @param [in] iStgUseType stg use type, @see @ref MtcCliDbConstants::EN_MTC_STG_USETYPE_CLOSE.
 *
 * @retval MtcCommonConstants::ZOK Set stg use type successfully.
 * @retval MtcCommonConstants::ZFAILED Set stg use type failed.
 *
 * @see MtcCliDb::Mtc_CliDbGetStgUseType
 */
  public static int Mtc_CliDbSetStgUseType(int iStgUseType) {
    return MtcCliDbJNI.Mtc_CliDbSetStgUseType(iStgUseType);
  }

/**
 * @brief get stg tunnel type.
 *
 * @return stg tunnel type, @see @ref MtcCliDbConstants::EN_MTC_STG_TRANSPORT_UDP.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelType
 */
  public static int Mtc_CliDbGetStgTunnelType() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelType();
  }

/**
 * @brief set stg tunnel type.
 *
 * @param [in] iStgTunnelType stg tunnel type, @see @ref MtcCliDbConstants::EN_MTC_STG_TRANSPORT_UDP.
 *
 * @retval MtcCommonConstants::ZOK Set stg tunnel type successfully.
 * @retval MtcCommonConstants::ZFAILED Set stg tunnel type failed.
 *
 * @see MtcCliDb::Mtc_CliDbGetStgTunnelType
 */
  public static int Mtc_CliDbSetStgTunnelType(int iStgTunnelType) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelType(iStgTunnelType);
  }

/**
 * @brief get stg tunnel ip.
 *
 * @return stg tunnel ip.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelIp
 */
  public static String Mtc_CliDbGetStgTunnelIp() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelIp();
  }

/**
 * @brief set stg tunnel ip.
 *
 * @param [in] pcIp stg tunnel ip.
 *
 * @retval MtcCommonConstants::ZOK Set stg tunnel ip successfully.
 * @retval MtcCommonConstants::ZFAILED Set stg tunnel ip failed.
 *
 * @see MtcCliDb::Mtc_CliDbGetStgTunnelIp
 */
  public static int Mtc_CliDbSetStgTunnelIp(String pcIp) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelIp(pcIp);
  }

/**
 * @brief get stg tunnel port.
 *
 * @return stg tunnel port.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelIp
 */
  public static int Mtc_CliDbGetStgTunnelPort() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelPort();
  }

/**
 * @brief set stg tunnel port.
 *
 * @param [in] wPort stg tunnel port.
 *
 * @retval MtcCommonConstants::ZOK Set stg tunnel port successfully.
 * @retval MtcCommonConstants::ZFAILED Set stg tunnel port failed.
 *
 * @see MtcCliDb::Mtc_CliDbGetStgTunnelPort
 */
  public static int Mtc_CliDbSetStgTunnelPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelPort(wPort);
  }

/**
 * @brief get stg tunnel proxy enable.
 *
 * @return stg tunnel proxy enable.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelProxyEnable
 */
  public static boolean Mtc_CliDbGetStgTunnelProxyEnable() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelProxyEnable();
  }

/*
* @brief set stg tunnel proxy enable.
*
* @param [in] bProxy stg tunnel proxy enable.
*
* @retval MtcCommonConstants::ZOK Set stg tunnel enable successfully.
* @retval MtcCommonConstants::ZFAILED Set stg tunnel enable failed.
*
* @see MtcCliDb::Mtc_CliDbGetStgTunnelProxyEnable
*/
  public static int Mtc_CliDbSetStgTunnelProxyEnable(boolean bProxy) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelProxyEnable(bProxy);
  }

/* 
 * @brief get stg tunnel proxy server address.
 *
 * @return stg tunnel proxy server address.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelProxySrvAddr
 */
  public static String Mtc_CliDbGetStgTunnelProxySrvAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelProxySrvAddr();
  }

/*
* @brief set tunnel proxy server address.
*
* @param [in] pcSrvAddr stg tunnel proxy server address.
*
* @retval MtcCommonConstants::ZOK Set stg tunnel server address successfully.
* @retval MtcCommonConstants::ZFAILED Set stg tunnel server address failed.
*
* @see MtcCliDb::Mtc_CliDbGetStgTunnelProxySrvAddr
*/
  public static int Mtc_CliDbSetStgTunnelProxySrvAddr(String pcSrvAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelProxySrvAddr(pcSrvAddr);
  }

/* 
 * @brief get stg tunnel proxy server port.
 *
 * @return stg tunnel proxy server port.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelProxySrvPort
 */
  public static short Mtc_CliDbGetStgTunnelProxySrvPort() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelProxySrvPort();
  }

/*
* @brief set tunnel proxy server port.
*
* @param [in] wProxyPort stg tunnel proxy server port.
*
* @retval MtcCommonConstants::ZOK Set stg tunnel server port successfully.
* @retval MtcCommonConstants::ZFAILED Set stg tunnel server port failed.
*
* @see MtcCliDb::Mtc_CliDbGetStgTunnelProxySrvPort
*/
  public static int Mtc_CliDbSetStgTunnelProxySrvPort(int wProxyPort) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelProxySrvPort(wProxyPort);
  }

/* 
 * @brief get stg tunnel proxy server username.
 *
 * @return stg tunnel proxy server username.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelProxySrvUsername
 */
  public static String Mtc_CliDbGetStgTunnelProxySrvUsername() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelProxySrvUsername();
  }

/*
* @brief set tunnel proxy server username.
*
* @param [in] pcProxyUsername stg tunnel proxy server username.
*
* @retval MtcCommonConstants::ZOK Set stg tunnel server username successfully.
* @retval MtcCommonConstants::ZFAILED Set stg tunnel server username failed.
*
* @see MtcCliDb::Mtc_CliDbGetStgTunnelProxySrvUsername
*/
  public static int Mtc_CliDbSetStgTunnelProxySrvUsername(String pcProxyUsername) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelProxySrvUsername(pcProxyUsername);
  }

/* 
 * @brief get stg tunnel proxy server password.
 *
 * @return stg tunnel proxy server password.
 *
 * @see MtcCliDb::Mtc_CliDbSetStgTunnelProxySrvPwd
 */
  public static String Mtc_CliDbGetStgTunnelProxySrvPwd() {
    return MtcCliDbJNI.Mtc_CliDbGetStgTunnelProxySrvPwd();
  }

/*
* @brief set tunnel proxy server password.
*
* @param [in] pcProxyPwd stg tunnel proxy server password.
*
* @retval MtcCommonConstants::ZOK Set stg tunnel server password successfully.
* @retval MtcCommonConstants::ZFAILED Set stg tunnel server password failed.
*
* @see MtcCliDb::Mtc_CliDbGetStgTunnelProxySrvPwd
*/
  public static int Mtc_CliDbSetStgTunnelProxySrvPwd(String pcProxyPwd) {
    return MtcCliDbJNI.Mtc_CliDbSetStgTunnelProxySrvPwd(pcProxyPwd);
  }

/**
 * @brief Get use backup server from database.
 *
 * @retval true Use backup server.
 * @retval false Do not use backup server.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetUseBackupServer
 */
  public static boolean Mtc_CliDbGetUseBackupServer() {
    return MtcCliDbJNI.Mtc_CliDbGetUseBackupServer();
  }

/**
 * @brief Get use backup server.
 *
 * @param [in] bUse Use flag.
 *
 * @retval MtcCommonConstants::ZOK Set use backup server successfully.
 * @retval MtcCommonConstants::ZFAILED Set use backup server failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetUseBackupServer
 */
  public static int Mtc_CliDbSetUseBackupServer(boolean bUse) {
    return MtcCliDbJNI.Mtc_CliDbSetUseBackupServer(bUse);
  }

/**
 * @brief Get bsf server address.
 *
 * @return bsf server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetBsfServAddr
 */
  public static String Mtc_CliDbGetBsfServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetBsfServAddr();
  }

/**
 * @brief Set bsf server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetBsfServAddr
 */
  public static int Mtc_CliDbSetBsfServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetBsfServAddr(pcServAddr);
  }

/**
 * @brief Get bsf server address type.
 *
 * @return bsf server address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetBsfServAddrType
 */
  public static String Mtc_CliDbGetBsfServAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetBsfServAddrType();
  }

/**
 * @brief Set bsf server address type.
 *
 * @param [in] pcServAddrType The server address type.
 *
 * @retval MtcCommonConstants::ZOK Set server address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetBsfServAddrType
 */
  public static int Mtc_CliDbSetBsfServAddrType(String pcServAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetBsfServAddrType(pcServAddrType);
  }

/**
 * @brief Get bsf server port.
 *
 * @return bsf server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetBsfServPort
 */
  public static int Mtc_CliDbGetBsfServPort() {
    return MtcCliDbJNI.Mtc_CliDbGetBsfServPort();
  }

/**
 * @brief Set bsf server port.
 *
 * @param [in] wPort The server port.
 *
 * @retval MtcCommonConstants::ZOK Set server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetBsfServPort
 */
  public static int Mtc_CliDbSetBsfServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetBsfServPort(wPort);
  }

/**
 * @brief Get bsf realm.
 *
 * @return bsf realm.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetBsfRealm
 */
  public static String Mtc_CliDbGetBsfRealm() {
    return MtcCliDbJNI.Mtc_CliDbGetBsfRealm();
  }

/**
 * @brief Set bsf realm.
 *
 * @param [in] wPort The realm.
 *
 * @retval MtcCommonConstants::ZOK Set realm successfully.
 * @retval MtcCommonConstants::ZFAILED Set realm failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetBsfRealm
 */
  public static int Mtc_CliDbSetBsfRealm(String pcRealm) {
    return MtcCliDbJNI.Mtc_CliDbSetBsfRealm(pcRealm);
  }

/**
 * @brief Get device token.
 *
 * @return device token.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPushToken
 */
  public static String Mtc_CliDbGetDevToken() {
    return MtcCliDbJNI.Mtc_CliDbGetDevToken();
  }

/**
 * @brief Get Voip token.
 *
 * @return device token.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPushToken
 */
  public static String Mtc_CliDbGetVoipToken() {
    return MtcCliDbJNI.Mtc_CliDbGetVoipToken();
  }

/**
 * @brief Get TokenType.
 *
 * @return TokenType.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetPushToken
 */
  public static String Mtc_CliDbGetTokenType() {
    return MtcCliDbJNI.Mtc_CliDbGetTokenType();
  }

/**
 * @brief Set device token.
 *
 * @param [in] pcDevToken The device token.
 * @param [in] pcVoipToken The Voip token.
 * @param [in] pcTokenType The TokenType,see @ref MTC_PUSH_SERVER_IOS etc.
 *
 * @retval MtcCommonConstants::ZOK Set device token successfully.
 * @retval MtcCommonConstants::ZFAILED Set device token failed.
 *
 */
  public static int Mtc_CliDbSetPushToken(String pcDevToken, String pcVoipToken, String pcTokenType) {
    return MtcCliDbJNI.Mtc_CliDbSetPushToken(pcDevToken, pcVoipToken, pcTokenType);
  }

/**
 * @brief Get calibrate time option from database.
 *
 * @retval true Calibrate Time.
 * @retval false Do not calibrate time.
 */
  public static boolean Mtc_CliDbGetCalibrateTime() {
    return MtcCliDbJNI.Mtc_CliDbGetCalibrateTime();
  }

/**
 * @brief Set calibrate time option.
 *
 * @param [in] bCalibrateTime calibrate time option.
 *
 * @retval MtcCommonConstants::ZOK Set calibrate time option successfully.
 * @retval MtcCommonConstants::ZFAILED Set calibrate time option failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetCalibrateTime
 */
  public static int Mtc_CliDbSetCalibrateTime(boolean bCalibrateTime) {
    return MtcCliDbJNI.Mtc_CliDbSetCalibrateTime(bCalibrateTime);
  }

/**
 * @brief mtc set user id policy.
 *
 * @param [in] iPolicy user policy @ref MtcCliDbConstants::EN_MTC_UID_POLICY_DFT.
 *
 * @retval MtcCommonConstants::ZOK Set user policy option successfully.
 * @retval MtcCommonConstants::ZFAILED Set user policy option failed.
 *
 */
  public static int Mtc_CliDbSetUserIdPolicy(int iPolicy) {
    return MtcCliDbJNI.Mtc_CliDbSetUserIdPolicy(iPolicy);
  }

/**
 * @brief mtc set user impi.
 *
 * @param [in] pcImpi user impi.
 *
 * @retval MtcCommonConstants::ZOK Set user impi option successfully.
 * @retval MtcCommonConstants::ZFAILED Set user impi option failed.
 *
 */
  public static int Mtc_CliDbSetImpi(String pcImpi) {
    return MtcCliDbJNI.Mtc_CliDbSetImpi(pcImpi);
  }

/**
 * @brief mtc get user impi.
 *
 */
  public static String Mtc_CliDbGetImpi() {
    return MtcCliDbJNI.Mtc_CliDbGetImpi();
  }

/**
 * @brief Get register address type.
 *
 * @return The register address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetRegAddrType
 */
  public static int Mtc_CliDbGetRegAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGetRegAddrType();
  }

/**
 * @brief Set register address type.
 *
 * @param [in] iAddrType The register address type.
 *
 * @retval MtcCommonConstants::ZOK Set the register address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set the register address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegAddrType
 */
  public static int Mtc_CliDbSetRegAddrType(int iAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSetRegAddrType(iAddrType);
  }

/**
 * @brief Get secondary register address type.
 *
 * @return The secondary register address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSet2ndRegAddrType
 */
  public static int Mtc_CliDbGet2ndRegAddrType() {
    return MtcCliDbJNI.Mtc_CliDbGet2ndRegAddrType();
  }

/**
 * @brief Set secondary register address type.
 *
 * @param [in] iAddrType The secondary register address type.
 *
 * @retval MtcCommonConstants::ZOK Set the secondary register address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set the secondary register address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGet2ndRegAddrType
 */
  public static int Mtc_CliDbSet2ndRegAddrType(int iAddrType) {
    return MtcCliDbJNI.Mtc_CliDbSet2ndRegAddrType(iAddrType);
  }

/*
 * @brief mtc get cnpc sync and verify http server address.
 */
  public static String Mtc_CliDbGetCnpcHttpServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetCnpcHttpServAddr();
  }

/**
 * @brief mtc set cnpc sync and verify server address.
 *
 * @param [in] pcServAddr server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 */
  public static int Mtc_CliDbSetCnpcHttpServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetCnpcHttpServAddr(pcServAddr);
  }

/**
 * @brief mtc get cnpc sync and verify http server port.
 */
  public static int Mtc_CliDbGetCnpcHttpServPort() {
    return MtcCliDbJNI.Mtc_CliDbGetCnpcHttpServPort();
  }

/**
 * @brief mtc set cnpc sync and verify server port.
 *
 * @param [in] wPort server port.
 *
 * @retval MtcCommonConstants::ZOK Set server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set server port failed.
 */
  public static int Mtc_CliDbSetCnpcHttpServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetCnpcHttpServPort(wPort);
  }

/**
 * @brief mtc get cnpc sync server root.
 */
  public static String Mtc_CliDbGetCnpcSyncServRoot() {
    return MtcCliDbJNI.Mtc_CliDbGetCnpcSyncServRoot();
  }

/**
 * @brief mtc set cnpc sync server root.
 *
 * @param [in] pcSyncRoot server root uri.
 *
 * @retval MtcCommonConstants::ZOK Set server root successfully.
 * @retval MtcCommonConstants::ZFAILED Set server root failed.
 */
  public static int Mtc_CliDbSetCnpcSyncServRoot(String pcSyncRoot) {
    return MtcCliDbJNI.Mtc_CliDbSetCnpcSyncServRoot(pcSyncRoot);
  }

/**
 * @brief mtc get cnpc verify server root.
 */
  public static String Mtc_CliDbGetCnpcVerifyServRoot() {
    return MtcCliDbJNI.Mtc_CliDbGetCnpcVerifyServRoot();
  }

/**
 * @brief mtc set cnpc verify server root.
 *
 * @param [in] pcVerifyRoot server root uri.
 *
 * @retval MtcCommonConstants::ZOK Set server root successfully.
 * @retval MtcCommonConstants::ZFAILED Set server root failed.
 */
  public static int Mtc_CliDbSetCnpcVerifyServRoot(String pcVerifyRoot) {
    return MtcCliDbJNI.Mtc_CliDbSetCnpcVerifyServRoot(pcVerifyRoot);
  }

/**
 * @brief Get a deactived enable flag.
 *
 * @return deactived enable.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetDeactedEnable
 *
 */
  public static boolean Mtc_CliDbGetDeactedEnable() {
    return MtcCliDbJNI.Mtc_CliDbGetDeactedEnable();
  }

/**
 * @brief Set a deactived enable flag. 
 *
 * @param [in] bEnable deactived enable.
 *
 * @return deactived enable.
 *
 * @retval MtcCommonConstants::ZOK Set deactived enable successfully.
 * @retval MtcCommonConstants::ZFAILED Set deactived enable failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetDeactedEnable
 *
 */
  public static int Mtc_CliDbSetDeactedEnable(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetDeactedEnable(bEnable);
  }

/**
 * @brief Get access network info of country.
 *
 * @return access network info of country.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAccNetInfoCountry
 *
 */
  public static String Mtc_CliDbGetAccNetInfoCountry() {
    return MtcCliDbJNI.Mtc_CliDbGetAccNetInfoCountry();
  }

/**
 * @brief Set access network info of country. 
 *
 * @param [in] access network info of country.
 *
 * @retval MtcCommonConstants::ZOK Set AccNetInfoCountry successfully.
 * @retval MtcCommonConstants::ZFAILED Set AccNetInfoCountry failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAccNetInfoCountry
 *
 */
  public static int Mtc_CliDbSetAccNetInfoCountry(String pcInfoCountry) {
    return MtcCliDbJNI.Mtc_CliDbSetAccNetInfoCountry(pcInfoCountry);
  }

/**
 * @brief Get access network info of city.
 *
 * @return access network info of city.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAccNetInfoCity
 *
 */
  public static String Mtc_CliDbGetAccNetInfoCity() {
    return MtcCliDbJNI.Mtc_CliDbGetAccNetInfoCity();
  }

/**
 * @brief Set access network info of city. 
 *
 * @param [in] access network info of city.
 *
 * @retval MtcCommonConstants::ZOK Set AccNetInfoCity successfully.
 * @retval MtcCommonConstants::ZFAILED Set AccNetInfoCity failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAccNetInfoCity
 *
 */
  public static int Mtc_CliDbSetAccNetInfoCity(String pcInfoCity) {
    return MtcCliDbJNI.Mtc_CliDbSetAccNetInfoCity(pcInfoCity);
  }

/**
 * @brief Get SSO login white address.
 *
 * @param [in] iIndex the index of address in address list.
 *
 * @return SSO login white address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSSOWhiteAddr
 *
 */
  public static String Mtc_CliDbGetSSOWhiteAddr(int iIndex) {
    return MtcCliDbJNI.Mtc_CliDbGetSSOWhiteAddr(iIndex);
  }

/**
 * @brief Set SSO login white address. 
 *
 * @param [in] pcServAddr SSO login white address.
 * @param [in] iIndex the index of address in address list.
 *
 * @retval MtcCommonConstants::ZOK Set white address successfully.
 * @retval MtcCommonConstants::ZFAILED Set white address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSSOWhiteAddr
 *
 */
  public static int Mtc_CliDbSetSSOWhiteAddr(String pcServAddr, int iIndex) {
    return MtcCliDbJNI.Mtc_CliDbSetSSOWhiteAddr(pcServAddr, iIndex);
  }

/**
 * @brief Get SSO login white address type.
 *
 * @param [in] iIndex the index of addr type in addr type list.
 *
 * @return SSO login white address type.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSSOWhiteAddrType
 *
 */
  public static String Mtc_CliDbGetSSOWhiteAddrType(int iIndex) {
    return MtcCliDbJNI.Mtc_CliDbGetSSOWhiteAddrType(iIndex);
  }

/**
 * @brief Set SSO login white address type. 
 *
 * @param [in] pcServAddrType SSO login white address type.
 * @param [in] iIndex the index of addr type in addr type list.
 *
 * @retval MtcCommonConstants::ZOK Set white address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set white address type failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSSOWhiteAddrType
 *
 */
  public static int Mtc_CliDbSetSSOWhiteAddrType(String pcServAddrType, int iIndex) {
    return MtcCliDbJNI.Mtc_CliDbSetSSOWhiteAddrType(pcServAddrType, iIndex);
  }

/**
 * @brief Get SSO white address list size.
 *
 * @retval The size of SSO white address list, default is 0,max is 10.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetSSOWhiteAddrLstSize
 */
  public static int Mtc_CliDbGetSSOWhiteAddrLstSize() {
    return MtcCliDbJNI.Mtc_CliDbGetSSOWhiteAddrLstSize();
  }

/**
 * @brief Set SSO white address list size.
 *
 * @param [in] iLstSize The SSO white address list size.
 *
 * @retval MtcCommonConstants::ZOK Set SSO white address list size successfully.
 * @retval MtcCommonConstants::ZFAILED Set SSO white address list size failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetSSOWhiteAddrLstSize
 */
  public static int Mtc_CliDbSetSSOWhiteAddrLstSize(int iLstSize) {
    return MtcCliDbJNI.Mtc_CliDbSetSSOWhiteAddrLstSize(iLstSize);
  }

/**
 * @brief Get a auto reg enable flag.
 *
 * @return auto reg enable.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetAutoRegEnable
 *
 */
  public static boolean Mtc_CliDbGetAutoRegEnable() {
    return MtcCliDbJNI.Mtc_CliDbGetAutoRegEnable();
  }

/**
 * @brief Set a auto reg enable flag. 
 *
 * @param [in] bEnable auto reg enable.
 *
 * @retval MtcCommonConstants::ZOK Set auto reg enable successfully.
 * @retval MtcCommonConstants::ZFAILED Set auto reg enable failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetAutoRegEnable
 *
 */
  public static int Mtc_CliDbSetAutoRegEnable(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetAutoRegEnable(bEnable);
  }

/**
 * @brief Get IMEI.
 *
 * @return IMEI.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetIMEI
 */
  public static String Mtc_CliDbGetIMEI() {
    return MtcCliDbJNI.Mtc_CliDbGetIMEI();
  }

/**
 * @brief mtc set IMEI.
 *
 * @param [in] pcIMEI IMEI.
 *
 * @retval MtcCommonConstants::ZOK Set IMEI successfully.
 * @retval MtcCommonConstants::ZFAILED Set IMEI failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetIMEI
 *
 */
  public static int Mtc_CliDbSetIMEI(String pcIMEI) {
    return MtcCliDbJNI.Mtc_CliDbSetIMEI(pcIMEI);
  }

/**
 * @brief Get CellId.
 *
 * @return CellId.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetCellId
 */
  public static String Mtc_CliDbGetCellId() {
    return MtcCliDbJNI.Mtc_CliDbGetCellId();
  }

/**
 * @brief mtc set CellId.
 *
 * @param [in] pcCellId CellId.
 *
 * @retval MtcCommonConstants::ZOK Set CellId successfully.
 * @retval MtcCommonConstants::ZFAILED Set CellId failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetCellId
 *
 */
  public static int Mtc_CliDbSetCellId(String pcCellId) {
    return MtcCliDbJNI.Mtc_CliDbSetCellId(pcCellId);
  }

/**
 * @brief Get Company.
 *
 * @return Company.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetCompany
 *
 */
  public static String Mtc_CliDbGetCompany() {
    return MtcCliDbJNI.Mtc_CliDbGetCompany();
  }

/**
 * @brief Set Company. 
 *
 * @param [in] Company.
 *
 * @retval MtcCommonConstants::ZOK Set Company successfully.
 * @retval MtcCommonConstants::ZFAILED Set Company failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetCompany
 *
 */
  public static int Mtc_CliDbSetCompany(String pcCompany) {
    return MtcCliDbJNI.Mtc_CliDbSetCompany(pcCompany);
  }

  public static int Mtc_CliDbGetRegTmr1() {
    return MtcCliDbJNI.Mtc_CliDbGetRegTmr1();
  }

  public static int Mtc_CliDbSetRegTmr1(int iTimeLen) {
    return MtcCliDbJNI.Mtc_CliDbSetRegTmr1(iTimeLen);
  }

  public static int Mtc_CliDbGetRegTmr2() {
    return MtcCliDbJNI.Mtc_CliDbGetRegTmr2();
  }

  public static int Mtc_CliDbSetRegTmr2(int iTimeLen) {
    return MtcCliDbJNI.Mtc_CliDbSetRegTmr2(iTimeLen);
  }

/**
 * @brief Get reg use local ip enable flag(default true).
 *
 * @return reg use local ip enable.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetRegUseLclIp
 *
 */
  public static boolean Mtc_CliDbGetRegUseLclIp() {
    return MtcCliDbJNI.Mtc_CliDbGetRegUseLclIp();
  }

/**
 * @brief Set  reg use local ip enable flag. 
 *
 * @param [in] bEnable reg use local ip enable.
 *
 *
 * @retval MtcCommonConstants::ZOK Set reg use local ip enablesuccessfully.
 * @retval MtcCommonConstants::ZFAILED Set reg use local ip enable failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetRegUseLclIp
 *
 */
  public static int Mtc_CliDbSetRegUseLclIp(boolean bEnable) {
    return MtcCliDbJNI.Mtc_CliDbSetRegUseLclIp(bEnable);
  }

/**
 * @brief get http proxy type.
 *
 * @return http proxy type, @see @ref EN_MTC_HTTP_PROXY_TYPE.
 *
 * @see MtcCliDb::Mtc_CliDbSetHttpProxyType
 */
  public static int Mtc_CliDbGetHttpProxyType() {
    return MtcCliDbJNI.Mtc_CliDbGetHttpProxyType();
  }

/*
* @brief set http proxy type.
*
* @param [in] iProxyType http proxy type, @see @ref EN_MTC_HTTP_PROXY_TYPE.
*
* @retval MtcCommonConstants::ZOK Set http proxy type successfully.
* @retval MtcCommonConstants::ZFAILED Set http proxy type failed.
*
* @see MtcCliDb::Mtc_CliDbGetHttpProxyType
*/
  public static int Mtc_CliDbSetHttpProxyType(int iProxyType) {
    return MtcCliDbJNI.Mtc_CliDbSetHttpProxyType(iProxyType);
  }

/* 
 * @brief get http proxy server address.
 *
 * @return http proxy server address.
 *
 * @see MtcCliDb::Mtc_CliDbSetHttpProxySrvAddr
 */
  public static String Mtc_CliDbGetHttpProxySrvAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetHttpProxySrvAddr();
  }

/*
* @brief set http proxy server address.
*
* @param [in] pcSrvAddr http proxy server address.
*
* @retval MtcCommonConstants::ZOK Set http proxy server address successfully.
* @retval MtcCommonConstants::ZFAILED Set http proxy server address failed.
*
* @see MtcCliDb::Mtc_CliDbGetHttpProxySrvAddr
*/
  public static int Mtc_CliDbSetHttpProxySrvAddr(String pcSrvAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetHttpProxySrvAddr(pcSrvAddr);
  }

/* 
 * @brief get http proxy server port.
 *
 * @return http proxy server port.
 *
 * @see MtcCliDb::Mtc_CliDbSetHttpProxySrvPort
 */
  public static short Mtc_CliDbGetHttpProxySrvPort() {
    return MtcCliDbJNI.Mtc_CliDbGetHttpProxySrvPort();
  }

/*
* @brief set http proxy server port.
*
* @param [in] wProxyPort http proxy server port.
*
* @retval MtcCommonConstants::ZOK Set http proxy server port successfully.
* @retval MtcCommonConstants::ZFAILED Set http proxy server port failed.
*
* @see MtcCliDb::Mtc_CliDbGetHttpProxySrvPort
*/
  public static int Mtc_CliDbSetHttpProxySrvPort(int wProxyPort) {
    return MtcCliDbJNI.Mtc_CliDbSetHttpProxySrvPort(wProxyPort);
  }

/**
 * @brief Get group manage http server address.
 *
 * @return group manage http server address.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetGrpHttpServAddr
 */
  public static String Mtc_CliDbGetGrpHttpServAddr() {
    return MtcCliDbJNI.Mtc_CliDbGetGrpHttpServAddr();
  }

/**
 * @brief Set group manage http server address.
 *
 * @param [in] pcServAddr The server address.
 *
 * @retval MtcCommonConstants::ZOK Set server address successfully.
 * @retval MtcCommonConstants::ZFAILED Set server address failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetGrpHttpServAddr
 */
  public static int Mtc_CliDbSetGrpHttpServAddr(String pcServAddr) {
    return MtcCliDbJNI.Mtc_CliDbSetGrpHttpServAddr(pcServAddr);
  }

/**
 * @brief Get group manage http server port.
 *
 * @return group manage http server port.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetGrpHttpServPort
 */
  public static int Mtc_CliDbGetGrpHttpServPort() {
    return MtcCliDbJNI.Mtc_CliDbGetGrpHttpServPort();
  }

/**
 * @brief Set group manage http server port.
 *
 * @param [in] wPort The server port.
 *
 * @retval MtcCommonConstants::ZOK Set server port successfully.
 * @retval MtcCommonConstants::ZFAILED Set server port failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetGrpHttpServPort
 */
  public static int Mtc_CliDbSetGrpHttpServPort(int wPort) {
    return MtcCliDbJNI.Mtc_CliDbSetGrpHttpServPort(wPort);
  }

/**
 * @brief Get group manage http authorization name.
 *
 * @return group manage http authorization name.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetGrpHttpAuthName
 */
  public static String Mtc_CliDbGetGrpHttpAuthName() {
    return MtcCliDbJNI.Mtc_CliDbGetGrpHttpAuthName();
  }

/**
 * @brief Set group manage htt authorization name.
 *
 * @param [in] pcAuthName The authorization name.
 *
 * @retval MtcCommonConstants::ZOK Set authorization name successfully.
 * @retval MtcCommonConstants::ZFAILED Set authorization name failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetGrpHttpAuthName
 */
  public static int Mtc_CliDbSetGrpHttpAuthName(String pcAuthName) {
    return MtcCliDbJNI.Mtc_CliDbSetGrpHttpAuthName(pcAuthName);
  }

/**
 * @brief Get use sip pwd from dm flag.
 *
 * @return use sip pwd from dm.
 *
 */
  public static boolean Mtc_CliDbGetUseDmPwd() {
    return MtcCliDbJNI.Mtc_CliDbGetUseDmPwd();
  }

/**
 * @brief set use sip pwd from dm flag.
 *
 * @return use sip pwd from dm.
 *
 */
  public static int Mtc_CliDbSetUseDmPwd(boolean bUse) {
    return MtcCliDbJNI.Mtc_CliDbSetUseDmPwd(bUse);
  }

/**
 * @brief Get min heart beat timer length on ps, in seconds.
 *
 * @retval The min length of heart beat timer on ps, default is 30 seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMinHeartbeatTime
 */
  public static int Mtc_CliDbGetMinHeartbeatTime() {
    return MtcCliDbJNI.Mtc_CliDbGetMinHeartbeatTime();
  }

/**
 * @brief Set min heart beat timer length on ps, in seconds.
 *
 * @param [in] iTmrLen The min heart beat timer length on ps.
 *
 * @retval MtcCommonConstants::ZOK Set min heart beat timer length on ps successfully.
 * @retval MtcCommonConstants::ZFAILED Set min heart beat timer length on ps failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMinHeartbeatTime
 */
  public static int Mtc_CliDbSetMinHeartbeatTime(int iTmrLen) {
    return MtcCliDbJNI.Mtc_CliDbSetMinHeartbeatTime(iTmrLen);
  }

/**
 * @brief Get min heart beat timer length on wifi, in seconds.
 *
 * @retval The min length of heart beat timer on wifi, default is 30 seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetWifiMinHeartbeatTime
 */
  public static int Mtc_CliDbGetWifiMinHeartbeatTime() {
    return MtcCliDbJNI.Mtc_CliDbGetWifiMinHeartbeatTime();
  }

/**
 * @brief Set min heart beat timer length on wifi, in seconds.
 *
 * @param [in] iTmrLen The min heart beat timer length on wifi.
 *
 * @retval MtcCommonConstants::ZOK Set min heart beat timer length on wifi successfully.
 * @retval MtcCommonConstants::ZFAILED Set min heart beat timer length on wifi failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetWifiMinHeartbeatTime
 */
  public static int Mtc_CliDbSetWifiMinHeartbeatTime(int iTmrLen) {
    return MtcCliDbJNI.Mtc_CliDbSetWifiMinHeartbeatTime(iTmrLen);
  }

/**
 * @brief Get max heart beat timer length on ps, in seconds.
 *
 * @retval The max length of heart beat timer on ps, default is 30 seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetMaxHeartbeatTime
 */
  public static int Mtc_CliDbGetMaxHeartbeatTime() {
    return MtcCliDbJNI.Mtc_CliDbGetMaxHeartbeatTime();
  }

/**
 * @brief Set max heart beat timer length on ps, in seconds.
 *
 * @param [in] iTmrLen The max heart beat timer length on ps.
 *
 * @retval MtcCommonConstants::ZOK Set max heart beat timer length on ps successfully.
 * @retval MtcCommonConstants::ZFAILED Set max heart beat timer length on ps failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetMaxHeartbeatTime
 */
  public static int Mtc_CliDbSetMaxHeartbeatTime(int iTmrLen) {
    return MtcCliDbJNI.Mtc_CliDbSetMaxHeartbeatTime(iTmrLen);
  }

/**
 * @brief Get max heart beat timer length on wifi, in seconds.
 *
 * @retval The max length of heart beat timer on wifi, default is 30 seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetWifiMaxHeartbeatTime
 */
  public static int Mtc_CliDbGetWifiMaxHeartbeatTime() {
    return MtcCliDbJNI.Mtc_CliDbGetWifiMaxHeartbeatTime();
  }

/**
 * @brief Set max heart beat timer length on wifi, in seconds.
 *
 * @param [in] iTmrLen The max heart beat timer length on wifi.
 *
 * @retval MtcCommonConstants::ZOK Set max heart beat timer length on wifi successfully.
 * @retval MtcCommonConstants::ZFAILED Set max heart beat timer length on wifi failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetWifiMaxHeartbeatTime
 */
  public static int Mtc_CliDbSetWifiMaxHeartbeatTime(int iTmrLen) {
    return MtcCliDbJNI.Mtc_CliDbSetWifiMaxHeartbeatTime(iTmrLen);
  }

/**
 * @brief Get heart beat time step length on ps, in seconds.
 *
 * @retval The length of heart beat time step on ps, default is 300 seconds.
 *
 * @see @ref MtcCliDb::Mtc_CliDbSetHeartbeatStepLen
 */
  public static int Mtc_CliDbGetHeartbeatStepLen() {
    return MtcCliDbJNI.Mtc_CliDbGetHeartbeatStepLen();
  }

/**
 * @brief Set heart beat time step length on ps, in seconds.
 *
 * @param [in] iTmrLen The heart beat time step length on ps.
 *
 * @retval MtcCommonConstants::ZOK Set heart beat time step length on ps successfully.
 * @retval MtcCommonConstants::ZFAILED Set heart beat time step length on ps failed.
 *
 * @see @ref MtcCliDb::Mtc_CliDbGetHeartbeatStepLen
 */
  public static int Mtc_CliDbSetHeartbeatStepLen(int iTmrLen) {
    return MtcCliDbJNI.Mtc_CliDbSetHeartbeatStepLen(iTmrLen);
  }

}
