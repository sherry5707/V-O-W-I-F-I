/**
 * @file MtcCprof.java
 * @brief MtcCprof interface
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.cmcc.app.lemon;

/**
 * @brief MtcCprof interface
 */
public class MtcCprof implements MtcCprofConstants {
/**
 * @brief Load pcc document from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccAllLoadOk or @ref Mtc_CprofCbSetPccAllLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading pcc successfully.
 * @retval MtcCommonConstants::ZFAILED Client load pcc failed.
 *
 * @see MtcCprof::Mtc_CprofPccUploadAll
 */
  public static int Mtc_CprofPccLoadAll() {
    return MtcCprofJNI.Mtc_CprofPccLoadAll();
  }

/**
 * @brief Upload pcc document into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccAllUploadOk or @ref Mtc_CprofCbSetPccAllUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading pcc successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload pcc failed.
 *
 * @see MtcCprof::Mtc_CprofPccLoadAll
 */
  public static int Mtc_CprofPccUploadAll() {
    return MtcCprofJNI.Mtc_CprofPccUploadAll();
  }

/**
 * @brief Load pcc name from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccNameLoadOk or @ref Mtc_CprofCbSetPccNameLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading pcc name successfully.
 * @retval MtcCommonConstants::ZFAILED Client load pcc name failed.
 *
 * @see MtcCprof::Mtc_CprofPccUploadName
 */
  public static int Mtc_CprofPccLoadName() {
    return MtcCprofJNI.Mtc_CprofPccLoadName();
  }

/**
 * @brief Upload pcc name into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccNameUploadOk or @ref Mtc_CprofCbSetPccNameUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading pcc name successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload pcc name failed.
 *
 * @see MtcCprof::Mtc_CprofPccLoadName
 */
  public static int Mtc_CprofPccUploadName() {
    return MtcCprofJNI.Mtc_CprofPccUploadName();
  }

/**
 * @brief Load pcc address from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccAddrLoadOk or @ref Mtc_CprofCbSetPccAddrLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading pcc address successfully.
 * @retval MtcCommonConstants::ZFAILED Client load pcc address failed.
 *
 * @see MtcCprof::Mtc_CprofPccUploadAddr
 */
  public static int Mtc_CprofPccLoadAddr() {
    return MtcCprofJNI.Mtc_CprofPccLoadAddr();
  }

/**
 * @brief Upload pcc address into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccAddrUploadOk or @ref Mtc_CprofCbSetPccAddrUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading pcc address successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload pcc address failed.
 *
 * @see MtcCprof::Mtc_CprofPccLoadAddr
 */
  public static int Mtc_CprofPccUploadAddr() {
    return MtcCprofJNI.Mtc_CprofPccUploadAddr();
  }

/**
 * @brief Load pcc comm-addr from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccCommAddrLoadOk or @ref Mtc_CprofCbSetPccCommAddrLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading pcc comm-addr successfully.
 * @retval MtcCommonConstants::ZFAILED Client load pcc comm-addr failed.
 *
 * @see MtcCprof::Mtc_CprofPccUploadCommAddr
 */
  public static int Mtc_CprofPccLoadCommAddr() {
    return MtcCprofJNI.Mtc_CprofPccLoadCommAddr();
  }

/**
 * @brief Upload pcc comm-addr into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccCommAddrUploadOk or @ref Mtc_CprofCbSetPccCommAddrUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading pcc comm-addr successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload pcc comm-addr failed.
 *
 * @see MtcCprof::Mtc_CprofPccLoadCommAddr
 */
  public static int Mtc_CprofPccUploadCommAddr() {
    return MtcCprofJNI.Mtc_CprofPccUploadCommAddr();
  }

/**
 * @brief Load pcc birth from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccBirthLoadOk or @ref Mtc_CprofCbSetPccBirthLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading pcc birth successfully.
 * @retval MtcCommonConstants::ZFAILED Client load pcc birth failed.
 *
 * @see MtcCprof::Mtc_CprofPccUploadBirth
 */
  public static int Mtc_CprofPccLoadBirth() {
    return MtcCprofJNI.Mtc_CprofPccLoadBirth();
  }

/**
 * @brief Upload pcc birth into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccBirthUploadOk or @ref Mtc_CprofCbSetPccBirthUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading pcc birth successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload pcc birth failed.
 *
 * @see MtcCprof::Mtc_CprofPccLoadBirth
 */
  public static int Mtc_CprofPccUploadBirth() {
    return MtcCprofJNI.Mtc_CprofPccUploadBirth();
  }

/**
 * @brief Load pcc career from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccCareerLoadOk or @ref Mtc_CprofCbSetPccCareerLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading pcc career successfully.
 * @retval MtcCommonConstants::ZFAILED Client load pcc career failed.
 *
 * @see MtcCprof::Mtc_CprofPccUploadCareer
 */
  public static int Mtc_CprofPccLoadCareer() {
    return MtcCprofJNI.Mtc_CprofPccLoadCareer();
  }

/**
 * @brief Upload pcc career into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccCareerUploadOk or @ref Mtc_CprofCbSetPccCareerUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading pcc career successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload pcc career failed.
 *
 * @see MtcCprof::Mtc_CprofPccLoadCareer
 */
  public static int Mtc_CprofPccUploadCareer() {
    return MtcCprofJNI.Mtc_CprofPccUploadCareer();
  }

/**
 * @brief Load pcc icon from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccIconLoadOk or @ref Mtc_CprofCbSetPccIconLoadFailed.
 * 
 * @param [in] iXResolution The X-Resolution type, @see @ref MtcCprofConstants::EN_MTC_CPROF_XRESOLUTION_16.
 * @param [in] pcEtag The entity tag.
 * 
 * @retval MtcCommonConstants::ZOK Start loading pcc icon successfully.
 * @retval MtcCommonConstants::ZFAILED Client load pcc icon failed.
 *
 * @see MtcCprof::Mtc_CprofPccUploadIcon
 */
  public static int Mtc_CprofPccLoadIcon(int iXResolution, String pcEtag) {
    return MtcCprofJNI.Mtc_CprofPccLoadIcon(iXResolution, pcEtag);
  }

/**
 * @brief Upload pcc icon into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetPccIconUploadOk or @ref Mtc_CprofCbSetPccIconUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading pcc icon successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload pcc icon failed.
 *
 * @see MtcCprof::Mtc_CprofPccLoadIcon
 */
  public static int Mtc_CprofPccUploadIcon() {
    return MtcCprofJNI.Mtc_CprofPccUploadIcon();
  }

/**
 * @brief Load qr card document from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetQrCardAllLoadOk or @ref Mtc_CprofCbSetQrCardAllLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading qr card successfully.
 * @retval MtcCommonConstants::ZFAILED Client load qr card failed.
 */
  public static int Mtc_CprofQrCardLoadAll() {
    return MtcCprofJNI.Mtc_CprofQrCardLoadAll();
  }

/**
 * @brief Load qr card flag from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetQrCardFlagLoadOk or @ref Mtc_CprofCbSetQrCardFlagLoadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start loading qr card flag successfully.
 * @retval MtcCommonConstants::ZFAILED Client load qr card flag failed.
 *
 * @see MtcCprof::Mtc_CprofQrCardUploadFlag
 */
  public static int Mtc_CprofQrCardLoadFlag() {
    return MtcCprofJNI.Mtc_CprofQrCardLoadFlag();
  }

/**
 * @brief Upload qr card flag into OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetQrCardFlagUploadOk or @ref Mtc_CprofCbSetQrCardFlagUploadFailed.
 * 
 * @retval MtcCommonConstants::ZOK Start uploading qr card flag successfully.
 * @retval MtcCommonConstants::ZFAILED Client upload qr card flag failed.
 *
 * @see MtcCprof::Mtc_CprofQrCardLoadFlag
 */
  public static int Mtc_CprofQrCardUploadFlag() {
    return MtcCprofJNI.Mtc_CprofQrCardUploadFlag();
  }

/**
 * @brief Load qr card pcc from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetQrCardPccLoadOk or @ref Mtc_CprofCbSetQrCardPccLoadFailed.
 *
 * @param [in] pcUrl The pcc url.
 * 
 * @return qr card pcc id successfully or ZMAXUINT failed.
 */
  public static int Mtc_CprofQrCardLoadPcc(String pcUrl) {
    return MtcCprofJNI.Mtc_CprofQrCardLoadPcc(pcUrl);
  }

/**
 * @brief Load qr card pcc icon from OMA XDMS.
 * 
 * The result will be notified by callbacks which were set by 
 * @ref Mtc_CprofCbSetQrCardPccIconLoadOk or @ref Mtc_CprofCbSetQrCardPccIconLoadFailed.
 *
 * @param [in] pcUri The pcc icon uri.
 * @param [in] iXResolution The X-Resolution type, @see @ref MtcCprofConstants::EN_MTC_CPROF_XRESOLUTION_16.
 * @param [in] pcEtag The entity tag.
 * 
 * @return qr card pcc icon id successfully or ZMAXUINT failed.
 */
  public static int Mtc_CprofQrCardLoadPccIcon(String pcUri, int iXResolution, String pcEtag) {
    return MtcCprofJNI.Mtc_CprofQrCardLoadPccIcon(pcUri, iXResolution, pcEtag);
  }

/**
 * @brief Get the pcc type.
 *
 * @return The pcc type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_INDVDL.
 *
 * @see MtcCprof::Mtc_CprofPccSetPccType
 */
  public static int Mtc_CprofPccGetPccType() {
    return MtcCprofJNI.Mtc_CprofPccGetPccType();
  }

/**
 * @brief Set the pcc type.
 *
 * @param [in] iType The pcc type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_INDVDL.
 *
 * @retval MtcCommonConstants::ZOK Set pcc type successfully.
 * @retval MtcCommonConstants::ZFAILED Set pcc type failed.
 *
 * @see MtcCprof::Mtc_CprofPccGetPccType
 */
  public static int Mtc_CprofPccSetPccType(int iType) {
    return MtcCprofJNI.Mtc_CprofPccSetPccType(iType);
  }

/**
 * @brief Get the pcc name size.
 *
 * @return The name size.
 *
 * @see MtcCprof::Mtc_CprofPccGetNameId
 */
  public static int Mtc_CprofPccGetNameSize() {
    return MtcCprofJNI.Mtc_CprofPccGetNameSize();
  }

/**
 * @brief Get the pcc name id by index.
 *
 * @param [in] iIndex The name index.
 *
 * @return The name id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccGetNameSize
 */
  public static int Mtc_CprofPccGetNameId(int iIndex) {
    return MtcCprofJNI.Mtc_CprofPccGetNameId(iIndex);
  }

/**
 * @brief Add the pcc name.
 *
 * @return The name id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccRmvName
 */
  public static int Mtc_CprofPccAddName() {
    return MtcCprofJNI.Mtc_CprofPccAddName();
  }

/**
 * @brief Remove the pcc name.
 *
 * @param [in] iNameId The name id.
 *
 * @retval MtcCommonConstants::ZOK Remove name successfully.
 * @retval MtcCommonConstants::ZFAILED Remove name failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddName
 */
  public static int Mtc_CprofPccRmvName(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccRmvName(iNameId);
  }

/**
 * @brief Get the pcc given name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The given name.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccNameSetGiven
 */
  public static String Mtc_CprofPccNameGetGiven(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccNameGetGiven(iNameId);
  }

/**
 * @brief Set the pcc given name.
 *
 * @param [in] iNameId The name id.
 * @param [in] pcGiven The given name .
 *
 * @retval MtcCommonConstants::ZOK Set given name successfully.
 * @retval MtcCommonConstants::ZFAILED Set given name failed.
 *
 * @see MtcCprof::Mtc_CprofPccNameGetGiven
 */
  public static int Mtc_CprofPccNameSetGiven(int iNameId, String pcGiven) {
    return MtcCprofJNI.Mtc_CprofPccNameSetGiven(iNameId, pcGiven);
  }

/**
 * @brief Get the pcc middle name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The middle name.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccNameSetMiddle
 */
  public static String Mtc_CprofPccNameGetMiddle(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccNameGetMiddle(iNameId);
  }

/**
 * @brief Set the pcc middle name .
 *
 * @param [in] iNameId The name id.
 * @param [in] pcMiddle The middle name .
 *
 * @retval MtcCommonConstants::ZOK Set middle name successfully.
 * @retval MtcCommonConstants::ZFAILED Set middle name failed.
 *
 * @see MtcCprof::Mtc_CprofPccNameGetMiddle
 */
  public static int Mtc_CprofPccNameSetMiddle(int iNameId, String pcMiddle) {
    return MtcCprofJNI.Mtc_CprofPccNameSetMiddle(iNameId, pcMiddle);
  }

/**
 * @brief Get the pcc family name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The family name.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccNameSetFamily
 */
  public static String Mtc_CprofPccNameGetFamily(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccNameGetFamily(iNameId);
  }

/**
 * @brief Set the pcc family name .
 *
 * @param [in] iNameId The name id.
 * @param [in] pcFamily The family name .
 *
 * @retval MtcCommonConstants::ZOK Set family name successfully.
 * @retval MtcCommonConstants::ZFAILED Set family name failed.
 *
 * @see MtcCprof::Mtc_CprofPccNameGetFamily
 */
  public static int Mtc_CprofPccNameSetFamily(int iNameId, String pcFamily) {
    return MtcCprofJNI.Mtc_CprofPccNameSetFamily(iNameId, pcFamily);
  }

/**
 * @brief Get the pcc display name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The display name.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccNameSetDispName
 */
  public static String Mtc_CprofPccNameGetDispName(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccNameGetDispName(iNameId);
  }

/**
 * @brief Set the pcc display name .
 *
 * @param [in] iNameId The name id.
 * @param [in] pcDispName The display name .
 *
 * @retval MtcCommonConstants::ZOK Set display name successfully.
 * @retval MtcCommonConstants::ZFAILED Set display name failed.
 *
 * @see MtcCprof::Mtc_CprofPccNameGetDispName
 */
  public static int Mtc_CprofPccNameSetDispName(int iNameId, String pcDispName) {
    return MtcCprofJNI.Mtc_CprofPccNameSetDispName(iNameId, pcDispName);
  }

/**
 * @brief Get the pcc first name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The first name.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccNameSetFirst
 */
  public static String Mtc_CprofPccNameGetFirst(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccNameGetFirst(iNameId);
  }

/**
 * @brief Set the pcc first name .
 *
 * @param [in] iNameId The name id.
 * @param [in] pcFirst The first name .
 *
 * @retval MtcCommonConstants::ZOK Set first name successfully.
 * @retval MtcCommonConstants::ZFAILED Set first name failed.
 *
 * @see MtcCprof::Mtc_CprofPccNameGetFirst
 */
  public static int Mtc_CprofPccNameSetFirst(int iNameId, String pcFirst) {
    return MtcCprofJNI.Mtc_CprofPccNameSetFirst(iNameId, pcFirst);
  }

/**
 * @brief Get the pcc name type.
 *
 * @param [in] iNameId The name id.
 *
 * @return The name type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_NAME_ALIAS.
 *
 * @see MtcCprof::Mtc_CprofPccNameSetType
 */
  public static int Mtc_CprofPccNameGetType(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccNameGetType(iNameId);
  }

/**
 * @brief Set the pcc name type.
 *
 * @param [in] iNameId The name id.
 * @param [in] iType The name type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_NAME_ALIAS.
 *
 * @retval MtcCommonConstants::ZOK Set name type successfully.
 * @retval MtcCommonConstants::ZFAILED Set name type failed.
 *
 * @see MtcCprof::Mtc_CprofPccNameGetType
 */
  public static int Mtc_CprofPccNameSetType(int iNameId, int iType) {
    return MtcCprofJNI.Mtc_CprofPccNameSetType(iNameId, iType);
  }

/**
 * @brief Get the pcc name preference.
 *
 * @param [in] iNameId The name id.
 *
 * @return The name preference.
 *
 * @see MtcCprof::Mtc_CprofPccNameSetPref
 */
  public static int Mtc_CprofPccNameGetPref(int iNameId) {
    return MtcCprofJNI.Mtc_CprofPccNameGetPref(iNameId);
  }

/**
 * @brief Set the pcc name preference.
 *
 * @param [in] iNameId The name id.
 * @param [in] iPref The name preference.
 *
 * @retval MtcCommonConstants::ZOK Set name preference successfully.
 * @retval MtcCommonConstants::ZFAILED Set name preference failed.
 *
 * @see MtcCprof::Mtc_CprofPccNameGetPref
 */
  public static int Mtc_CprofPccNameSetPref(int iNameId, int iPref) {
    return MtcCprofJNI.Mtc_CprofPccNameSetPref(iNameId, iPref);
  }

/**
 * @brief Get the pcc address size.
 *
 * @return The address size.
 *
 * @see MtcCprof::Mtc_CprofPccGetAddrId
 */
  public static int Mtc_CprofPccGetAddrSize() {
    return MtcCprofJNI.Mtc_CprofPccGetAddrSize();
  }

/**
 * @brief Get the pcc address id by index.
 *
 * @param [in] iIndex The address index.
 *
 * @return The address id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccGetAddrSize
 */
  public static int Mtc_CprofPccGetAddrId(int iIndex) {
    return MtcCprofJNI.Mtc_CprofPccGetAddrId(iIndex);
  }

/**
 * @brief Add the pcc address.
 *
 * @return The address id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccRmvAddr
 */
  public static int Mtc_CprofPccAddAddr() {
    return MtcCprofJNI.Mtc_CprofPccAddAddr();
  }

/**
 * @brief Remove the pcc address.
 *
 * @param [in] iAddrId The address id.
 *
 * @retval MtcCommonConstants::ZOK Remove address successfully.
 * @retval MtcCommonConstants::ZFAILED Remove address failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddAddr
 */
  public static int Mtc_CprofPccRmvAddr(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofPccRmvAddr(iAddrId);
  }

/**
 * @brief Get the pcc address label.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address label.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccAddrSetLabel
 */
  public static String Mtc_CprofPccAddrGetLabel(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofPccAddrGetLabel(iAddrId);
  }

/**
 * @brief Set the pcc address label .
 *
 * @param [in] iAddrId The address id.
 * @param [in] pcLabel The address label .
 *
 * @retval MtcCommonConstants::ZOK Set address label successfully.
 * @retval MtcCommonConstants::ZFAILED Set address label failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddrGetLabel
 */
  public static int Mtc_CprofPccAddrSetLabel(int iAddrId, String pcLabel) {
    return MtcCprofJNI.Mtc_CprofPccAddrSetLabel(iAddrId, pcLabel);
  }

/**
 * @brief Get the pcc address string.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address string.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccAddrSetAddr
 */
  public static String Mtc_CprofPccAddrGetAddr(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofPccAddrGetAddr(iAddrId);
  }

/**
 * @brief Set the pcc address string.
 *
 * @param [in] iAddrId The address id.
 * @param [in] pcAddr The address string.
 *
 * @retval MtcCommonConstants::ZOK Set address string successfully.
 * @retval MtcCommonConstants::ZFAILED Set address string failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddrGetAddr
 */
  public static int Mtc_CprofPccAddrSetAddr(int iAddrId, String pcAddr) {
    return MtcCprofJNI.Mtc_CprofPccAddrSetAddr(iAddrId, pcAddr);
  }

/**
 * @brief Get the pcc address type.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_ADDR_HOME.
 *
 * @see MtcCprof::Mtc_CprofPccAddrSetType
 */
  public static int Mtc_CprofPccAddrGetType(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofPccAddrGetType(iAddrId);
  }

/**
 * @brief Set the pcc address type.
 *
 * @param [in] iAddrId The address id.
 * @param [in] iType The address type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_ADDR_HOME.
 *
 * @retval MtcCommonConstants::ZOK Set address type successfully.
 * @retval MtcCommonConstants::ZFAILED Set address type failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddrGetAddr
 */
  public static int Mtc_CprofPccAddrSetType(int iAddrId, int iType) {
    return MtcCprofJNI.Mtc_CprofPccAddrSetType(iAddrId, iType);
  }

/**
 * @brief Get the pcc address preference.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address preference.
 *
 * @see MtcCprof::Mtc_CprofPccAddrSetPref
 */
  public static int Mtc_CprofPccAddrGetPref(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofPccAddrGetPref(iAddrId);
  }

/**
 * @brief Set the pcc address preference.
 *
 * @param [in] iAddrId The address id.
 * @param [in] iPref The address preference.
 *
 * @retval MtcCommonConstants::ZOK Set address preference successfully.
 * @retval MtcCommonConstants::ZFAILED Set address preference failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddrGetPref
 */
  public static int Mtc_CprofPccAddrSetPref(int iAddrId, int iPref) {
    return MtcCprofJNI.Mtc_CprofPccAddrSetPref(iAddrId, iPref);
  }

/**
 * @brief Get the pcc uri size.
 *
 * @return The uri size.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrGetUriId
 */
  public static int Mtc_CprofPccCommAddrGetUriSize() {
    return MtcCprofJNI.Mtc_CprofPccCommAddrGetUriSize();
  }

/**
 * @brief Get the pcc uri id by index.
 *
 * @param [in] iIndex The uri index.
 *
 * @return The uri id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrGetUriSize
 */
  public static int Mtc_CprofPccCommAddrGetUriId(int iIndex) {
    return MtcCprofJNI.Mtc_CprofPccCommAddrGetUriId(iIndex);
  }

/**
 * @brief Add the pcc uri.
 *
 * @return The uri id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrRmvUri
 */
  public static int Mtc_CprofPccCommAddrAddUri() {
    return MtcCprofJNI.Mtc_CprofPccCommAddrAddUri();
  }

/**
 * @brief Remove the pcc uri.
 *
 * @param [in] iUriId The uri id.
 *
 * @retval MtcCommonConstants::ZOK Remove uri successfully.
 * @retval MtcCommonConstants::ZFAILED Remove uri failed.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrAddUri
 */
  public static int Mtc_CprofPccCommAddrRmvUri(int iUriId) {
    return MtcCprofJNI.Mtc_CprofPccCommAddrRmvUri(iUriId);
  }

/**
 * @brief Get the pcc uri label.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri label.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccUriSetLabel
 */
  public static String Mtc_CprofPccUriGetLabel(int iUriId) {
    return MtcCprofJNI.Mtc_CprofPccUriGetLabel(iUriId);
  }

/**
 * @brief Set the pcc uri label .
 *
 * @param [in] iUriId The uri id.
 * @param [in] pcLabel The uri label .
 *
 * @retval MtcCommonConstants::ZOK Set address uri successfully.
 * @retval MtcCommonConstants::ZFAILED Set address uri failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddrGetLabel
 */
  public static int Mtc_CprofPccUriSetLabel(int iUriId, String pcLabel) {
    return MtcCprofJNI.Mtc_CprofPccUriSetLabel(iUriId, pcLabel);
  }

/**
 * @brief Get the pcc uri string.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri string.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccUriSetUri
 */
  public static String Mtc_CprofPccUriGetUri(int iUriId) {
    return MtcCprofJNI.Mtc_CprofPccUriGetUri(iUriId);
  }

/**
 * @brief Set the pcc uri string.
 *
 * @param [in] iUriId The uri id.
 * @param [in] pcUri The uri string.
 *
 * @retval MtcCommonConstants::ZOK Set uri string successfully.
 * @retval MtcCommonConstants::ZFAILED Set uri string failed.
 *
 * @see MtcCprof::Mtc_CprofPccUriGetUri
 */
  public static int Mtc_CprofPccUriSetUri(int iUriId, String pcUri) {
    return MtcCprofJNI.Mtc_CprofPccUriSetUri(iUriId, pcUri);
  }

/**
 * @brief Get the pcc uri type.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_URI_WORK.
 *
 * @see MtcCprof::Mtc_CprofPccUriSetType
 */
  public static int Mtc_CprofPccUriGetType(int iUriId) {
    return MtcCprofJNI.Mtc_CprofPccUriGetType(iUriId);
  }

/**
 * @brief Set the pcc uri type.
 *
 * @param [in] iUriId The uri id.
 * @param [in] iType The uri type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_URI_WORK.
 *
 * @retval MtcCommonConstants::ZOK Set uri type successfully.
 * @retval MtcCommonConstants::ZFAILED Set uri type failed.
 *
 * @see MtcCprof::Mtc_CprofPccUriGetType
 */
  public static int Mtc_CprofPccUriSetType(int iUriId, int iType) {
    return MtcCprofJNI.Mtc_CprofPccUriSetType(iUriId, iType);
  }

/**
 * @brief Get the pcc uri preference.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri preference.
 *
 * @see MtcCprof::Mtc_CprofPccUriSetPref
 */
  public static int Mtc_CprofPccUriGetPref(int iUriId) {
    return MtcCprofJNI.Mtc_CprofPccUriGetPref(iUriId);
  }

/**
 * @brief Set the pcc uri preference.
 *
 * @param [in] iUriId The uri id.
 * @param [in] iPref The uri preference.
 *
 * @retval MtcCommonConstants::ZOK Set uri preference successfully.
 * @retval MtcCommonConstants::ZFAILED Set uri preference failed.
 *
 * @see MtcCprof::Mtc_CprofPccUriGetPref
 */
  public static int Mtc_CprofPccUriSetPref(int iUriId, int iPref) {
    return MtcCprofJNI.Mtc_CprofPccUriSetPref(iUriId, iPref);
  }

/**
 * @brief Get the pcc tel size.
 *
 * @return The tel size.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrGetTelId
 */
  public static int Mtc_CprofPccCommAddrGetTelSize() {
    return MtcCprofJNI.Mtc_CprofPccCommAddrGetTelSize();
  }

/**
 * @brief Get the pcc tel id by index.
 *
 * @param [in] iIndex The tel index.
 *
 * @return The tel id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrGetTelSize
 */
  public static int Mtc_CprofPccCommAddrGetTelId(int iIndex) {
    return MtcCprofJNI.Mtc_CprofPccCommAddrGetTelId(iIndex);
  }

/**
 * @brief Add the pcc tel.
 *
 * @return The tel id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrRmvTel
 */
  public static int Mtc_CprofPccCommAddrAddTel() {
    return MtcCprofJNI.Mtc_CprofPccCommAddrAddTel();
  }

/**
 * @brief Remove the pcc tel.
 *
 * @param [in] iTelId The tel id.
 *
 * @retval MtcCommonConstants::ZOK Remove tel successfully.
 * @retval MtcCommonConstants::ZFAILED Remove tel failed.
 *
 * @see MtcCprof::Mtc_CprofPccCommAddrAddTel
 */
  public static int Mtc_CprofPccCommAddrRmvTel(int iTelId) {
    return MtcCprofJNI.Mtc_CprofPccCommAddrRmvTel(iTelId);
  }

/**
 * @brief Get the pcc tel label.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel label.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccTelSetLabel
 */
  public static String Mtc_CprofPccTelGetLabel(int iTelId) {
    return MtcCprofJNI.Mtc_CprofPccTelGetLabel(iTelId);
  }

/**
 * @brief Set the pcc tel label .
 *
 * @param [in] iTelId The tel id.
 * @param [in] pcLabel The tel label .
 *
 * @retval MtcCommonConstants::ZOK Set address tel successfully.
 * @retval MtcCommonConstants::ZFAILED Set address tel failed.
 *
 * @see MtcCprof::Mtc_CprofPccAddrGetLabel
 */
  public static int Mtc_CprofPccTelSetLabel(int iTelId, String pcLabel) {
    return MtcCprofJNI.Mtc_CprofPccTelSetLabel(iTelId, pcLabel);
  }

/**
 * @brief Get the pcc tel string.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel string.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccTelSetTel
 */
  public static String Mtc_CprofPccTelGetTel(int iTelId) {
    return MtcCprofJNI.Mtc_CprofPccTelGetTel(iTelId);
  }

/**
 * @brief Set the pcc tel string.
 *
 * @param [in] iTelId The tel id.
 * @param [in] pcTel The tel string.
 *
 * @retval MtcCommonConstants::ZOK Set tel string successfully.
 * @retval MtcCommonConstants::ZFAILED Set tel string failed.
 *
 * @see MtcCprof::Mtc_CprofPccTelGetTel
 */
  public static int Mtc_CprofPccTelSetTel(int iTelId, String pcTel) {
    return MtcCprofJNI.Mtc_CprofPccTelSetTel(iTelId, pcTel);
  }

/**
 * @brief Get the pcc tel type.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_TEL_WORK.
 *
 * @see MtcCprof::Mtc_CprofPccTelSetTelType
 */
  public static int Mtc_CprofPccTelGetTelType(int iTelId) {
    return MtcCprofJNI.Mtc_CprofPccTelGetTelType(iTelId);
  }

/**
 * @brief Set the pcc tel type.
 *
 * @param [in] iTelId The tel id.
 * @param [in] iType The tel type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_TEL_WORK.
 *
 * @retval MtcCommonConstants::ZOK Set tel type successfully.
 * @retval MtcCommonConstants::ZFAILED Set tel type failed.
 *
 * @see MtcCprof::Mtc_CprofPccTelGetTelType
 */
  public static int Mtc_CprofPccTelSetTelType(int iTelId, int iType) {
    return MtcCprofJNI.Mtc_CprofPccTelSetTelType(iTelId, iType);
  }

/**
 * @brief Get the pcc xui type.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The xui type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_XUI_CAB.
 *
 * @see MtcCprof::Mtc_CprofPccTelSetXuiType
 */
  public static int Mtc_CprofPccTelGetXuiType(int iTelId) {
    return MtcCprofJNI.Mtc_CprofPccTelGetXuiType(iTelId);
  }

/**
 * @brief Set the pcc xui type.
 *
 * @param [in] iTelId The tel id.
 * @param [in] iType The xui type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_XUI_CAB.
 *
 * @retval MtcCommonConstants::ZOK Set xui type successfully.
 * @retval MtcCommonConstants::ZFAILED Set xui type failed.
 *
 * @see MtcCprof::Mtc_CprofPccTelGetXuiType
 */
  public static int Mtc_CprofPccTelSetXuiType(int iTelId, int iType) {
    return MtcCprofJNI.Mtc_CprofPccTelSetXuiType(iTelId, iType);
  }

/**
 * @brief Get the pcc tel preference.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel preference.
 *
 * @see MtcCprof::Mtc_CprofPccTelSetPref
 */
  public static int Mtc_CprofPccTelGetPref(int iTelId) {
    return MtcCprofJNI.Mtc_CprofPccTelGetPref(iTelId);
  }

/**
 * @brief Set the pcc tel preference.
 *
 * @param [in] iTelId The tel id.
 * @param [in] iPref The tel preference.
 *
 * @retval MtcCommonConstants::ZOK Set tel preference successfully.
 * @retval MtcCommonConstants::ZFAILED Set tel preference failed.
 *
 * @see MtcCprof::Mtc_CprofPccTelGetPref
 */
  public static int Mtc_CprofPccTelSetPref(int iTelId, int iPref) {
    return MtcCprofJNI.Mtc_CprofPccTelSetPref(iTelId, iPref);
  }

/**
 * @brief Get the pcc birth date.
 *
 * @return The birth date.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccBirthSetDate
 */
  public static String Mtc_CprofPccBirthGetDate() {
    return MtcCprofJNI.Mtc_CprofPccBirthGetDate();
  }

/**
 * @brief Set the pcc birth date.
 *
 * @param [in] pcDate The birth date.
 *
 * @retval MtcCommonConstants::ZOK Set birth date successfully.
 * @retval MtcCommonConstants::ZFAILED Set birth date failed.
 *
 * @see MtcCprof::Mtc_CprofPccBirthGetDate
 */
  public static int Mtc_CprofPccBirthSetDate(String pcDate) {
    return MtcCprofJNI.Mtc_CprofPccBirthSetDate(pcDate);
  }

/**
 * @brief Get the pcc birth non-gregorian.
 *
 * @return The birth non-gregorian.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccBirthSetNonGregDate
 */
  public static String Mtc_CprofPccBirthGetNonGregDate() {
    return MtcCprofJNI.Mtc_CprofPccBirthGetNonGregDate();
  }

/**
 * @brief Set the pcc birth non-gregorian.
 *
 * @param [in] pcNonGregDate The birth non-gregorian.
 *
 * @retval MtcCommonConstants::ZOK Set birth non-gregorian successfully.
 * @retval MtcCommonConstants::ZFAILED Set birth non-gregorian failed.
 *
 * @see MtcCprof::Mtc_CprofPccBirthGetNonGregDate
 */
  public static int Mtc_CprofPccBirthSetNonGregDate(String pcNonGregDate) {
    return MtcCprofJNI.Mtc_CprofPccBirthSetNonGregDate(pcNonGregDate);
  }

/**
 * @brief Get the pcc birth place.
 *
 * @return The birth place.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccBirthSetPlace
 */
  public static String Mtc_CprofPccBirthGetPlace() {
    return MtcCprofJNI.Mtc_CprofPccBirthGetPlace();
  }

/**
 * @brief Set the pcc birth place.
 *
 * @param [in] pcPlace The birth place.
 *
 * @retval MtcCommonConstants::ZOK Set birth place successfully.
 * @retval MtcCommonConstants::ZFAILED Set birth place failed.
 *
 * @see MtcCprof::Mtc_CprofPccBirthGetPlace
 */
  public static int Mtc_CprofPccBirthSetPlace(String pcPlace) {
    return MtcCprofJNI.Mtc_CprofPccBirthSetPlace(pcPlace);
  }

/**
 * @brief Get the pcc birth calendars type.
 *
 * @return The calendars type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_CAL_AKAN.
 *
 * @see MtcCprof::Mtc_CprofPccBirthSetCalType
 */
  public static int Mtc_CprofPccBirthGetCalType() {
    return MtcCprofJNI.Mtc_CprofPccBirthGetCalType();
  }

/**
 * @brief Set the pcc birth calendars type.
 *
 * @param [in] iType The calendars type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_CAL_AKAN.
 *
 * @retval MtcCommonConstants::ZOK Set calendars type successfully.
 * @retval MtcCommonConstants::ZFAILED Set calendars type failed.
 *
 * @see MtcCprof::Mtc_CprofPccBirthGetCalType
 */
  public static int Mtc_CprofPccBirthSetCalType(int iType) {
    return MtcCprofJNI.Mtc_CprofPccBirthSetCalType(iType);
  }

/**
 * @brief Get the pcc career employer.
 *
 * @return The career employer.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccCareerSetEmployer
 */
  public static String Mtc_CprofPccCareerGetEmployer() {
    return MtcCprofJNI.Mtc_CprofPccCareerGetEmployer();
  }

/**
 * @brief Set the pcc career employer.
 *
 * @param [in] pcEmployer The career employer.
 *
 * @retval MtcCommonConstants::ZOK Set career employer successfully.
 * @retval MtcCommonConstants::ZFAILED Set career employer failed.
 *
 * @see MtcCprof::Mtc_CprofPccCareerGetEmployer
 */
  public static int Mtc_CprofPccCareerSetEmployer(String pcEmployer) {
    return MtcCprofJNI.Mtc_CprofPccCareerSetEmployer(pcEmployer);
  }

/**
 * @brief Get the pcc career duty.
 *
 * @return The career duty.
 *   The caller must copy it, then use.
 *
 * @see MtcCprof::Mtc_CprofPccCareerSetDuty
 */
  public static String Mtc_CprofPccCareerGetDuty() {
    return MtcCprofJNI.Mtc_CprofPccCareerGetDuty();
  }

/**
 * @brief Set the pcc career duty.
 *
 * @param [in] pcDuty The career duty.
 *
 * @retval MtcCommonConstants::ZOK Set career duty successfully.
 * @retval MtcCommonConstants::ZFAILED Set career duty failed.
 *
 * @see MtcCprof::Mtc_CprofPccCareerGetDuty
 */
  public static int Mtc_CprofPccCareerSetDuty(String pcDuty) {
    return MtcCprofJNI.Mtc_CprofPccCareerSetDuty(pcDuty);
  }

/**
 * @brief Get the pcc icon mime type.
 *
 * @return The mime type, @see @ref MtcCprofConstants::EN_MTC_CPROF_MIME_UNKNOWN.
 *
 * @see MtcCprof::Mtc_CprofPccIconSetMimeType
 */
  public static int Mtc_CprofPccIconGetMimeType() {
    return MtcCprofJNI.Mtc_CprofPccIconGetMimeType();
  }

/**
 * @brief Set the pcc icon mime type.
 *
 * @param [in] iType The mime type, @see @ref MtcCprofConstants::EN_MTC_CPROF_MIME_UNKNOWN.
 *
 * @retval MtcCommonConstants::ZOK Set mime type successfully.
 * @retval MtcCommonConstants::ZFAILED Set mime type failed.
 *
 * @see MtcCprof::Mtc_CprofPccIconGetMimeType
 */
  public static int Mtc_CprofPccIconSetMimeType(int iType) {
    return MtcCprofJNI.Mtc_CprofPccIconSetMimeType(iType);
  }

/**
 * @brief Get the pcc icon encoding type.
 *
 * @return The encoding type, @see @ref MtcCprofConstants::EN_MTC_CPROF_ENCODING_UNKNOWN.
 *
 * @see MtcCprof::Mtc_CprofPccIconSetEncodingType
 */
  public static int Mtc_CprofPccIconGetEncodingType() {
    return MtcCprofJNI.Mtc_CprofPccIconGetEncodingType();
  }

/**
 * @brief Set the pcc icon encoding type.
 *
 * @param [in] iType The encoding type, @see @ref MtcCprofConstants::EN_MTC_CPROF_ENCODING_UNKNOWN.
 *
 * @retval MtcCommonConstants::ZOK Set encoding type successfully.
 * @retval MtcCommonConstants::ZFAILED Set encoding type failed.
 *
 * @see MtcCprof::Mtc_CprofPccIconGetEncodingType
 */
  public static int Mtc_CprofPccIconSetEncodingType(int iType) {
    return MtcCprofJNI.Mtc_CprofPccIconSetEncodingType(iType);
  }

/**
 * @brief Get the pcc icon description.
 *
 * @return The description.
 *
 * @see MtcCprof::Mtc_CprofPccIconSetDesc
 */
  public static String Mtc_CprofPccIconGetDesc() {
    return MtcCprofJNI.Mtc_CprofPccIconGetDesc();
  }

/**
 * @brief Set the pcc icon description.
 *
 * @param [in] pcDesc The description.
 *
 * @retval MtcCommonConstants::ZOK Set description successfully.
 * @retval MtcCommonConstants::ZFAILED Set description failed.
 *
 * @see MtcCprof::Mtc_CprofPccIconGetDesc
 */
  public static int Mtc_CprofPccIconSetDesc(String pcDesc) {
    return MtcCprofJNI.Mtc_CprofPccIconSetDesc(pcDesc);
  }

/**
 * @brief Get the pcc icon data.
 *
 * @return The data.
 *
 * @see MtcCprof::Mtc_CprofPccIconSetData
 */
  public static String Mtc_CprofPccIconGetData() {
    return MtcCprofJNI.Mtc_CprofPccIconGetData();
  }

/**
 * @brief Set the pcc icon data.
 *
 * @param [in] pcData The data.
 *
 * @retval MtcCommonConstants::ZOK Set data successfully.
 * @retval MtcCommonConstants::ZFAILED Set data failed.
 *
 * @see MtcCprof::Mtc_CprofPccIconGetData
 */
  public static int Mtc_CprofPccIconSetData(String pcData) {
    return MtcCprofJNI.Mtc_CprofPccIconSetData(pcData);
  }

/**
 * @brief Get the pcc icon X-Resolution type.
 *
 * @return The X-Resolution type, @see @ref MtcCprofConstants::EN_MTC_CPROF_XRESOLUTION_16.
 */
  public static int Mtc_CprofPccIconGetXResolution() {
    return MtcCprofJNI.Mtc_CprofPccIconGetXResolution();
  }

/**
 * @brief Get the pcc icon etag.
 *
 * @return The etag.
 */
  public static String Mtc_CprofPccIconGetEtag() {
    return MtcCprofJNI.Mtc_CprofPccIconGetEtag();
  }

/**
 * @brief Get the pcc icon export file.
 *
 * @param [in] pcFileName The file name with path.
 *
 * @retval MtcCommonConstants::ZOK Export file successfully.
 * @retval MtcCommonConstants::ZFAILED Export file failed.
 *
 * @see MtcCprof::Mtc_CprofPccIconImportFile
 */
  public static int Mtc_CprofPccIconExportFile(String pcFileName) {
    return MtcCprofJNI.Mtc_CprofPccIconExportFile(pcFileName);
  }

/**
 * @brief Get the pcc icon import file.
 *
 * @param [in] pcFileName The file name with path.
 *
 * @retval MtcCommonConstants::ZOK Import file successfully.
 * @retval MtcCommonConstants::ZFAILED Import file failed.
 *
 * @see MtcCprof::Mtc_CprofPccIconExportFile
 */
  public static int Mtc_CprofPccIconImportFile(String pcFileName) {
    return MtcCprofJNI.Mtc_CprofPccIconImportFile(pcFileName);
  }

/**
 * @brief Get the qr card business flag.
 *
 * @return The business flag.
 *
 * @see MtcCprof::Mtc_CprofQrCardSetBusinessFlag
 */
  public static boolean Mtc_CprofQrCardGetBusinessFlag() {
    return MtcCprofJNI.Mtc_CprofQrCardGetBusinessFlag();
  }

/**
 * @brief Set the qr card business flag.
 *
 * @param [in] bFlag The business flag.
 *
 * @retval MtcCommonConstants::ZOK Set business flag successfully.
 * @retval MtcCommonConstants::ZFAILED Set business flag failed.
 *
 * @see MtcCprof::Mtc_CprofQrCardGetBusinessFlag
 */
  public static int Mtc_CprofQrCardSetBusinessFlag(boolean bFlag) {
    return MtcCprofJNI.Mtc_CprofQrCardSetBusinessFlag(bFlag);
  }

/**
 * @brief Get the qr card content mime type.
 *
 * @return The mime type, @see @ref MtcCprofConstants::EN_MTC_CPROF_MIME_UNKNOWN.
 */
  public static int Mtc_CprofQrCardCttGetMimeType() {
    return MtcCprofJNI.Mtc_CprofQrCardCttGetMimeType();
  }

/**
 * @brief Get the qr card content encoding type.
 *
 * @return The encoding type, @see @ref MtcCprofConstants::EN_MTC_CPROF_ENCODING_UNKNOWN.
 */
  public static int Mtc_CprofQrCardCttGetEncodingType() {
    return MtcCprofJNI.Mtc_CprofQrCardCttGetEncodingType();
  }

/**
 * @brief Get the qr card content description.
 *
 * @return The content description.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardCttGetDesc() {
    return MtcCprofJNI.Mtc_CprofQrCardCttGetDesc();
  }

/**
 * @brief Get the qr card content data.
 *
 * @return The content data.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardCttGetData() {
    return MtcCprofJNI.Mtc_CprofQrCardCttGetData();
  }

/**
 * @brief Get the qr card content export file.
 *
 * @param [in] pcFileName The file name with path.
 *
 * @retval MtcCommonConstants::ZOK Export file successfully.
 * @retval MtcCommonConstants::ZFAILED Export file failed.
 */
  public static int Mtc_CprofQrCardCttExportFile(String pcFileName) {
    return MtcCprofJNI.Mtc_CprofQrCardCttExportFile(pcFileName);
  }

/**
 * @brief Get the qr card pcc url.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The pcc url.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccGetUrl(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetUrl(iTdcPccId);
  }

/**
 * @brief Check the tdc pcc has vCard.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @retval true Indicates the pcc has vCard.
 * @retval false Indicates the pcc has not vCard.
 */
  public static boolean Mtc_CprofQrCardPccHasVcard(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccHasVcard(iTdcPccId);
  }

/**
 * @brief Get the tdc pcc vCard.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The pcc vCard.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccGetVcard(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetVcard(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc type.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The pcc type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_INDVDL.
 */
  public static int Mtc_CprofQrCardPccGetPccType(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetPccType(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc name size.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The name size.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccGetNameId
 */
  public static int Mtc_CprofQrCardPccGetNameSize(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetNameSize(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc name id by index.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 * @param [in] iIndex The name index.
 *
 * @return The name id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccGetNameSize
 */
  public static int Mtc_CprofQrCardPccGetNameId(int iTdcPccId, int iIndex) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetNameId(iTdcPccId, iIndex);
  }

/**
 * @brief Get the qr card pcc given name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The given name.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccNameGetGiven(int iNameId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccNameGetGiven(iNameId);
  }

/**
 * @brief Get the qr card pcc middle name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The middle name.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccNameGetMiddle(int iNameId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccNameGetMiddle(iNameId);
  }

/**
 * @brief Get the qr card pcc family name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The family name.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccNameGetFamily(int iNameId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccNameGetFamily(iNameId);
  }

/**
 * @brief Get the qr card pcc display name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The display name.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccNameGetDispName(int iNameId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccNameGetDispName(iNameId);
  }

/**
 * @brief Get the qr card pcc first name.
 *
 * @param [in] iNameId The name id.
 *
 * @return The first name.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccNameGetFirst(int iNameId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccNameGetFirst(iNameId);
  }

/**
 * @brief Get the qr card pcc name type.
 *
 * @param [in] iNameId The name id.
 *
 * @return The name type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_NAME_ALIAS.
 */
  public static int Mtc_CprofQrCardPccNameGetType(int iNameId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccNameGetType(iNameId);
  }

/**
 * @brief Get the qr card pcc name preference.
 *
 * @param [in] iNameId The name id.
 *
 * @return The name preference.
 */
  public static int Mtc_CprofQrCardPccNameGetPref(int iNameId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccNameGetPref(iNameId);
  }

/**
 * @brief Get the qr card pcc address size.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The address size.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccGetAddrId
 */
  public static int Mtc_CprofQrCardPccGetAddrSize(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetAddrSize(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc address id by index.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 * @param [in] iIndex The address index.
 *
 * @return The address id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccGetAddrSize
 */
  public static int Mtc_CprofQrCardPccGetAddrId(int iTdcPccId, int iIndex) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetAddrId(iTdcPccId, iIndex);
  }

/**
 * @brief Get the qr card pcc address label.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address label.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccAddrGetLabel(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccAddrGetLabel(iAddrId);
  }

/**
 * @brief Get the qr card pcc address string.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address string.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccAddrGetAddr(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccAddrGetAddr(iAddrId);
  }

/**
 * @brief Get the qr card pcc address type.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_ADDR_HOME.
 */
  public static int Mtc_CprofQrCardPccAddrGetType(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccAddrGetType(iAddrId);
  }

/**
 * @brief Get the qr card pcc address preference.
 *
 * @param [in] iAddrId The address id.
 *
 * @return The address preference.
 */
  public static int Mtc_CprofQrCardPccAddrGetPref(int iAddrId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccAddrGetPref(iAddrId);
  }

/**
 * @brief Get the qr card pcc media size.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The media size.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccGetMediaId
 */
  public static int Mtc_CprofQrCardPccGetMediaSize(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetMediaSize(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc media id by index.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 * @param [in] iIndex The media index.
 *
 * @return The media id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccGetMediaSize
 */
  public static int Mtc_CprofQrCardPccGetMediaId(int iTdcPccId, int iIndex) {
    return MtcCprofJNI.Mtc_CprofQrCardPccGetMediaId(iTdcPccId, iIndex);
  }

/**
 * @brief Get the qr card pcc media label.
 *
 * @param [in] iMediaId The media id.
 *
 * @return The media label.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccMediaGetLabel(int iMediaId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccMediaGetLabel(iMediaId);
  }

/**
 * @brief Get the qr card pcc media url.
 *
 * @param [in] iMediaId The media id.
 *
 * @return The media url.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccMediaGetMediaUrl(int iMediaId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccMediaGetMediaUrl(iMediaId);
  }

/**
 * @brief Get the qr card pcc media type.
 *
 * @param [in] iMediaId The media id.
 *
 * @return The media type.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccMediaGetType(int iMediaId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccMediaGetType(iMediaId);
  }

/**
 * @brief Get the qr card pcc media preference.
 *
 * @param [in] iMediaId The media id.
 *
 * @return The media preference.
 */
  public static int Mtc_CprofQrCardPccMediaGetPref(int iMediaId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccMediaGetPref(iMediaId);
  }

/**
 * @brief Get the qr card pcc uri size.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The uri size.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccCommAddrGetUriId
 */
  public static int Mtc_CprofQrCardPccCommAddrGetUriSize(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccCommAddrGetUriSize(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc uri id by index.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 * @param [in] iIndex The uri index.
 *
 * @return The uri id successfully or ZMAXUINT failed.
 *
 * @see MtcCprof::Mtc_CprofQrCardPccCommAddrGetUriSize
 */
  public static int Mtc_CprofQrCardPccCommAddrGetUriId(int iTdcPccId, int iIndex) {
    return MtcCprofJNI.Mtc_CprofQrCardPccCommAddrGetUriId(iTdcPccId, iIndex);
  }

/**
 * @brief Get the qr card pcc uri label.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri label.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccUriGetLabel(int iUriId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccUriGetLabel(iUriId);
  }

/**
 * @brief Get the qr card pcc uri string.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri string.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccUriGetUri(int iUriId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccUriGetUri(iUriId);
  }

/**
 * @brief Get the qr card pcc uri type.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_URI_WORK.
 */
  public static int Mtc_CprofQrCardPccUriGetType(int iUriId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccUriGetType(iUriId);
  }

/**
 * @brief Get the qr card pcc uri preference.
 *
 * @param [in] iUriId The uri id.
 *
 * @return The uri preference.
 */
  public static int Mtc_CprofQrCardPccUriGetPref(int iUriId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccUriGetPref(iUriId);
  }

/**
 * @brief Get the qr card pcc tel size.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The tel size.
 */
  public static int Mtc_CprofQrCardPccCommAddrGetTelSize(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccCommAddrGetTelSize(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc tel id by index.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 * @param [in] iIndex The tel index.
 *
 * @return The tel id successfully or ZMAXUINT failed.
 *
 * @see Rpe_PccCommAddrGetTelSize
 */
  public static int Mtc_CprofQrCardPccCommAddrGetTelId(int iTdcPccId, int iIndex) {
    return MtcCprofJNI.Mtc_CprofQrCardPccCommAddrGetTelId(iTdcPccId, iIndex);
  }

/**
 * @brief Get the qr card pcc tel label.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel label.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccTelGetLabel(int iTelId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccTelGetLabel(iTelId);
  }

/**
 * @brief Get the qr card pcc tel string.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel string.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccTelGetTel(int iTelId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccTelGetTel(iTelId);
  }

/**
 * @brief Get the qr card pcc tel type.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_TEL_WORK.
 */
  public static int Mtc_CprofQrCardPccTelGetTelType(int iTelId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccTelGetTelType(iTelId);
  }

/**
 * @brief Get the qr card pcc xui type.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The xui type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_XUI_CAB.
 */
  public static int Mtc_CprofQrCardPccTelGetXuiType(int iTelId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccTelGetXuiType(iTelId);
  }

/**
 * @brief Get the qr card pcc tel preference.
 *
 * @param [in] iTelId The tel id.
 *
 * @return The tel preference.
 */
  public static int Mtc_CprofQrCardPccTelGetPref(int iTelId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccTelGetPref(iTelId);
  }

/**
 * @brief Get the qr card pcc birth date.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The birth date.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccBirthGetDate(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccBirthGetDate(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc birth non-gregorian.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The birth non-gregorian.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccBirthGetNonGregDate(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccBirthGetNonGregDate(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc birth place.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The birth place.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccBirthGetPlace(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccBirthGetPlace(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc birth calendars type.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The calendars type, @see @ref MtcCprofConstants::EN_MTC_CPROF_PCC_CAL_AKAN.
 */
  public static int Mtc_CprofQrCardPccBirthGetCalType(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccBirthGetCalType(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc career employer.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The career employer.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccCareerGetEmployer(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccCareerGetEmployer(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc career duty.
 *
 * @param [in] iTdcPccId The qr card pcc id.
 *
 * @return The career duty.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccCareerGetDuty(int iTdcPccId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccCareerGetDuty(iTdcPccId);
  }

/**
 * @brief Get the qr card pcc icon uri.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return The icon uri.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccIconGetUri(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconGetUri(iIconId);
  }

/**
 * @brief Get the qr card pcc icon X-Resolution.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return The icon X-Resolution type, @see @ref MtcCprofConstants::EN_MTC_CPROF_XRESOLUTION_16.
 */
  public static int Mtc_CprofQrCardPccIconGetXResolution(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconGetXResolution(iIconId);
  }

/**
 * @brief Get the qr card pcc icon etag.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return The icon etag.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccIconGetEtag(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconGetEtag(iIconId);
  }

/**
 * @brief Get the qr card pcc icon mime type.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return The mime type, @see @ref MtcCprofConstants::EN_MTC_CPROF_MIME_UNKNOWN.
 */
  public static int Mtc_CprofQrCardPccIconGetMimeType(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconGetMimeType(iIconId);
  }

/**
 * @brief Get the qr card pcc icon encoding type.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return The encoding type, @see @ref MtcCprofConstants::EN_MTC_CPROF_ENCODING_UNKNOWN.
 */
  public static int Mtc_CprofQrCardPccIconGetEncodingType(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconGetEncodingType(iIconId);
  }

/**
 * @brief Get the qr card pcc icon description.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return The icon description.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccIconGetDesc(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconGetDesc(iIconId);
  }

/**
 * @brief Get the qr card pcc icon data.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return The icon data.
 *   The caller must copy it, then use.
 */
  public static String Mtc_CprofQrCardPccIconGetData(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconGetData(iIconId);
  }

/**
 * @brief Check has the qr card pcc icon data.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @return true if exist icon data, otherwise false.
 */
  public static boolean Mtc_CprofQrCardPccIconHasData(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconHasData(iIconId);
  }

/**
 * @brief Clear the qr card pcc icon data.
 *
 * @param [in] iIconId The qr card pcc icon id.
 *
 * @retval MtcCommonConstants::ZOK Clear icon data successfully.
 * @retval MtcCommonConstants::ZFAILED Clear icon data failed.
 */
  public static int Mtc_CprofQrCardPccIconClrData(int iIconId) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconClrData(iIconId);
  }

/**
 * @brief Get the qr card pcc icon export file.
 *
 * @param [in] iIconId The qr card pcc icon id.
 * @param [in] pcFileName The file name with path.
 *
 * @retval MtcCommonConstants::ZOK Export file successfully.
 * @retval MtcCommonConstants::ZFAILED Export file failed.
 */
  public static int Mtc_CprofQrCardPccIconExportFile(int iIconId, String pcFileName) {
    return MtcCprofJNI.Mtc_CprofQrCardPccIconExportFile(iIconId, pcFileName);
  }

}
