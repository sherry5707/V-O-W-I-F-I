/**
 * @file MtcVshareConstants.java
 * @brief MtcVshareConstants constants
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.cmcc.app.lemon;

/**
 * @brief MtcVshareConstants constants
 */
public interface MtcVshareConstants {
  public final static int MTC_EBASE_CP = 0xE000; /**< @brief CP error base */
  public final static int MTC_EBASE_REG = 0xE100; /**< @brief REG error base */
  public final static int MTC_EBASE_CALL = 0xE200; /**< @brief CALL error base */
  public final static int MTC_EBASE_VSHARE = 0xE300; /**< @brief VSHARE error base */
  public final static int MTC_EBASE_CAP = 0xE400; /**< @brief CAP error base */
  public final static int MTC_EBASE_BUDDY = 0xE500; /**< @brief BUDDY error base */
  public final static int MTC_EBASE_GRP = 0xE600; /**< @brief GRP error base */
  public final static int MTC_EBASE_CONF = 0xE700; /**< @brief CONF error base */
  public final static int MTC_EBASE_GS = 0xE800; /**< @brief GS error base */
  public final static int MTC_EBASE_PRES = 0xE900; /**< @brief PRES error base */
  public final static int MTC_EBASE_IM = 0xEA00; /**< @brief IM error base */
  public final static int MTC_EBASE_LCS = 0xEB00; /**< @brief LCS error base */
  public final static int MTC_EBASE_PA = 0xEC00; /**< @brief PA error base */
  public final static int MTC_EBASE_CPROF = 0xED00; /**< @brief CRPOF error base */
  public final static int MTC_EBASE_GBA = 0xEE00; /**< @brief GBA error base */
  public final static int MTC_VSHARE_ERR_NO = (0xE300+0); /**< @brief no error. */
  public final static int MTC_VSHARE_ERR_AUTH_FAILED = (0xE300+1); /**< @brief authentication failed, invalid user or password. */
  public final static int MTC_VSHARE_ERR_SESS_TMR = (0xE300+2); /**< @brief call refresh error. */
  public final static int MTC_VSHARE_ERR_FORBIDDEN = (0xE300+3); /**< @brief call forbidden. */
  public final static int MTC_VSHARE_ERR_NOT_FOUND = (0xE300+4); /**< @brief call participant not found. */
  public final static int MTC_VSHARE_ERR_NOT_ACPTED = (0xE300+5); /**< @brief call not accepted. */
  public final static int MTC_VSHARE_ERR_TEMP_UNAVAIL = (0xE300+6); /**< @brief call participant temp unavailable. */
  public final static int MTC_VSHARE_ERR_REQ_TERMED = (0xE300+7); /**< @brief call request terminated. */
  public final static int MTC_VSHARE_ERR_INTERNAL_ERR = (0xE300+8); /**< @brief server internal error. */
  public final static int MTC_VSHARE_ERR_SRV_UNAVAIL = (0xE300+9); /**< @brief service unavailable. */
  public final static int MTC_VSHARE_ERR_NOT_EXIST = (0xE300+10); /**< @brief not exist. */
  public final static int MTC_VSHARE_ERR_OTHER = (0xE300+11); /**< @brief other error. */
  public final static int MTC_VSHARE_TERM_BYE = (0xE300+21); /**< @brief Terminated by bye. */
  public final static int MTC_VSHARE_TERM_CANCEL = (0xE300+22); /**< @brief Terminated by cancel. */
  public final static int MTC_VSHARE_TERM_TIMEOUT = (0xE300+23); /**< @brief Terminated by timeout. */
  public final static int MTC_VSHARE_TERM_BUSY = (0xE300+24); /**< @brief Terminated by busy. */
  public final static int MTC_VSHARE_TERM_DECLINE = (0xE300+25); /**< @brief Terminated by decline. */
  public final static int MTC_VSHARE_TERM_TRSFED = (0xE300+26); /**< @brief Terminated by transfered. */
  public final static int MTC_VSHARE_TERM_REDIRECT = (0xE300+27); /**< @brief Terminated by redirect. */
  public final static int MTC_VSHARE_ALERT_RING = (0xE300+41); /**< @brief Alerted by 180. */
  public final static int MTC_VSHARE_ALERT_QUEUED = (0xE300+42); /**< @brief Alerted by 182. */
  public final static int MTC_VSHARE_ALERT_PROGRESS = (0xE300+43); /**< @brief Alerted by 183. */
  // EN_MTC_VSHARE_TERM_REASON_TYPE 
  public final static int EN_MTC_VSHARE_TERM_REASON_NORMAL = 0; /**< @brief normal session term, bye or cancel */
  public final static int EN_MTC_VSHARE_TERM_REASON_BUSY = EN_MTC_VSHARE_TERM_REASON_NORMAL + 1; /**< @brief the session is rejected */
  public final static int EN_MTC_VSHARE_TERM_REASON_DECLINE = EN_MTC_VSHARE_TERM_REASON_BUSY + 1; /**< @brief decline the session */
  public final static int EN_MTC_VSHARE_TERM_REASON_NOT_AVAILABLE = EN_MTC_VSHARE_TERM_REASON_DECLINE + 1; /**< @brief the user is not available */

}
